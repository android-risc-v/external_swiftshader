/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void ARMInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &O) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "vcx1\t\0"
  /* 6 */ "vld20.32\t\0"
  /* 16 */ "vst20.32\t\0"
  /* 26 */ "vld40.32\t\0"
  /* 36 */ "vst40.32\t\0"
  /* 46 */ "sha1su0.32\t\0"
  /* 58 */ "sha256su0.32\t\0"
  /* 72 */ "vld21.32\t\0"
  /* 82 */ "vst21.32\t\0"
  /* 92 */ "vld41.32\t\0"
  /* 102 */ "vst41.32\t\0"
  /* 112 */ "sha1su1.32\t\0"
  /* 124 */ "sha256su1.32\t\0"
  /* 138 */ "vld42.32\t\0"
  /* 148 */ "vst42.32\t\0"
  /* 158 */ "sha256h2.32\t\0"
  /* 171 */ "vld43.32\t\0"
  /* 181 */ "vst43.32\t\0"
  /* 191 */ "sha1c.32\t\0"
  /* 201 */ "sha1h.32\t\0"
  /* 211 */ "sha256h.32\t\0"
  /* 223 */ "sha1m.32\t\0"
  /* 233 */ "sha1p.32\t\0"
  /* 243 */ "dlstp.32\t\0"
  /* 253 */ "wlstp.32\t\0"
  /* 263 */ "vcvta.s32.f32\t\0"
  /* 278 */ "vcvtm.s32.f32\t\0"
  /* 293 */ "vcvtn.s32.f32\t\0"
  /* 308 */ "vcvtp.s32.f32\t\0"
  /* 323 */ "vcvta.u32.f32\t\0"
  /* 338 */ "vcvtm.u32.f32\t\0"
  /* 353 */ "vcvtn.u32.f32\t\0"
  /* 368 */ "vcvtp.u32.f32\t\0"
  /* 383 */ "vcmla.f32\t\0"
  /* 394 */ "vrinta.f32\t\0"
  /* 406 */ "vcadd.f32\t\0"
  /* 417 */ "vselge.f32\t\0"
  /* 429 */ "vminnm.f32\t\0"
  /* 441 */ "vmaxnm.f32\t\0"
  /* 453 */ "vrintm.f32\t\0"
  /* 465 */ "vrintn.f32\t\0"
  /* 477 */ "vrintp.f32\t\0"
  /* 489 */ "vseleq.f32\t\0"
  /* 501 */ "vselvs.f32\t\0"
  /* 513 */ "vselgt.f32\t\0"
  /* 525 */ "vrintx.f32\t\0"
  /* 537 */ "vrintz.f32\t\0"
  /* 549 */ "ldc2\t\0"
  /* 555 */ "mrc2\t\0"
  /* 561 */ "mrrc2\t\0"
  /* 568 */ "stc2\t\0"
  /* 574 */ "cdp2\t\0"
  /* 580 */ "mcr2\t\0"
  /* 586 */ "mcrr2\t\0"
  /* 593 */ "vcx2\t\0"
  /* 599 */ "vcx3\t\0"
  /* 605 */ "dlstp.64\t\0"
  /* 615 */ "wlstp.64\t\0"
  /* 625 */ "vcvta.s32.f64\t\0"
  /* 640 */ "vcvtm.s32.f64\t\0"
  /* 655 */ "vcvtn.s32.f64\t\0"
  /* 670 */ "vcvtp.s32.f64\t\0"
  /* 685 */ "vcvta.u32.f64\t\0"
  /* 700 */ "vcvtm.u32.f64\t\0"
  /* 715 */ "vcvtn.u32.f64\t\0"
  /* 730 */ "vcvtp.u32.f64\t\0"
  /* 745 */ "vrinta.f64\t\0"
  /* 757 */ "vselge.f64\t\0"
  /* 769 */ "vminnm.f64\t\0"
  /* 781 */ "vmaxnm.f64\t\0"
  /* 793 */ "vrintm.f64\t\0"
  /* 805 */ "vrintn.f64\t\0"
  /* 817 */ "vrintp.f64\t\0"
  /* 829 */ "vseleq.f64\t\0"
  /* 841 */ "vselvs.f64\t\0"
  /* 853 */ "vselgt.f64\t\0"
  /* 865 */ "vmull.p64\t\0"
  /* 876 */ "vld20.16\t\0"
  /* 886 */ "vst20.16\t\0"
  /* 896 */ "vld40.16\t\0"
  /* 906 */ "vst40.16\t\0"
  /* 916 */ "vld21.16\t\0"
  /* 926 */ "vst21.16\t\0"
  /* 936 */ "vld41.16\t\0"
  /* 946 */ "vst41.16\t\0"
  /* 956 */ "vld42.16\t\0"
  /* 966 */ "vst42.16\t\0"
  /* 976 */ "vld43.16\t\0"
  /* 986 */ "vst43.16\t\0"
  /* 996 */ "dlstp.16\t\0"
  /* 1006 */ "wlstp.16\t\0"
  /* 1016 */ "vcvta.s32.f16\t\0"
  /* 1031 */ "vcvtm.s32.f16\t\0"
  /* 1046 */ "vcvtn.s32.f16\t\0"
  /* 1061 */ "vcvtp.s32.f16\t\0"
  /* 1076 */ "vcvta.u32.f16\t\0"
  /* 1091 */ "vcvtm.u32.f16\t\0"
  /* 1106 */ "vcvtn.u32.f16\t\0"
  /* 1121 */ "vcvtp.u32.f16\t\0"
  /* 1136 */ "vcvta.s16.f16\t\0"
  /* 1151 */ "vcvtm.s16.f16\t\0"
  /* 1166 */ "vcvtn.s16.f16\t\0"
  /* 1181 */ "vcvtp.s16.f16\t\0"
  /* 1196 */ "vcvta.u16.f16\t\0"
  /* 1211 */ "vcvtm.u16.f16\t\0"
  /* 1226 */ "vcvtn.u16.f16\t\0"
  /* 1241 */ "vcvtp.u16.f16\t\0"
  /* 1256 */ "vcmla.f16\t\0"
  /* 1267 */ "vrinta.f16\t\0"
  /* 1279 */ "vcadd.f16\t\0"
  /* 1290 */ "vselge.f16\t\0"
  /* 1302 */ "vfmal.f16\t\0"
  /* 1313 */ "vfmsl.f16\t\0"
  /* 1324 */ "vminnm.f16\t\0"
  /* 1336 */ "vmaxnm.f16\t\0"
  /* 1348 */ "vrintm.f16\t\0"
  /* 1360 */ "vrintn.f16\t\0"
  /* 1372 */ "vrintp.f16\t\0"
  /* 1384 */ "vseleq.f16\t\0"
  /* 1396 */ "vins.f16\t\0"
  /* 1406 */ "vselvs.f16\t\0"
  /* 1418 */ "vselgt.f16\t\0"
  /* 1430 */ "vrintx.f16\t\0"
  /* 1442 */ "vmovx.f16\t\0"
  /* 1453 */ "vrintz.f16\t\0"
  /* 1465 */ "vmmla.bf16\t\0"
  /* 1477 */ "vfmab.bf16\t\0"
  /* 1489 */ "vfmat.bf16\t\0"
  /* 1501 */ "vdot.bf16\t\0"
  /* 1512 */ "vld20.8\t\0"
  /* 1521 */ "vst20.8\t\0"
  /* 1530 */ "vld40.8\t\0"
  /* 1539 */ "vst40.8\t\0"
  /* 1548 */ "vld21.8\t\0"
  /* 1557 */ "vst21.8\t\0"
  /* 1566 */ "vld41.8\t\0"
  /* 1575 */ "vst41.8\t\0"
  /* 1584 */ "vld42.8\t\0"
  /* 1593 */ "vst42.8\t\0"
  /* 1602 */ "vld43.8\t\0"
  /* 1611 */ "vst43.8\t\0"
  /* 1620 */ "aesimc.8\t\0"
  /* 1630 */ "aesmc.8\t\0"
  /* 1639 */ "aesd.8\t\0"
  /* 1647 */ "aese.8\t\0"
  /* 1655 */ "dlstp.8\t\0"
  /* 1664 */ "wlstp.8\t\0"
  /* 1673 */ "vusmmla.s8\t\0"
  /* 1685 */ "vsmmla.s8\t\0"
  /* 1696 */ "vusdot.s8\t\0"
  /* 1707 */ "vsdot.s8\t\0"
  /* 1717 */ "vummla.u8\t\0"
  /* 1728 */ "vsudot.u8\t\0"
  /* 1739 */ "vudot.u8\t\0"
  /* 1749 */ "vcx1a\t\0"
  /* 1756 */ "vcx2a\t\0"
  /* 1763 */ "vcx3a\t\0"
  /* 1770 */ "rfeda\t\0"
  /* 1777 */ "rfeia\t\0"
  /* 1784 */ "crc32b\t\0"
  /* 1792 */ "crc32cb\t\0"
  /* 1801 */ "rfedb\t\0"
  /* 1808 */ "rfeib\t\0"
  /* 1815 */ "dmb\t\0"
  /* 1820 */ "dsb\t\0"
  /* 1825 */ "isb\t\0"
  /* 1830 */ "tsb\t\0"
  /* 1835 */ "csinc\t\0"
  /* 1842 */ "hvc\t\0"
  /* 1847 */ "cx1d\t\0"
  /* 1853 */ "cx2d\t\0"
  /* 1859 */ "cx3d\t\0"
  /* 1865 */ "pld\t\0"
  /* 1870 */ "setend\t\0"
  /* 1878 */ "le\t\0"
  /* 1882 */ "udf\t\0"
  /* 1887 */ "csneg\t\0"
  /* 1894 */ "crc32h\t\0"
  /* 1902 */ "crc32ch\t\0"
  /* 1911 */ "pli\t\0"
  /* 1916 */ "ldc2l\t\0"
  /* 1923 */ "stc2l\t\0"
  /* 1930 */ "bl\t\0"
  /* 1934 */ "bfcsel\t\0"
  /* 1942 */ "setpan\t\0"
  /* 1950 */ "letp\t\0"
  /* 1956 */ "dls\t\0"
  /* 1961 */ "wls\t\0"
  /* 1966 */ "cps\t\0"
  /* 1971 */ "movs\t\0"
  /* 1977 */ "hlt\t\0"
  /* 1982 */ "bkpt\t\0"
  /* 1988 */ "csinv\t\0"
  /* 1995 */ "hvc.w\t\0"
  /* 2002 */ "udf.w\t\0"
  /* 2009 */ "crc32w\t\0"
  /* 2017 */ "crc32cw\t\0"
  /* 2026 */ "pldw\t\0"
  /* 2032 */ "bx\t\0"
  /* 2036 */ "blx\t\0"
  /* 2041 */ "cbz\t\0"
  /* 2046 */ "cbnz\t\0"
  /* 2052 */ "srsda\tsp!, \0"
  /* 2064 */ "srsia\tsp!, \0"
  /* 2076 */ "srsdb\tsp!, \0"
  /* 2088 */ "srsib\tsp!, \0"
  /* 2100 */ "srsda\tsp, \0"
  /* 2111 */ "srsia\tsp, \0"
  /* 2122 */ "srsdb\tsp, \0"
  /* 2133 */ "srsib\tsp, \0"
  /* 2144 */ "# XRay Function Patchable RET.\0"
  /* 2175 */ "# XRay Typed Event Log.\0"
  /* 2199 */ "# XRay Custom Event Log.\0"
  /* 2224 */ "# XRay Function Enter.\0"
  /* 2247 */ "# XRay Tail Call Exit.\0"
  /* 2270 */ "# XRay Function Exit.\0"
  /* 2292 */ "__brkdiv0\0"
  /* 2302 */ "vld1\0"
  /* 2307 */ "dcps1\0"
  /* 2313 */ "vst1\0"
  /* 2318 */ "vcx1\0"
  /* 2323 */ "vrev32\0"
  /* 2330 */ "ldc2\0"
  /* 2335 */ "mrc2\0"
  /* 2340 */ "mrrc2\0"
  /* 2346 */ "stc2\0"
  /* 2351 */ "vld2\0"
  /* 2356 */ "cdp2\0"
  /* 2361 */ "mcr2\0"
  /* 2366 */ "mcrr2\0"
  /* 2372 */ "dcps2\0"
  /* 2378 */ "vst2\0"
  /* 2383 */ "vcx2\0"
  /* 2388 */ "vld3\0"
  /* 2393 */ "dcps3\0"
  /* 2399 */ "vst3\0"
  /* 2404 */ "vcx3\0"
  /* 2409 */ "vrev64\0"
  /* 2416 */ "vld4\0"
  /* 2421 */ "vst4\0"
  /* 2426 */ "sxtab16\0"
  /* 2434 */ "uxtab16\0"
  /* 2442 */ "sxtb16\0"
  /* 2449 */ "uxtb16\0"
  /* 2456 */ "shsub16\0"
  /* 2464 */ "uhsub16\0"
  /* 2472 */ "uqsub16\0"
  /* 2480 */ "ssub16\0"
  /* 2487 */ "usub16\0"
  /* 2494 */ "shadd16\0"
  /* 2502 */ "uhadd16\0"
  /* 2510 */ "uqadd16\0"
  /* 2518 */ "sadd16\0"
  /* 2525 */ "uadd16\0"
  /* 2532 */ "ssat16\0"
  /* 2539 */ "usat16\0"
  /* 2546 */ "vrev16\0"
  /* 2553 */ "usada8\0"
  /* 2560 */ "shsub8\0"
  /* 2567 */ "uhsub8\0"
  /* 2574 */ "uqsub8\0"
  /* 2581 */ "ssub8\0"
  /* 2587 */ "usub8\0"
  /* 2593 */ "usad8\0"
  /* 2599 */ "shadd8\0"
  /* 2606 */ "uhadd8\0"
  /* 2613 */ "uqadd8\0"
  /* 2620 */ "sadd8\0"
  /* 2626 */ "uadd8\0"
  /* 2632 */ "LIFETIME_END\0"
  /* 2645 */ "BUNDLE\0"
  /* 2652 */ "DBG_VALUE\0"
  /* 2662 */ "DBG_LABEL\0"
  /* 2672 */ "@ COMPILER BARRIER\0"
  /* 2691 */ "LIFETIME_START\0"
  /* 2706 */ "vcx1a\0"
  /* 2712 */ "vcx2a\0"
  /* 2718 */ "vcx3a\0"
  /* 2724 */ "vaba\0"
  /* 2729 */ "cx1da\0"
  /* 2735 */ "cx2da\0"
  /* 2741 */ "cx3da\0"
  /* 2747 */ "lda\0"
  /* 2751 */ "ldmda\0"
  /* 2757 */ "stmda\0"
  /* 2763 */ "vrmlaldavha\0"
  /* 2775 */ "vrmlsldavha\0"
  /* 2787 */ "rfeia\0"
  /* 2793 */ "vldmia\0"
  /* 2800 */ "vstmia\0"
  /* 2807 */ "srsia\0"
  /* 2813 */ "vcmla\0"
  /* 2819 */ "smmla\0"
  /* 2825 */ "vnmla\0"
  /* 2831 */ "vmla\0"
  /* 2836 */ "vfma\0"
  /* 2841 */ "vfnma\0"
  /* 2847 */ "vminnma\0"
  /* 2855 */ "vmaxnma\0"
  /* 2863 */ "vmina\0"
  /* 2869 */ "vrsra\0"
  /* 2875 */ "vsra\0"
  /* 2880 */ "vrinta\0"
  /* 2887 */ "tta\0"
  /* 2891 */ "vcvta\0"
  /* 2897 */ "vmladava\0"
  /* 2906 */ "vmlaldava\0"
  /* 2916 */ "vmlsldava\0"
  /* 2926 */ "vmlsdava\0"
  /* 2935 */ "vaddva\0"
  /* 2942 */ "vaddlva\0"
  /* 2950 */ "vmaxa\0"
  /* 2956 */ "ldab\0"
  /* 2961 */ "sxtab\0"
  /* 2967 */ "uxtab\0"
  /* 2973 */ "smlabb\0"
  /* 2980 */ "smlalbb\0"
  /* 2988 */ "smulbb\0"
  /* 2995 */ "tbb\0"
  /* 2999 */ "rfedb\0"
  /* 3005 */ "vldmdb\0"
  /* 3012 */ "vstmdb\0"
  /* 3019 */ "srsdb\0"
  /* 3025 */ "ldmib\0"
  /* 3031 */ "stmib\0"
  /* 3037 */ "vshllb\0"
  /* 3044 */ "vqdmullb\0"
  /* 3053 */ "vmullb\0"
  /* 3060 */ "stlb\0"
  /* 3065 */ "vmovlb\0"
  /* 3072 */ "dmb\0"
  /* 3076 */ "vqshrnb\0"
  /* 3084 */ "vqrshrnb\0"
  /* 3093 */ "vrshrnb\0"
  /* 3101 */ "vshrnb\0"
  /* 3108 */ "vqshrunb\0"
  /* 3117 */ "vqrshrunb\0"
  /* 3127 */ "vqmovunb\0"
  /* 3136 */ "vqmovnb\0"
  /* 3144 */ "vmovnb\0"
  /* 3151 */ "swpb\0"
  /* 3156 */ "vldrb\0"
  /* 3162 */ "vstrb\0"
  /* 3168 */ "dsb\0"
  /* 3172 */ "isb\0"
  /* 3176 */ "ldrsb\0"
  /* 3182 */ "tsb\0"
  /* 3186 */ "smlatb\0"
  /* 3193 */ "pkhtb\0"
  /* 3199 */ "smlaltb\0"
  /* 3207 */ "smultb\0"
  /* 3214 */ "vcvtb\0"
  /* 3220 */ "sxtb\0"
  /* 3225 */ "uxtb\0"
  /* 3230 */ "qdsub\0"
  /* 3236 */ "vhsub\0"
  /* 3242 */ "vqsub\0"
  /* 3248 */ "vsub\0"
  /* 3253 */ "smlawb\0"
  /* 3260 */ "smulwb\0"
  /* 3267 */ "ldaexb\0"
  /* 3274 */ "stlexb\0"
  /* 3281 */ "ldrexb\0"
  /* 3288 */ "strexb\0"
  /* 3295 */ "vsbc\0"
  /* 3300 */ "vadc\0"
  /* 3305 */ "ldc\0"
  /* 3309 */ "bfc\0"
  /* 3313 */ "vbic\0"
  /* 3318 */ "vshlc\0"
  /* 3324 */ "smc\0"
  /* 3328 */ "mrc\0"
  /* 3332 */ "mrrc\0"
  /* 3337 */ "rsc\0"
  /* 3341 */ "stc\0"
  /* 3345 */ "svc\0"
  /* 3349 */ "smlad\0"
  /* 3355 */ "smuad\0"
  /* 3361 */ "vabd\0"
  /* 3366 */ "vhcadd\0"
  /* 3373 */ "vcadd\0"
  /* 3379 */ "qdadd\0"
  /* 3385 */ "vrhadd\0"
  /* 3392 */ "vhadd\0"
  /* 3398 */ "vpadd\0"
  /* 3404 */ "vqadd\0"
  /* 3410 */ "vadd\0"
  /* 3415 */ "smlald\0"
  /* 3422 */ "pld\0"
  /* 3426 */ "smlsld\0"
  /* 3433 */ "vand\0"
  /* 3438 */ "vldrd\0"
  /* 3444 */ "vstrd\0"
  /* 3450 */ "smlsd\0"
  /* 3456 */ "smusd\0"
  /* 3462 */ "ldaexd\0"
  /* 3469 */ "stlexd\0"
  /* 3476 */ "ldrexd\0"
  /* 3483 */ "strexd\0"
  /* 3490 */ "vacge\0"
  /* 3496 */ "vcge\0"
  /* 3501 */ "vcle\0"
  /* 3506 */ "vrecpe\0"
  /* 3513 */ "vcmpe\0"
  /* 3519 */ "vrsqrte\0"
  /* 3527 */ "bf\0"
  /* 3530 */ "vbif\0"
  /* 3535 */ "dbg\0"
  /* 3539 */ "vqneg\0"
  /* 3545 */ "vneg\0"
  /* 3550 */ "sg\0"
  /* 3553 */ "ldah\0"
  /* 3558 */ "vqdmlah\0"
  /* 3566 */ "vqrdmlah\0"
  /* 3575 */ "sxtah\0"
  /* 3581 */ "uxtah\0"
  /* 3587 */ "tbh\0"
  /* 3591 */ "vqdmladh\0"
  /* 3600 */ "vqrdmladh\0"
  /* 3610 */ "vqdmlsdh\0"
  /* 3619 */ "vqrdmlsdh\0"
  /* 3629 */ "stlh\0"
  /* 3634 */ "vqdmulh\0"
  /* 3642 */ "vqrdmulh\0"
  /* 3651 */ "vrmulh\0"
  /* 3658 */ "vmulh\0"
  /* 3664 */ "vldrh\0"
  /* 3670 */ "vstrh\0"
  /* 3676 */ "vqdmlash\0"
  /* 3685 */ "vqrdmlash\0"
  /* 3695 */ "vqrdmlsh\0"
  /* 3704 */ "ldrsh\0"
  /* 3710 */ "push\0"
  /* 3715 */ "revsh\0"
  /* 3721 */ "sxth\0"
  /* 3726 */ "uxth\0"
  /* 3731 */ "vrmlaldavh\0"
  /* 3742 */ "vrmlsldavh\0"
  /* 3753 */ "ldaexh\0"
  /* 3760 */ "stlexh\0"
  /* 3767 */ "ldrexh\0"
  /* 3774 */ "strexh\0"
  /* 3781 */ "vsbci\0"
  /* 3787 */ "vadci\0"
  /* 3793 */ "bfi\0"
  /* 3797 */ "pli\0"
  /* 3801 */ "vsli\0"
  /* 3806 */ "vsri\0"
  /* 3811 */ "bxj\0"
  /* 3815 */ "ldc2l\0"
  /* 3821 */ "stc2l\0"
  /* 3827 */ "umaal\0"
  /* 3833 */ "vabal\0"
  /* 3839 */ "vpadal\0"
  /* 3846 */ "vqdmlal\0"
  /* 3854 */ "smlal\0"
  /* 3860 */ "umlal\0"
  /* 3866 */ "vmlal\0"
  /* 3872 */ "vtbl\0"
  /* 3877 */ "vsubl\0"
  /* 3883 */ "ldcl\0"
  /* 3888 */ "stcl\0"
  /* 3893 */ "vabdl\0"
  /* 3899 */ "vpaddl\0"
  /* 3906 */ "vaddl\0"
  /* 3912 */ "vpsel\0"
  /* 3918 */ "bfl\0"
  /* 3922 */ "sqshl\0"
  /* 3928 */ "uqshl\0"
  /* 3934 */ "vqshl\0"
  /* 3940 */ "uqrshl\0"
  /* 3947 */ "vqrshl\0"
  /* 3954 */ "vrshl\0"
  /* 3960 */ "vshl\0"
  /* 3965 */ "# FEntry call\0"
  /* 3979 */ "sqshll\0"
  /* 3986 */ "uqshll\0"
  /* 3993 */ "uqrshll\0"
  /* 4001 */ "vshll\0"
  /* 4007 */ "lsll\0"
  /* 4012 */ "vqdmull\0"
  /* 4020 */ "smull\0"
  /* 4026 */ "umull\0"
  /* 4032 */ "vmull\0"
  /* 4038 */ "sqrshrl\0"
  /* 4046 */ "srshrl\0"
  /* 4053 */ "urshrl\0"
  /* 4060 */ "asrl\0"
  /* 4065 */ "lsrl\0"
  /* 4070 */ "vbsl\0"
  /* 4075 */ "vqdmlsl\0"
  /* 4083 */ "vmlsl\0"
  /* 4089 */ "stl\0"
  /* 4093 */ "vcmul\0"
  /* 4099 */ "smmul\0"
  /* 4105 */ "vnmul\0"
  /* 4111 */ "vmul\0"
  /* 4116 */ "vmovl\0"
  /* 4122 */ "vlldm\0"
  /* 4128 */ "vminnm\0"
  /* 4135 */ "vmaxnm\0"
  /* 4142 */ "vscclrm\0"
  /* 4150 */ "vrintm\0"
  /* 4157 */ "vlstm\0"
  /* 4163 */ "vcvtm\0"
  /* 4169 */ "vrsubhn\0"
  /* 4177 */ "vsubhn\0"
  /* 4184 */ "vraddhn\0"
  /* 4192 */ "vaddhn\0"
  /* 4199 */ "vpmin\0"
  /* 4205 */ "vmin\0"
  /* 4210 */ "cmn\0"
  /* 4214 */ "vqshrn\0"
  /* 4221 */ "vqrshrn\0"
  /* 4229 */ "vrshrn\0"
  /* 4236 */ "vshrn\0"
  /* 4242 */ "vorn\0"
  /* 4247 */ "vtrn\0"
  /* 4252 */ "vrintn\0"
  /* 4259 */ "vcvtn\0"
  /* 4265 */ "vqshrun\0"
  /* 4273 */ "vqrshrun\0"
  /* 4282 */ "vqmovun\0"
  /* 4290 */ "vmvn\0"
  /* 4295 */ "vqmovn\0"
  /* 4302 */ "vmovn\0"
  /* 4308 */ "trap\0"
  /* 4313 */ "cdp\0"
  /* 4317 */ "vzip\0"
  /* 4322 */ "vcmp\0"
  /* 4327 */ "pop\0"
  /* 4331 */ "lctp\0"
  /* 4336 */ "vctp\0"
  /* 4341 */ "vrintp\0"
  /* 4348 */ "vcvtp\0"
  /* 4354 */ "vddup\0"
  /* 4360 */ "vidup\0"
  /* 4366 */ "vdup\0"
  /* 4371 */ "vdwdup\0"
  /* 4378 */ "viwdup\0"
  /* 4385 */ "vswp\0"
  /* 4390 */ "vuzp\0"
  /* 4395 */ "vceq\0"
  /* 4400 */ "teq\0"
  /* 4404 */ "smmlar\0"
  /* 4411 */ "mcr\0"
  /* 4415 */ "adr\0"
  /* 4419 */ "vldr\0"
  /* 4424 */ "sqrshr\0"
  /* 4431 */ "srshr\0"
  /* 4437 */ "urshr\0"
  /* 4443 */ "vrshr\0"
  /* 4449 */ "vshr\0"
  /* 4454 */ "smmulr\0"
  /* 4461 */ "veor\0"
  /* 4466 */ "ror\0"
  /* 4470 */ "mcrr\0"
  /* 4475 */ "vorr\0"
  /* 4480 */ "asr\0"
  /* 4484 */ "smmlsr\0"
  /* 4491 */ "vmsr\0"
  /* 4496 */ "vbrsr\0"
  /* 4502 */ "vrintr\0"
  /* 4509 */ "vstr\0"
  /* 4514 */ "vcvtr\0"
  /* 4520 */ "vmlas\0"
  /* 4526 */ "vfmas\0"
  /* 4532 */ "vqabs\0"
  /* 4538 */ "vabs\0"
  /* 4543 */ "subs\0"
  /* 4548 */ "vcls\0"
  /* 4553 */ "smmls\0"
  /* 4559 */ "vnmls\0"
  /* 4565 */ "vmls\0"
  /* 4570 */ "vfms\0"
  /* 4575 */ "vfnms\0"
  /* 4581 */ "bxns\0"
  /* 4586 */ "blxns\0"
  /* 4592 */ "vrecps\0"
  /* 4599 */ "vmrs\0"
  /* 4604 */ "asrs\0"
  /* 4609 */ "lsrs\0"
  /* 4614 */ "vrsqrts\0"
  /* 4622 */ "movs\0"
  /* 4627 */ "ssat\0"
  /* 4632 */ "usat\0"
  /* 4637 */ "ttat\0"
  /* 4642 */ "smlabt\0"
  /* 4649 */ "pkhbt\0"
  /* 4655 */ "smlalbt\0"
  /* 4663 */ "smulbt\0"
  /* 4670 */ "ldrbt\0"
  /* 4676 */ "strbt\0"
  /* 4682 */ "ldrsbt\0"
  /* 4689 */ "eret\0"
  /* 4694 */ "vacgt\0"
  /* 4700 */ "vcgt\0"
  /* 4705 */ "ldrht\0"
  /* 4711 */ "strht\0"
  /* 4717 */ "ldrsht\0"
  /* 4724 */ "rbit\0"
  /* 4729 */ "vbit\0"
  /* 4734 */ "vclt\0"
  /* 4739 */ "vshllt\0"
  /* 4746 */ "vqdmullt\0"
  /* 4755 */ "vmullt\0"
  /* 4762 */ "vmovlt\0"
  /* 4769 */ "vcnt\0"
  /* 4774 */ "hint\0"
  /* 4779 */ "vqshrnt\0"
  /* 4787 */ "vqrshrnt\0"
  /* 4796 */ "vrshrnt\0"
  /* 4804 */ "vshrnt\0"
  /* 4811 */ "vqshrunt\0"
  /* 4820 */ "vqrshrunt\0"
  /* 4830 */ "vqmovunt\0"
  /* 4839 */ "vqmovnt\0"
  /* 4847 */ "vmovnt\0"
  /* 4854 */ "vpnot\0"
  /* 4860 */ "vpt\0"
  /* 4864 */ "ldrt\0"
  /* 4869 */ "vsqrt\0"
  /* 4875 */ "strt\0"
  /* 4880 */ "vpst\0"
  /* 4885 */ "vtst\0"
  /* 4890 */ "smlatt\0"
  /* 4897 */ "smlaltt\0"
  /* 4905 */ "smultt\0"
  /* 4912 */ "ttt\0"
  /* 4916 */ "vcvtt\0"
  /* 4922 */ "vjcvt\0"
  /* 4928 */ "vcvt\0"
  /* 4933 */ "movt\0"
  /* 4938 */ "smlawt\0"
  /* 4945 */ "smulwt\0"
  /* 4952 */ "vext\0"
  /* 4957 */ "vqshlu\0"
  /* 4964 */ "vabav\0"
  /* 4970 */ "vmladav\0"
  /* 4978 */ "vmlaldav\0"
  /* 4987 */ "vmlsldav\0"
  /* 4996 */ "vmlsdav\0"
  /* 5004 */ "vminnmav\0"
  /* 5013 */ "vmaxnmav\0"
  /* 5022 */ "vminav\0"
  /* 5029 */ "vmaxav\0"
  /* 5036 */ "vaddv\0"
  /* 5042 */ "rev\0"
  /* 5046 */ "sdiv\0"
  /* 5051 */ "udiv\0"
  /* 5056 */ "vdiv\0"
  /* 5061 */ "vaddlv\0"
  /* 5068 */ "vminnmv\0"
  /* 5076 */ "vmaxnmv\0"
  /* 5084 */ "vminv\0"
  /* 5090 */ "vmov\0"
  /* 5095 */ "vmaxv\0"
  /* 5101 */ "vsubw\0"
  /* 5107 */ "vaddw\0"
  /* 5113 */ "pldw\0"
  /* 5118 */ "vldrw\0"
  /* 5124 */ "vstrw\0"
  /* 5130 */ "movw\0"
  /* 5135 */ "vrmlaldavhax\0"
  /* 5148 */ "vrmlsldavhax\0"
  /* 5161 */ "fldmiax\0"
  /* 5169 */ "fstmiax\0"
  /* 5177 */ "vpmax\0"
  /* 5183 */ "vmax\0"
  /* 5188 */ "shsax\0"
  /* 5194 */ "uhsax\0"
  /* 5200 */ "uqsax\0"
  /* 5206 */ "ssax\0"
  /* 5211 */ "usax\0"
  /* 5216 */ "vmladavax\0"
  /* 5226 */ "vmlaldavax\0"
  /* 5237 */ "vmlsldavax\0"
  /* 5248 */ "vmlsdavax\0"
  /* 5258 */ "fldmdbx\0"
  /* 5266 */ "fstmdbx\0"
  /* 5274 */ "vtbx\0"
  /* 5279 */ "smladx\0"
  /* 5286 */ "smuadx\0"
  /* 5293 */ "smlaldx\0"
  /* 5301 */ "smlsldx\0"
  /* 5309 */ "smlsdx\0"
  /* 5316 */ "smusdx\0"
  /* 5323 */ "ldaex\0"
  /* 5329 */ "stlex\0"
  /* 5335 */ "ldrex\0"
  /* 5341 */ "clrex\0"
  /* 5347 */ "strex\0"
  /* 5353 */ "sbfx\0"
  /* 5358 */ "ubfx\0"
  /* 5363 */ "vqdmladhx\0"
  /* 5373 */ "vqrdmladhx\0"
  /* 5384 */ "vqdmlsdhx\0"
  /* 5394 */ "vqrdmlsdhx\0"
  /* 5405 */ "vrmlaldavhx\0"
  /* 5417 */ "vrmlsldavhx\0"
  /* 5429 */ "blx\0"
  /* 5433 */ "bflx\0"
  /* 5438 */ "rrx\0"
  /* 5442 */ "shasx\0"
  /* 5448 */ "uhasx\0"
  /* 5454 */ "uqasx\0"
  /* 5460 */ "sasx\0"
  /* 5465 */ "uasx\0"
  /* 5470 */ "vrintx\0"
  /* 5477 */ "vmladavx\0"
  /* 5486 */ "vmlaldavx\0"
  /* 5496 */ "vmlsldavx\0"
  /* 5506 */ "vmlsdavx\0"
  /* 5515 */ "vclz\0"
  /* 5520 */ "vrintz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    2653U,	// DBG_VALUE
    2663U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    2646U,	// BUNDLE
    2692U,	// LIFETIME_START
    2633U,	// LIFETIME_END
    0U,	// STACKMAP
    3966U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    2225U,	// PATCHABLE_FUNCTION_ENTER
    2145U,	// PATCHABLE_RET
    2271U,	// PATCHABLE_FUNCTION_EXIT
    2248U,	// PATCHABLE_TAIL_CALL
    2200U,	// PATCHABLE_EVENT_CALL
    2176U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    12673U,	// ASRi
    12673U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BL_PUSHLR
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    2673U,	// CompilerBarrier
    67129975U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    29247U,	// LDRBT_POST
    28997U,	// LDRConstPool
    29282U,	// LDRHTii
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    29259U,	// LDRSBTii
    29294U,	// LDRSHTii
    29441U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LOADDUAL
    12272U,	// LSLi
    12272U,	// LSLr
    12680U,	// LSRi
    12680U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MULv5
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    12659U,	// RORi
    12659U,	// RORr
    0U,	// RRX
    38207U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    0U,	// STOREDUAL
    29253U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    29452U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    567551U,	// VLD1LNdAsm_16
    1091839U,	// VLD1LNdAsm_32
    1616127U,	// VLD1LNdAsm_8
    567551U,	// VLD1LNdWB_fixed_Asm_16
    1091839U,	// VLD1LNdWB_fixed_Asm_32
    1616127U,	// VLD1LNdWB_fixed_Asm_8
    575743U,	// VLD1LNdWB_register_Asm_16
    1100031U,	// VLD1LNdWB_register_Asm_32
    1624319U,	// VLD1LNdWB_register_Asm_8
    567600U,	// VLD2LNdAsm_16
    1091888U,	// VLD2LNdAsm_32
    1616176U,	// VLD2LNdAsm_8
    567600U,	// VLD2LNdWB_fixed_Asm_16
    1091888U,	// VLD2LNdWB_fixed_Asm_32
    1616176U,	// VLD2LNdWB_fixed_Asm_8
    575792U,	// VLD2LNdWB_register_Asm_16
    1100080U,	// VLD2LNdWB_register_Asm_32
    1624368U,	// VLD2LNdWB_register_Asm_8
    567600U,	// VLD2LNqAsm_16
    1091888U,	// VLD2LNqAsm_32
    567600U,	// VLD2LNqWB_fixed_Asm_16
    1091888U,	// VLD2LNqWB_fixed_Asm_32
    575792U,	// VLD2LNqWB_register_Asm_16
    1100080U,	// VLD2LNqWB_register_Asm_32
    134801749U,	// VLD3DUPdAsm_16
    135326037U,	// VLD3DUPdAsm_32
    135850325U,	// VLD3DUPdAsm_8
    134801749U,	// VLD3DUPdWB_fixed_Asm_16
    135326037U,	// VLD3DUPdWB_fixed_Asm_32
    135850325U,	// VLD3DUPdWB_fixed_Asm_8
    134785365U,	// VLD3DUPdWB_register_Asm_16
    135309653U,	// VLD3DUPdWB_register_Asm_32
    135833941U,	// VLD3DUPdWB_register_Asm_8
    201910613U,	// VLD3DUPqAsm_16
    202434901U,	// VLD3DUPqAsm_32
    202959189U,	// VLD3DUPqAsm_8
    201910613U,	// VLD3DUPqWB_fixed_Asm_16
    202434901U,	// VLD3DUPqWB_fixed_Asm_32
    202959189U,	// VLD3DUPqWB_fixed_Asm_8
    201894229U,	// VLD3DUPqWB_register_Asm_16
    202418517U,	// VLD3DUPqWB_register_Asm_32
    202942805U,	// VLD3DUPqWB_register_Asm_8
    567637U,	// VLD3LNdAsm_16
    1091925U,	// VLD3LNdAsm_32
    1616213U,	// VLD3LNdAsm_8
    567637U,	// VLD3LNdWB_fixed_Asm_16
    1091925U,	// VLD3LNdWB_fixed_Asm_32
    1616213U,	// VLD3LNdWB_fixed_Asm_8
    575829U,	// VLD3LNdWB_register_Asm_16
    1100117U,	// VLD3LNdWB_register_Asm_32
    1624405U,	// VLD3LNdWB_register_Asm_8
    567637U,	// VLD3LNqAsm_16
    1091925U,	// VLD3LNqAsm_32
    567637U,	// VLD3LNqWB_fixed_Asm_16
    1091925U,	// VLD3LNqWB_fixed_Asm_32
    575829U,	// VLD3LNqWB_register_Asm_16
    1100117U,	// VLD3LNqWB_register_Asm_32
    269019477U,	// VLD3dAsm_16
    269543765U,	// VLD3dAsm_32
    270068053U,	// VLD3dAsm_8
    269019477U,	// VLD3dWB_fixed_Asm_16
    269543765U,	// VLD3dWB_fixed_Asm_32
    270068053U,	// VLD3dWB_fixed_Asm_8
    269003093U,	// VLD3dWB_register_Asm_16
    269527381U,	// VLD3dWB_register_Asm_32
    270051669U,	// VLD3dWB_register_Asm_8
    336128341U,	// VLD3qAsm_16
    336652629U,	// VLD3qAsm_32
    337176917U,	// VLD3qAsm_8
    336128341U,	// VLD3qWB_fixed_Asm_16
    336652629U,	// VLD3qWB_fixed_Asm_32
    337176917U,	// VLD3qWB_fixed_Asm_8
    336111957U,	// VLD3qWB_register_Asm_16
    336636245U,	// VLD3qWB_register_Asm_32
    337160533U,	// VLD3qWB_register_Asm_8
    403237233U,	// VLD4DUPdAsm_16
    403761521U,	// VLD4DUPdAsm_32
    404285809U,	// VLD4DUPdAsm_8
    403237233U,	// VLD4DUPdWB_fixed_Asm_16
    403761521U,	// VLD4DUPdWB_fixed_Asm_32
    404285809U,	// VLD4DUPdWB_fixed_Asm_8
    403220849U,	// VLD4DUPdWB_register_Asm_16
    403745137U,	// VLD4DUPdWB_register_Asm_32
    404269425U,	// VLD4DUPdWB_register_Asm_8
    470346097U,	// VLD4DUPqAsm_16
    470870385U,	// VLD4DUPqAsm_32
    471394673U,	// VLD4DUPqAsm_8
    470346097U,	// VLD4DUPqWB_fixed_Asm_16
    470870385U,	// VLD4DUPqWB_fixed_Asm_32
    471394673U,	// VLD4DUPqWB_fixed_Asm_8
    470329713U,	// VLD4DUPqWB_register_Asm_16
    470854001U,	// VLD4DUPqWB_register_Asm_32
    471378289U,	// VLD4DUPqWB_register_Asm_8
    567665U,	// VLD4LNdAsm_16
    1091953U,	// VLD4LNdAsm_32
    1616241U,	// VLD4LNdAsm_8
    567665U,	// VLD4LNdWB_fixed_Asm_16
    1091953U,	// VLD4LNdWB_fixed_Asm_32
    1616241U,	// VLD4LNdWB_fixed_Asm_8
    575857U,	// VLD4LNdWB_register_Asm_16
    1100145U,	// VLD4LNdWB_register_Asm_32
    1624433U,	// VLD4LNdWB_register_Asm_8
    567665U,	// VLD4LNqAsm_16
    1091953U,	// VLD4LNqAsm_32
    567665U,	// VLD4LNqWB_fixed_Asm_16
    1091953U,	// VLD4LNqWB_fixed_Asm_32
    575857U,	// VLD4LNqWB_register_Asm_16
    1100145U,	// VLD4LNqWB_register_Asm_32
    537454961U,	// VLD4dAsm_16
    537979249U,	// VLD4dAsm_32
    538503537U,	// VLD4dAsm_8
    537454961U,	// VLD4dWB_fixed_Asm_16
    537979249U,	// VLD4dWB_fixed_Asm_32
    538503537U,	// VLD4dWB_fixed_Asm_8
    537438577U,	// VLD4dWB_register_Asm_16
    537962865U,	// VLD4dWB_register_Asm_32
    538487153U,	// VLD4dWB_register_Asm_8
    604563825U,	// VLD4qAsm_16
    605088113U,	// VLD4qAsm_32
    605612401U,	// VLD4qAsm_8
    604563825U,	// VLD4qWB_fixed_Asm_16
    605088113U,	// VLD4qWB_fixed_Asm_32
    605612401U,	// VLD4qWB_fixed_Asm_8
    604547441U,	// VLD4qWB_register_Asm_16
    605071729U,	// VLD4qWB_register_Asm_32
    605596017U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVHcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    567562U,	// VST1LNdAsm_16
    1091850U,	// VST1LNdAsm_32
    1616138U,	// VST1LNdAsm_8
    567562U,	// VST1LNdWB_fixed_Asm_16
    1091850U,	// VST1LNdWB_fixed_Asm_32
    1616138U,	// VST1LNdWB_fixed_Asm_8
    575754U,	// VST1LNdWB_register_Asm_16
    1100042U,	// VST1LNdWB_register_Asm_32
    1624330U,	// VST1LNdWB_register_Asm_8
    567627U,	// VST2LNdAsm_16
    1091915U,	// VST2LNdAsm_32
    1616203U,	// VST2LNdAsm_8
    567627U,	// VST2LNdWB_fixed_Asm_16
    1091915U,	// VST2LNdWB_fixed_Asm_32
    1616203U,	// VST2LNdWB_fixed_Asm_8
    575819U,	// VST2LNdWB_register_Asm_16
    1100107U,	// VST2LNdWB_register_Asm_32
    1624395U,	// VST2LNdWB_register_Asm_8
    567627U,	// VST2LNqAsm_16
    1091915U,	// VST2LNqAsm_32
    567627U,	// VST2LNqWB_fixed_Asm_16
    1091915U,	// VST2LNqWB_fixed_Asm_32
    575819U,	// VST2LNqWB_register_Asm_16
    1100107U,	// VST2LNqWB_register_Asm_32
    567648U,	// VST3LNdAsm_16
    1091936U,	// VST3LNdAsm_32
    1616224U,	// VST3LNdAsm_8
    567648U,	// VST3LNdWB_fixed_Asm_16
    1091936U,	// VST3LNdWB_fixed_Asm_32
    1616224U,	// VST3LNdWB_fixed_Asm_8
    575840U,	// VST3LNdWB_register_Asm_16
    1100128U,	// VST3LNdWB_register_Asm_32
    1624416U,	// VST3LNdWB_register_Asm_8
    567648U,	// VST3LNqAsm_16
    1091936U,	// VST3LNqAsm_32
    567648U,	// VST3LNqWB_fixed_Asm_16
    1091936U,	// VST3LNqWB_fixed_Asm_32
    575840U,	// VST3LNqWB_register_Asm_16
    1100128U,	// VST3LNqWB_register_Asm_32
    269019488U,	// VST3dAsm_16
    269543776U,	// VST3dAsm_32
    270068064U,	// VST3dAsm_8
    269019488U,	// VST3dWB_fixed_Asm_16
    269543776U,	// VST3dWB_fixed_Asm_32
    270068064U,	// VST3dWB_fixed_Asm_8
    269003104U,	// VST3dWB_register_Asm_16
    269527392U,	// VST3dWB_register_Asm_32
    270051680U,	// VST3dWB_register_Asm_8
    336128352U,	// VST3qAsm_16
    336652640U,	// VST3qAsm_32
    337176928U,	// VST3qAsm_8
    336128352U,	// VST3qWB_fixed_Asm_16
    336652640U,	// VST3qWB_fixed_Asm_32
    337176928U,	// VST3qWB_fixed_Asm_8
    336111968U,	// VST3qWB_register_Asm_16
    336636256U,	// VST3qWB_register_Asm_32
    337160544U,	// VST3qWB_register_Asm_8
    567670U,	// VST4LNdAsm_16
    1091958U,	// VST4LNdAsm_32
    1616246U,	// VST4LNdAsm_8
    567670U,	// VST4LNdWB_fixed_Asm_16
    1091958U,	// VST4LNdWB_fixed_Asm_32
    1616246U,	// VST4LNdWB_fixed_Asm_8
    575862U,	// VST4LNdWB_register_Asm_16
    1100150U,	// VST4LNdWB_register_Asm_32
    1624438U,	// VST4LNdWB_register_Asm_8
    567670U,	// VST4LNqAsm_16
    1091958U,	// VST4LNqAsm_32
    567670U,	// VST4LNqWB_fixed_Asm_16
    1091958U,	// VST4LNqWB_fixed_Asm_32
    575862U,	// VST4LNqWB_register_Asm_16
    1100150U,	// VST4LNqWB_register_Asm_32
    537454966U,	// VST4dAsm_16
    537979254U,	// VST4dAsm_32
    538503542U,	// VST4dAsm_8
    537454966U,	// VST4dWB_fixed_Asm_16
    537979254U,	// VST4dWB_fixed_Asm_32
    538503542U,	// VST4dWB_fixed_Asm_8
    537438582U,	// VST4dWB_register_Asm_16
    537962870U,	// VST4dWB_register_Asm_32
    538487158U,	// VST4dWB_register_Asm_8
    604563830U,	// VST4qAsm_16
    605088118U,	// VST4qAsm_32
    605612406U,	// VST4qAsm_8
    604563830U,	// VST4qWB_fixed_Asm_16
    605088118U,	// VST4qWB_fixed_Asm_32
    605612406U,	// VST4qWB_fixed_Asm_8
    604547446U,	// VST4qWB_register_Asm_16
    605071734U,	// VST4qWB_register_Asm_32
    605596022U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BF_LabelPseudo
    0U,	// t2BR_JT
    0U,	// t2DoLoopStart
    0U,	// t2LDMIA_RET
    27734U,	// t2LDRBpcrel
    28997U,	// t2LDRConstPool
    28242U,	// t2LDRHpcrel
    27753U,	// t2LDRSBpcrel
    28281U,	// t2LDRSHpcrel
    0U,	// t2LDRpci_pic
    28997U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LoopDec
    0U,	// t2LoopEnd
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    61967U,	// t2MOVSsi
    45583U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    62436U,	// t2MOVsi
    46052U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// t2WhileLoopStart
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBLXNS_CALL
    0U,	// tBL_PUSHLR
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBXNS_RET
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tLDMIA_UPD
    28997U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLSri
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tRSBS
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    2108646U,	// ADCri
    2108646U,	// ADCrr
    2165990U,	// ADCrsi
    77030U,	// ADCrsr
    2108714U,	// ADDri
    2108714U,	// ADDrr
    2166058U,	// ADDrsi
    77098U,	// ADDrsr
    2126144U,	// ADR
    673793640U,	// AESD
    673793648U,	// AESE
    740902485U,	// AESIMC
    740902495U,	// AESMC
    2108779U,	// ANDri
    2108779U,	// ANDrr
    2166123U,	// ANDrsi
    77163U,	// ANDrsr
    808019422U,	// BF16VDOTI_VDOTD
    808019422U,	// BF16VDOTI_VDOTQ
    808019422U,	// BF16VDOTS_VDOTD
    808019422U,	// BF16VDOTS_VDOTQ
    741372737U,	// BF16_VCVT
    674294927U,	// BF16_VCVTB
    674296629U,	// BF16_VCVTT
    2157806U,	// BFC
    2141906U,	// BFI
    2108659U,	// BICri
    2108659U,	// BICrr
    2166003U,	// BICrsi
    77043U,	// BICrsr
    3753919U,	// BKPT
    3770251U,	// BL
    3753973U,	// BLX
    2209078U,	// BLX_pred
    3770357U,	// BLXi
    874622755U,	// BL_pred
    3753969U,	// BX
    2207460U,	// BXJ
    4314256U,	// BX_RET
    2208912U,	// BX_pred
    874621840U,	// Bcc
    675930114U,	// CDE_CX1
    941664916U,	// CDE_CX1A
    1012000568U,	// CDE_CX1D
    941664938U,	// CDE_CX1DA
    675930707U,	// CDE_CX2
    941673114U,	// CDE_CX2A
    1079109438U,	// CDE_CX2D
    941673136U,	// CDE_CX2DA
    675930713U,	// CDE_CX3
    941755040U,	// CDE_CX3A
    1079109444U,	// CDE_CX3D
    941755062U,	// CDE_CX3DA
    810149590U,	// CDE_VCX1A_fpdp
    810149590U,	// CDE_VCX1A_fpsp
    941763219U,	// CDE_VCX1A_vec
    675930113U,	// CDE_VCX1_fpdp
    675930113U,	// CDE_VCX1_fpsp
    941771023U,	// CDE_VCX1_vec
    810149597U,	// CDE_VCX2A_fpdp
    810149597U,	// CDE_VCX2A_fpsp
    941779609U,	// CDE_VCX2A_vec
    675930706U,	// CDE_VCX2_fpdp
    675930706U,	// CDE_VCX2_fpsp
    941762896U,	// CDE_VCX2_vec
    810149604U,	// CDE_VCX3A_fpdp
    810149604U,	// CDE_VCX3A_fpsp
    941787807U,	// CDE_VCX3A_vec
    675930712U,	// CDE_VCX3_fpdp
    675930712U,	// CDE_VCX3_fpsp
    941779301U,	// CDE_VCX3_vec
    1143083226U,	// CDP
    1213899327U,	// CDP2
    5342U,	// CLREX
    2127245U,	// CLZ
    2125939U,	// CMNri
    2125939U,	// CMNzrr
    2158707U,	// CMNzrsi
    2142323U,	// CMNzrsr
    2126052U,	// CMPri
    2126052U,	// CMPrr
    2158820U,	// CMPrsi
    2142436U,	// CMPrsr
    3753903U,	// CPS1p
    1277350388U,	// CPS2p
    1277350388U,	// CPS3p
    740902649U,	// CRC32B
    740902657U,	// CRC32CB
    740902767U,	// CRC32CH
    740902882U,	// CRC32CW
    740902759U,	// CRC32H
    740902874U,	// CRC32W
    2207184U,	// DBG
    190232U,	// DMB
    190237U,	// DSB
    2109807U,	// EORri
    2109807U,	// EORrr
    2167151U,	// EORrsi
    78191U,	// EORrsr
    3789394U,	// ERET
    1080062947U,	// FCONSTD
    6845411U,	// FCONSTH
    7369699U,	// FCONSTS
    740324491U,	// FLDMXDB_UPD
    2208810U,	// FLDMXIA
    740324394U,	// FLDMXIA_UPD
    7983608U,	// FMSTAT
    740324499U,	// FSTMXDB_UPD
    2208818U,	// FSTMXIA
    740324402U,	// FSTMXIA_UPD
    2208423U,	// HINT
    3753914U,	// HLT
    3753779U,	// HVC
    198434U,	// ISB
    2124476U,	// LDA
    2124685U,	// LDAB
    2127052U,	// LDAEX
    2124996U,	// LDAEXB
    1344302471U,	// LDAEXD
    2125482U,	// LDAEXH
    2125282U,	// LDAH
    1417848701U,	// LDC2L_OFFSET
    1484957565U,	// LDC2L_OPTION
    1484957565U,	// LDC2L_POST
    1552066429U,	// LDC2L_PRE
    1417847334U,	// LDC2_OFFSET
    1484956198U,	// LDC2_OPTION
    1484956198U,	// LDC2_POST
    1552065062U,	// LDC2_PRE
    1142992684U,	// LDCL_OFFSET
    1142992684U,	// LDCL_OPTION
    1142992684U,	// LDCL_POST
    1142992684U,	// LDCL_PRE
    1142992106U,	// LDC_OFFSET
    1142992106U,	// LDC_OPTION
    1142992106U,	// LDC_POST
    1142992106U,	// LDC_PRE
    2206400U,	// LDMDA
    740321984U,	// LDMDA_UPD
    2206655U,	// LDMDB
    740322239U,	// LDMDB_UPD
    2207773U,	// LDMIA
    740323357U,	// LDMIA_UPD
    2206674U,	// LDMIB
    740322258U,	// LDMIB_UPD
    2150975U,	// LDRBT_POST_IMM
    2150975U,	// LDRBT_POST_REG
    2149462U,	// LDRB_POST_IMM
    2149462U,	// LDRB_POST_REG
    2141270U,	// LDRB_PRE_IMM
    2149462U,	// LDRB_PRE_REG
    2157654U,	// LDRBi12
    2141270U,	// LDRBrs
    2149744U,	// LDRD
    2231664U,	// LDRD_POST
    2231664U,	// LDRD_PRE
    2127064U,	// LDREX
    2125010U,	// LDREXB
    1344302485U,	// LDREXD
    2125496U,	// LDREXH
    2141778U,	// LDRH
    2142818U,	// LDRHTi
    2151010U,	// LDRHTr
    2149970U,	// LDRH_POST
    2149970U,	// LDRH_PRE
    2141289U,	// LDRSB
    2142795U,	// LDRSBTi
    2150987U,	// LDRSBTr
    2149481U,	// LDRSB_POST
    2149481U,	// LDRSB_PRE
    2141817U,	// LDRSH
    2142830U,	// LDRSHTi
    2151022U,	// LDRSHTr
    2150009U,	// LDRSH_POST
    2150009U,	// LDRSH_PRE
    2151169U,	// LDRT_POST_IMM
    2151169U,	// LDRT_POST_REG
    2150725U,	// LDR_POST_IMM
    2150725U,	// LDR_POST_REG
    2142533U,	// LDR_PRE_IMM
    2150725U,	// LDR_PRE_REG
    2158917U,	// LDRcp
    2158917U,	// LDRi12
    2142533U,	// LDRrs
    1143083324U,	// MCR
    677028421U,	// MCR2
    1143001463U,	// MCRR
    677028427U,	// MCRR2
    2165504U,	// MLA
    2142668U,	// MLS
    9032676U,	// MOVPCLR
    2159430U,	// MOVTi16
    2135012U,	// MOVi
    2126859U,	// MOVi16
    2135012U,	// MOVr
    2135012U,	// MOVr_TC
    2110436U,	// MOVsi
    2167780U,	// MOVsr
    941755649U,	// MRC
    9560620U,	// MRC2
    1612762373U,	// MRRC
    205362U,	// MRRC2
    2208249U,	// MRS
    2126329U,	// MRSbanked
    2208249U,	// MRSsys
    1679847821U,	// MSR
    1746956685U,	// MSRbanked
    1679847821U,	// MSRi
    2109440U,	// MUL
    2150365U,	// MVE_ASRLi
    2150365U,	// MVE_ASRLr
    740901861U,	// MVE_DLSTP_16
    740901108U,	// MVE_DLSTP_32
    740901470U,	// MVE_DLSTP_64
    740902520U,	// MVE_DLSTP_8
    1008849132U,	// MVE_LCTP
    3762079U,	// MVE_LETP
    2150312U,	// MVE_LSLLi
    2150312U,	// MVE_LSLLr
    2150370U,	// MVE_LSRL
    740356425U,	// MVE_SQRSHR
    2232263U,	// MVE_SQRSHRL
    740355923U,	// MVE_SQSHL
    2150284U,	// MVE_SQSHLL
    740356432U,	// MVE_SRSHR
    2150351U,	// MVE_SRSHRL
    740355941U,	// MVE_UQRSHL
    2232218U,	// MVE_UQRSHLL
    740355929U,	// MVE_UQSHL
    2150291U,	// MVE_UQSHLL
    740356438U,	// MVE_URSHR
    2150358U,	// MVE_URSHRL
    10105701U,	// MVE_VABAVs16
    10629989U,	// MVE_VABAVs32
    11154277U,	// MVE_VABAVs8
    11678565U,	// MVE_VABAVu16
    12202853U,	// MVE_VABAVu32
    12727141U,	// MVE_VABAVu8
    6966562U,	// MVE_VABDf16
    7490850U,	// MVE_VABDf32
    10112290U,	// MVE_VABDs16
    10636578U,	// MVE_VABDs32
    11160866U,	// MVE_VABDs8
    11685154U,	// MVE_VABDu16
    12209442U,	// MVE_VABDu32
    12733730U,	// MVE_VABDu8
    7033275U,	// MVE_VABSf16
    7557563U,	// MVE_VABSf32
    10179003U,	// MVE_VABSs16
    10703291U,	// MVE_VABSs32
    11227579U,	// MVE_VABSs8
    13266149U,	// MVE_VADC
    13250252U,	// MVE_VADCI
    10644351U,	// MVE_VADDLVs32acc
    10638278U,	// MVE_VADDLVs32no_acc
    12217215U,	// MVE_VADDLVu32acc
    12211142U,	// MVE_VADDLVu32no_acc
    10111864U,	// MVE_VADDVs16acc
    10179501U,	// MVE_VADDVs16no_acc
    10636152U,	// MVE_VADDVs32acc
    10703789U,	// MVE_VADDVs32no_acc
    11160440U,	// MVE_VADDVs8acc
    11228077U,	// MVE_VADDVs8no_acc
    11684728U,	// MVE_VADDVu16acc
    11752365U,	// MVE_VADDVu16no_acc
    12209016U,	// MVE_VADDVu32acc
    12276653U,	// MVE_VADDVu32no_acc
    12733304U,	// MVE_VADDVu8acc
    12800941U,	// MVE_VADDVu8no_acc
    6966611U,	// MVE_VADD_qr_f16
    7490899U,	// MVE_VADD_qr_f32
    13782355U,	// MVE_VADD_qr_i16
    13258067U,	// MVE_VADD_qr_i32
    14306643U,	// MVE_VADD_qr_i8
    6966611U,	// MVE_VADDf16
    7490899U,	// MVE_VADDf32
    13782355U,	// MVE_VADDi16
    13258067U,	// MVE_VADDi32
    14306643U,	// MVE_VADDi8
    2248042U,	// MVE_VAND
    2247922U,	// MVE_VBIC
    13782258U,	// MVE_VBICimmi16
    13257970U,	// MVE_VBICimmi32
    676241U,	// MVE_VBRSR16
    1200529U,	// MVE_VBRSR32
    1724817U,	// MVE_VBRSR8
    6958382U,	// MVE_VCADDf16
    7482670U,	// MVE_VCADDf32
    13774126U,	// MVE_VCADDi16
    13249838U,	// MVE_VCADDi32
    14298414U,	// MVE_VCADDi8
    10179013U,	// MVE_VCLSs16
    10703301U,	// MVE_VCLSs32
    11227589U,	// MVE_VCLSs8
    13849996U,	// MVE_VCLZs16
    13325708U,	// MVE_VCLZs32
    14374284U,	// MVE_VCLZs8
    6974206U,	// MVE_VCMLAf16
    7498494U,	// MVE_VCMLAf32
    1818898659U,	// MVE_VCMPf16
    1818898659U,	// MVE_VCMPf16r
    1819422947U,	// MVE_VCMPf32
    1819422947U,	// MVE_VCMPf32r
    1825714403U,	// MVE_VCMPi16
    1825714403U,	// MVE_VCMPi16r
    1825190115U,	// MVE_VCMPi32
    1825190115U,	// MVE_VCMPi32r
    1826238691U,	// MVE_VCMPi8
    1826238691U,	// MVE_VCMPi8r
    1822044387U,	// MVE_VCMPs16
    1822044387U,	// MVE_VCMPs16r
    1822568675U,	// MVE_VCMPs32
    1822568675U,	// MVE_VCMPs32r
    1823092963U,	// MVE_VCMPs8
    1823092963U,	// MVE_VCMPs8r
    1823617251U,	// MVE_VCMPu16
    1823617251U,	// MVE_VCMPu16r
    1824141539U,	// MVE_VCMPu32
    1824141539U,	// MVE_VCMPu32r
    1824665827U,	// MVE_VCMPu8
    1824665827U,	// MVE_VCMPu8r
    6959102U,	// MVE_VCMULf16
    7483390U,	// MVE_VCMULf32
    738939121U,	// MVE_VCTP16
    739463409U,	// MVE_VCTP32
    753094897U,	// MVE_VCTP64
    739987697U,	// MVE_VCTP8
    686443663U,	// MVE_VCVTf16f32bh
    686445365U,	// MVE_VCVTf16f32th
    1089622849U,	// MVE_VCVTf16s16_fix
    1022579521U,	// MVE_VCVTf16s16n
    1090147137U,	// MVE_VCVTf16u16_fix
    1023103809U,	// MVE_VCVTf16u16n
    16993423U,	// MVE_VCVTf32f16bh
    16995125U,	// MVE_VCVTf32f16th
    1091195713U,	// MVE_VCVTf32s32_fix
    1024152385U,	// MVE_VCVTf32s32n
    1091720001U,	// MVE_VCVTf32u32_fix
    1024676673U,	// MVE_VCVTf32u32n
    1092244289U,	// MVE_VCVTs16f16_fix
    1025198924U,	// MVE_VCVTs16f16a
    1025200196U,	// MVE_VCVTs16f16m
    1025200292U,	// MVE_VCVTs16f16n
    1025200381U,	// MVE_VCVTs16f16p
    1025200961U,	// MVE_VCVTs16f16z
    1092768577U,	// MVE_VCVTs32f32_fix
    1025723212U,	// MVE_VCVTs32f32a
    1025724484U,	// MVE_VCVTs32f32m
    1025724580U,	// MVE_VCVTs32f32n
    1025724669U,	// MVE_VCVTs32f32p
    1025725249U,	// MVE_VCVTs32f32z
    1093292865U,	// MVE_VCVTu16f16_fix
    1026247500U,	// MVE_VCVTu16f16a
    1026248772U,	// MVE_VCVTu16f16m
    1026248868U,	// MVE_VCVTu16f16n
    1026248957U,	// MVE_VCVTu16f16p
    1026249537U,	// MVE_VCVTu16f16z
    1093817153U,	// MVE_VCVTu32f32_fix
    1026771788U,	// MVE_VCVTu32f32a
    1026773060U,	// MVE_VCVTu32f32m
    1026773156U,	// MVE_VCVTu32f32n
    1026773245U,	// MVE_VCVTu32f32p
    1026773825U,	// MVE_VCVTu32f32z
    11677955U,	// MVE_VDDUPu16
    12202243U,	// MVE_VDDUPu32
    12726531U,	// MVE_VDDUPu8
    741647U,	// MVE_VDUP16
    1265935U,	// MVE_VDUP32
    1790223U,	// MVE_VDUP8
    11694356U,	// MVE_VDWDUPu16
    12218644U,	// MVE_VDWDUPu32
    12742932U,	// MVE_VDWDUPu8
    2249070U,	// MVE_VEOR
    6959535U,	// MVE_VFMA_qr_Sf16
    7483823U,	// MVE_VFMA_qr_Sf32
    6957845U,	// MVE_VFMA_qr_f16
    7482133U,	// MVE_VFMA_qr_f32
    6957845U,	// MVE_VFMAf16
    7482133U,	// MVE_VFMAf32
    6959579U,	// MVE_VFMSf16
    7483867U,	// MVE_VFMSf32
    10112321U,	// MVE_VHADD_qr_s16
    10636609U,	// MVE_VHADD_qr_s32
    11160897U,	// MVE_VHADD_qr_s8
    11685185U,	// MVE_VHADD_qr_u16
    12209473U,	// MVE_VHADD_qr_u32
    12733761U,	// MVE_VHADD_qr_u8
    10112321U,	// MVE_VHADDs16
    10636609U,	// MVE_VHADDs32
    11160897U,	// MVE_VHADDs8
    11685185U,	// MVE_VHADDu16
    12209473U,	// MVE_VHADDu32
    12733761U,	// MVE_VHADDu8
    10104103U,	// MVE_VHCADDs16
    10628391U,	// MVE_VHCADDs32
    11152679U,	// MVE_VHCADDs8
    10112165U,	// MVE_VHSUB_qr_s16
    10636453U,	// MVE_VHSUB_qr_s32
    11160741U,	// MVE_VHSUB_qr_s8
    11685029U,	// MVE_VHSUB_qr_u16
    12209317U,	// MVE_VHSUB_qr_u32
    12733605U,	// MVE_VHSUB_qr_u8
    10112165U,	// MVE_VHSUBs16
    10636453U,	// MVE_VHSUBs32
    11160741U,	// MVE_VHSUBs8
    11685029U,	// MVE_VHSUBu16
    12209317U,	// MVE_VHSUBu32
    12733605U,	// MVE_VHSUBu8
    11677961U,	// MVE_VIDUPu16
    12202249U,	// MVE_VIDUPu32
    12726537U,	// MVE_VIDUPu8
    11694363U,	// MVE_VIWDUPu16
    12218651U,	// MVE_VIWDUPu32
    12742939U,	// MVE_VIWDUPu8
    20669293U,	// MVE_VLD20_16
    21193581U,	// MVE_VLD20_16_wb
    20668423U,	// MVE_VLD20_32
    21192711U,	// MVE_VLD20_32_wb
    20669929U,	// MVE_VLD20_8
    21194217U,	// MVE_VLD20_8_wb
    20669333U,	// MVE_VLD21_16
    21193621U,	// MVE_VLD21_16_wb
    20668489U,	// MVE_VLD21_32
    21192777U,	// MVE_VLD21_32_wb
    20669965U,	// MVE_VLD21_8
    21194253U,	// MVE_VLD21_8_wb
    20677505U,	// MVE_VLD40_16
    21201793U,	// MVE_VLD40_16_wb
    20676635U,	// MVE_VLD40_32
    21200923U,	// MVE_VLD40_32_wb
    20678139U,	// MVE_VLD40_8
    21202427U,	// MVE_VLD40_8_wb
    20677545U,	// MVE_VLD41_16
    21201833U,	// MVE_VLD41_16_wb
    20676701U,	// MVE_VLD41_32
    21200989U,	// MVE_VLD41_32_wb
    20678175U,	// MVE_VLD41_8
    21202463U,	// MVE_VLD41_8_wb
    20677565U,	// MVE_VLD42_16
    21201853U,	// MVE_VLD42_16_wb
    20676747U,	// MVE_VLD42_32
    21201035U,	// MVE_VLD42_32_wb
    20678193U,	// MVE_VLD42_8
    21202481U,	// MVE_VLD42_8_wb
    20677585U,	// MVE_VLD43_16
    21201873U,	// MVE_VLD43_16_wb
    20676780U,	// MVE_VLD43_32
    21201068U,	// MVE_VLD43_32_wb
    20678211U,	// MVE_VLD43_8
    21202499U,	// MVE_VLD43_8_wb
    10112085U,	// MVE_VLDRBS16
    748301397U,	// MVE_VLDRBS16_post
    748301397U,	// MVE_VLDRBS16_pre
    10112085U,	// MVE_VLDRBS16_rq
    10636373U,	// MVE_VLDRBS32
    748825685U,	// MVE_VLDRBS32_post
    748825685U,	// MVE_VLDRBS32_pre
    10636373U,	// MVE_VLDRBS32_rq
    11684949U,	// MVE_VLDRBU16
    749874261U,	// MVE_VLDRBU16_post
    749874261U,	// MVE_VLDRBU16_pre
    11684949U,	// MVE_VLDRBU16_rq
    12209237U,	// MVE_VLDRBU32
    750398549U,	// MVE_VLDRBU32_post
    750398549U,	// MVE_VLDRBU32_pre
    12209237U,	// MVE_VLDRBU32_rq
    12733525U,	// MVE_VLDRBU8
    750922837U,	// MVE_VLDRBU8_post
    750922837U,	// MVE_VLDRBU8_pre
    12733525U,	// MVE_VLDRBU8_rq
    21646703U,	// MVE_VLDRDU64_qi
    759836015U,	// MVE_VLDRDU64_qi_pre
    21646703U,	// MVE_VLDRDU64_rq
    21646703U,	// MVE_VLDRDU64_rq_u
    10636881U,	// MVE_VLDRHS32
    748826193U,	// MVE_VLDRHS32_post
    748826193U,	// MVE_VLDRHS32_pre
    10636881U,	// MVE_VLDRHS32_rq
    10636881U,	// MVE_VLDRHS32_rq_u
    11685457U,	// MVE_VLDRHU16
    749874769U,	// MVE_VLDRHU16_post
    749874769U,	// MVE_VLDRHU16_pre
    11685457U,	// MVE_VLDRHU16_rq
    11685457U,	// MVE_VLDRHU16_rq_u
    12209745U,	// MVE_VLDRHU32
    750399057U,	// MVE_VLDRHU32_post
    750399057U,	// MVE_VLDRHU32_pre
    12209745U,	// MVE_VLDRHU32_rq
    12209745U,	// MVE_VLDRHU32_rq_u
    12211199U,	// MVE_VLDRWU32
    750400511U,	// MVE_VLDRWU32_post
    750400511U,	// MVE_VLDRWU32_pre
    12211199U,	// MVE_VLDRWU32_qi
    750400511U,	// MVE_VLDRWU32_qi_pre
    12211199U,	// MVE_VLDRWU32_rq
    12211199U,	// MVE_VLDRWU32_rq_u
    748311462U,	// MVE_VMAXAVs16
    748835750U,	// MVE_VMAXAVs32
    749360038U,	// MVE_VMAXAVs8
    10111879U,	// MVE_VMAXAs16
    10636167U,	// MVE_VMAXAs32
    11160455U,	// MVE_VMAXAs8
    745165718U,	// MVE_VMAXNMAVf16
    745690006U,	// MVE_VMAXNMAVf32
    6966056U,	// MVE_VMAXNMAf16
    7490344U,	// MVE_VMAXNMAf32
    745165781U,	// MVE_VMAXNMVf16
    745690069U,	// MVE_VMAXNMVf32
    6967336U,	// MVE_VMAXNMf16
    7491624U,	// MVE_VMAXNMf32
    748311528U,	// MVE_VMAXVs16
    748835816U,	// MVE_VMAXVs32
    749360104U,	// MVE_VMAXVs8
    749884392U,	// MVE_VMAXVu16
    750408680U,	// MVE_VMAXVu32
    750932968U,	// MVE_VMAXVu8
    10114112U,	// MVE_VMAXs16
    10638400U,	// MVE_VMAXs32
    11162688U,	// MVE_VMAXs8
    11686976U,	// MVE_VMAXu16
    12211264U,	// MVE_VMAXu32
    12735552U,	// MVE_VMAXu8
    748311455U,	// MVE_VMINAVs16
    748835743U,	// MVE_VMINAVs32
    749360031U,	// MVE_VMINAVs8
    10111792U,	// MVE_VMINAs16
    10636080U,	// MVE_VMINAs32
    11160368U,	// MVE_VMINAs8
    745165709U,	// MVE_VMINNMAVf16
    745689997U,	// MVE_VMINNMAVf32
    6966048U,	// MVE_VMINNMAf16
    7490336U,	// MVE_VMINNMAf32
    745165773U,	// MVE_VMINNMVf16
    745690061U,	// MVE_VMINNMVf32
    6967329U,	// MVE_VMINNMf16
    7491617U,	// MVE_VMINNMf32
    748311517U,	// MVE_VMINVs16
    748835805U,	// MVE_VMINVs32
    749360093U,	// MVE_VMINVs8
    749884381U,	// MVE_VMINVu16
    750408669U,	// MVE_VMINVu32
    750932957U,	// MVE_VMINVu8
    10113134U,	// MVE_VMINs16
    10637422U,	// MVE_VMINs32
    11161710U,	// MVE_VMINs8
    11685998U,	// MVE_VMINu16
    12210286U,	// MVE_VMINu32
    12734574U,	// MVE_VMINu8
    10103634U,	// MVE_VMLADAVas16
    10627922U,	// MVE_VMLADAVas32
    11152210U,	// MVE_VMLADAVas8
    11676498U,	// MVE_VMLADAVau16
    12200786U,	// MVE_VMLADAVau32
    12725074U,	// MVE_VMLADAVau8
    10105953U,	// MVE_VMLADAVaxs16
    10630241U,	// MVE_VMLADAVaxs32
    11154529U,	// MVE_VMLADAVaxs8
    10113899U,	// MVE_VMLADAVs16
    10638187U,	// MVE_VMLADAVs32
    11162475U,	// MVE_VMLADAVs8
    11686763U,	// MVE_VMLADAVu16
    12211051U,	// MVE_VMLADAVu32
    12735339U,	// MVE_VMLADAVu8
    10114406U,	// MVE_VMLADAVxs16
    10638694U,	// MVE_VMLADAVxs32
    11162982U,	// MVE_VMLADAVxs8
    10128219U,	// MVE_VMLALDAVas16
    10652507U,	// MVE_VMLALDAVas32
    11701083U,	// MVE_VMLALDAVau16
    12225371U,	// MVE_VMLALDAVau32
    10130539U,	// MVE_VMLALDAVaxs16
    10654827U,	// MVE_VMLALDAVaxs32
    10105715U,	// MVE_VMLALDAVs16
    10630003U,	// MVE_VMLALDAVs32
    11678579U,	// MVE_VMLALDAVu16
    12202867U,	// MVE_VMLALDAVu32
    10106223U,	// MVE_VMLALDAVxs16
    10630511U,	// MVE_VMLALDAVxs32
    10105257U,	// MVE_VMLAS_qr_s16
    10629545U,	// MVE_VMLAS_qr_s32
    11153833U,	// MVE_VMLAS_qr_s8
    11678121U,	// MVE_VMLAS_qr_u16
    12202409U,	// MVE_VMLAS_qr_u32
    12726697U,	// MVE_VMLAS_qr_u8
    10103568U,	// MVE_VMLA_qr_s16
    10627856U,	// MVE_VMLA_qr_s32
    11152144U,	// MVE_VMLA_qr_s8
    11676432U,	// MVE_VMLA_qr_u16
    12200720U,	// MVE_VMLA_qr_u32
    12725008U,	// MVE_VMLA_qr_u8
    10103663U,	// MVE_VMLSDAVas16
    10627951U,	// MVE_VMLSDAVas32
    11152239U,	// MVE_VMLSDAVas8
    10105985U,	// MVE_VMLSDAVaxs16
    10630273U,	// MVE_VMLSDAVaxs32
    11154561U,	// MVE_VMLSDAVaxs8
    10113925U,	// MVE_VMLSDAVs16
    10638213U,	// MVE_VMLSDAVs32
    11162501U,	// MVE_VMLSDAVs8
    10114435U,	// MVE_VMLSDAVxs16
    10638723U,	// MVE_VMLSDAVxs32
    11163011U,	// MVE_VMLSDAVxs8
    10128229U,	// MVE_VMLSLDAVas16
    10652517U,	// MVE_VMLSLDAVas32
    10130550U,	// MVE_VMLSLDAVaxs16
    10654838U,	// MVE_VMLSLDAVaxs32
    10105724U,	// MVE_VMLSLDAVs16
    10630012U,	// MVE_VMLSLDAVs32
    10106233U,	// MVE_VMLSLDAVxs16
    10630521U,	// MVE_VMLSLDAVxs32
    10177530U,	// MVE_VMOVLs16bh
    10179227U,	// MVE_VMOVLs16th
    11226106U,	// MVE_VMOVLs8bh
    11227803U,	// MVE_VMOVLs8th
    11750394U,	// MVE_VMOVLu16bh
    11752091U,	// MVE_VMOVLu16th
    12798970U,	// MVE_VMOVLu8bh
    12800667U,	// MVE_VMOVLu8th
    13782089U,	// MVE_VMOVNi16bh
    13783792U,	// MVE_VMOVNi16th
    13257801U,	// MVE_VMOVNi32bh
    13259504U,	// MVE_VMOVNi32th
    1111011U,	// MVE_VMOV_from_lane_32
    10023907U,	// MVE_VMOV_from_lane_s16
    11072483U,	// MVE_VMOV_from_lane_s8
    11596771U,	// MVE_VMOV_from_lane_u16
    12645347U,	// MVE_VMOV_from_lane_u8
    2233315U,	// MVE_VMOV_q_rr
    2151395U,	// MVE_VMOV_rr_q
    570339U,	// MVE_VMOV_to_lane_16
    1094627U,	// MVE_VMOV_to_lane_32
    1618915U,	// MVE_VMOV_to_lane_8
    7558115U,	// MVE_VMOVimmf32
    13849571U,	// MVE_VMOVimmi16
    13325283U,	// MVE_VMOVimmi32
    1901286371U,	// MVE_VMOVimmi64
    14373859U,	// MVE_VMOVimmi8
    10112587U,	// MVE_VMULHs16
    10636875U,	// MVE_VMULHs32
    11161163U,	// MVE_VMULHs8
    11685451U,	// MVE_VMULHu16
    12209739U,	// MVE_VMULHu32
    12734027U,	// MVE_VMULHu8
    22694894U,	// MVE_VMULLBp16
    23219182U,	// MVE_VMULLBp8
    10111982U,	// MVE_VMULLBs16
    10636270U,	// MVE_VMULLBs32
    11160558U,	// MVE_VMULLBs8
    11684846U,	// MVE_VMULLBu16
    12209134U,	// MVE_VMULLBu32
    12733422U,	// MVE_VMULLBu8
    22696596U,	// MVE_VMULLTp16
    23220884U,	// MVE_VMULLTp8
    10113684U,	// MVE_VMULLTs16
    10637972U,	// MVE_VMULLTs32
    11162260U,	// MVE_VMULLTs8
    11686548U,	// MVE_VMULLTu16
    12210836U,	// MVE_VMULLTu32
    12735124U,	// MVE_VMULLTu8
    6967312U,	// MVE_VMUL_qr_f16
    7491600U,	// MVE_VMUL_qr_f32
    13783056U,	// MVE_VMUL_qr_i16
    13258768U,	// MVE_VMUL_qr_i32
    14307344U,	// MVE_VMUL_qr_i8
    6967312U,	// MVE_VMULf16
    7491600U,	// MVE_VMULf32
    13783056U,	// MVE_VMULi16
    13258768U,	// MVE_VMULi32
    14307344U,	// MVE_VMULi8
    2314435U,	// MVE_VMVN
    13848771U,	// MVE_VMVNimmi16
    13324483U,	// MVE_VMVNimmi32
    7032282U,	// MVE_VNEGf16
    7556570U,	// MVE_VNEGf32
    10178010U,	// MVE_VNEGs16
    10702298U,	// MVE_VNEGs32
    11226586U,	// MVE_VNEGs8
    2248851U,	// MVE_VORN
    2249084U,	// MVE_VORR
    13783420U,	// MVE_VORRimmi16
    13259132U,	// MVE_VORRimmi32
    1008947959U,	// MVE_VPNOT
    2248521U,	// MVE_VPSEL
    1008972561U,	// MVE_VPST
    1826337533U,	// MVE_VPTv16i8
    1826337533U,	// MVE_VPTv16i8r
    1823191805U,	// MVE_VPTv16s8
    1823191805U,	// MVE_VPTv16s8r
    1824764669U,	// MVE_VPTv16u8
    1824764669U,	// MVE_VPTv16u8r
    1819521789U,	// MVE_VPTv4f32
    1819521789U,	// MVE_VPTv4f32r
    1825288957U,	// MVE_VPTv4i32
    1825288957U,	// MVE_VPTv4i32r
    1822667517U,	// MVE_VPTv4s32
    1822667517U,	// MVE_VPTv4s32r
    1824240381U,	// MVE_VPTv4u32
    1824240381U,	// MVE_VPTv4u32r
    1818997501U,	// MVE_VPTv8f16
    1818997501U,	// MVE_VPTv8f16r
    1825813245U,	// MVE_VPTv8i16
    1825813245U,	// MVE_VPTv8i16r
    1822143229U,	// MVE_VPTv8s16
    1822143229U,	// MVE_VPTv8s16r
    1823716093U,	// MVE_VPTv8u16
    1823716093U,	// MVE_VPTv8u16r
    10178997U,	// MVE_VQABSs16
    10703285U,	// MVE_VQABSs32
    11227573U,	// MVE_VQABSs8
    10112333U,	// MVE_VQADD_qr_s16
    10636621U,	// MVE_VQADD_qr_s32
    11160909U,	// MVE_VQADD_qr_s8
    11685197U,	// MVE_VQADD_qr_u16
    12209485U,	// MVE_VQADD_qr_u32
    12733773U,	// MVE_VQADD_qr_u8
    10112333U,	// MVE_VQADDs16
    10636621U,	// MVE_VQADDs32
    11160909U,	// MVE_VQADDs8
    11685197U,	// MVE_VQADDu16
    12209485U,	// MVE_VQADDu32
    12733773U,	// MVE_VQADDu8
    10106100U,	// MVE_VQDMLADHXs16
    10630388U,	// MVE_VQDMLADHXs32
    11154676U,	// MVE_VQDMLADHXs8
    10104328U,	// MVE_VQDMLADHs16
    10628616U,	// MVE_VQDMLADHs32
    11152904U,	// MVE_VQDMLADHs8
    10104295U,	// MVE_VQDMLAH_qrs16
    10628583U,	// MVE_VQDMLAH_qrs32
    11152871U,	// MVE_VQDMLAH_qrs8
    10104413U,	// MVE_VQDMLASH_qrs16
    10628701U,	// MVE_VQDMLASH_qrs32
    11152989U,	// MVE_VQDMLASH_qrs8
    10106121U,	// MVE_VQDMLSDHXs16
    10630409U,	// MVE_VQDMLSDHXs32
    11154697U,	// MVE_VQDMLSDHXs8
    10104347U,	// MVE_VQDMLSDHs16
    10628635U,	// MVE_VQDMLSDHs32
    11152923U,	// MVE_VQDMLSDHs8
    10112563U,	// MVE_VQDMULH_qr_s16
    10636851U,	// MVE_VQDMULH_qr_s32
    11161139U,	// MVE_VQDMULH_qr_s8
    10112563U,	// MVE_VQDMULHi16
    10636851U,	// MVE_VQDMULHi32
    11161139U,	// MVE_VQDMULHi8
    10111973U,	// MVE_VQDMULL_qr_s16bh
    10113675U,	// MVE_VQDMULL_qr_s16th
    10636261U,	// MVE_VQDMULL_qr_s32bh
    10637963U,	// MVE_VQDMULL_qr_s32th
    10111973U,	// MVE_VQDMULLs16bh
    10113675U,	// MVE_VQDMULLs16th
    10636261U,	// MVE_VQDMULLs32bh
    10637963U,	// MVE_VQDMULLs32th
    10112065U,	// MVE_VQMOVNs16bh
    10113768U,	// MVE_VQMOVNs16th
    10636353U,	// MVE_VQMOVNs32bh
    10638056U,	// MVE_VQMOVNs32th
    11684929U,	// MVE_VQMOVNu16bh
    11686632U,	// MVE_VQMOVNu16th
    12209217U,	// MVE_VQMOVNu32bh
    12210920U,	// MVE_VQMOVNu32th
    10112056U,	// MVE_VQMOVUNs16bh
    10113759U,	// MVE_VQMOVUNs16th
    10636344U,	// MVE_VQMOVUNs32bh
    10638047U,	// MVE_VQMOVUNs32th
    10178004U,	// MVE_VQNEGs16
    10702292U,	// MVE_VQNEGs32
    11226580U,	// MVE_VQNEGs8
    10106110U,	// MVE_VQRDMLADHXs16
    10630398U,	// MVE_VQRDMLADHXs32
    11154686U,	// MVE_VQRDMLADHXs8
    10104337U,	// MVE_VQRDMLADHs16
    10628625U,	// MVE_VQRDMLADHs32
    11152913U,	// MVE_VQRDMLADHs8
    10104303U,	// MVE_VQRDMLAH_qrs16
    10628591U,	// MVE_VQRDMLAH_qrs32
    11152879U,	// MVE_VQRDMLAH_qrs8
    10104422U,	// MVE_VQRDMLASH_qrs16
    10628710U,	// MVE_VQRDMLASH_qrs32
    11152998U,	// MVE_VQRDMLASH_qrs8
    10106131U,	// MVE_VQRDMLSDHXs16
    10630419U,	// MVE_VQRDMLSDHXs32
    11154707U,	// MVE_VQRDMLSDHXs8
    10104356U,	// MVE_VQRDMLSDHs16
    10628644U,	// MVE_VQRDMLSDHs32
    11152932U,	// MVE_VQRDMLSDHs8
    10112571U,	// MVE_VQRDMULH_qr_s16
    10636859U,	// MVE_VQRDMULH_qr_s32
    11161147U,	// MVE_VQRDMULH_qr_s8
    10112571U,	// MVE_VQRDMULHi16
    10636859U,	// MVE_VQRDMULHi32
    11161147U,	// MVE_VQRDMULHi8
    10112876U,	// MVE_VQRSHL_by_vecs16
    10637164U,	// MVE_VQRSHL_by_vecs32
    11161452U,	// MVE_VQRSHL_by_vecs8
    11685740U,	// MVE_VQRSHL_by_vecu16
    12210028U,	// MVE_VQRSHL_by_vecu32
    12734316U,	// MVE_VQRSHL_by_vecu8
    10112876U,	// MVE_VQRSHL_qrs16
    10637164U,	// MVE_VQRSHL_qrs32
    11161452U,	// MVE_VQRSHL_qrs8
    11685740U,	// MVE_VQRSHL_qru16
    12210028U,	// MVE_VQRSHL_qru32
    12734316U,	// MVE_VQRSHL_qru8
    10103821U,	// MVE_VQRSHRNbhs16
    10628109U,	// MVE_VQRSHRNbhs32
    11676685U,	// MVE_VQRSHRNbhu16
    12200973U,	// MVE_VQRSHRNbhu32
    10105524U,	// MVE_VQRSHRNths16
    10629812U,	// MVE_VQRSHRNths32
    11678388U,	// MVE_VQRSHRNthu16
    12202676U,	// MVE_VQRSHRNthu32
    10103854U,	// MVE_VQRSHRUNs16bh
    10105557U,	// MVE_VQRSHRUNs16th
    10628142U,	// MVE_VQRSHRUNs32bh
    10629845U,	// MVE_VQRSHRUNs32th
    10113886U,	// MVE_VQSHLU_imms16
    10638174U,	// MVE_VQSHLU_imms32
    11162462U,	// MVE_VQSHLU_imms8
    10112863U,	// MVE_VQSHL_by_vecs16
    10637151U,	// MVE_VQSHL_by_vecs32
    11161439U,	// MVE_VQSHL_by_vecs8
    11685727U,	// MVE_VQSHL_by_vecu16
    12210015U,	// MVE_VQSHL_by_vecu32
    12734303U,	// MVE_VQSHL_by_vecu8
    10112863U,	// MVE_VQSHL_qrs16
    10637151U,	// MVE_VQSHL_qrs32
    11161439U,	// MVE_VQSHL_qrs8
    11685727U,	// MVE_VQSHL_qru16
    12210015U,	// MVE_VQSHL_qru32
    12734303U,	// MVE_VQSHL_qru8
    10112863U,	// MVE_VQSHLimms16
    10637151U,	// MVE_VQSHLimms32
    11161439U,	// MVE_VQSHLimms8
    11685727U,	// MVE_VQSHLimmu16
    12210015U,	// MVE_VQSHLimmu32
    12734303U,	// MVE_VQSHLimmu8
    10103813U,	// MVE_VQSHRNbhs16
    10628101U,	// MVE_VQSHRNbhs32
    11676677U,	// MVE_VQSHRNbhu16
    12200965U,	// MVE_VQSHRNbhu32
    10105516U,	// MVE_VQSHRNths16
    10629804U,	// MVE_VQSHRNths32
    11678380U,	// MVE_VQSHRNthu16
    12202668U,	// MVE_VQSHRNthu32
    10103845U,	// MVE_VQSHRUNs16bh
    10105548U,	// MVE_VQSHRUNs16th
    10628133U,	// MVE_VQSHRUNs32bh
    10629836U,	// MVE_VQSHRUNs32th
    10112171U,	// MVE_VQSUB_qr_s16
    10636459U,	// MVE_VQSUB_qr_s32
    11160747U,	// MVE_VQSUB_qr_s8
    11685035U,	// MVE_VQSUB_qr_u16
    12209323U,	// MVE_VQSUB_qr_u32
    12733611U,	// MVE_VQSUB_qr_u8
    10112171U,	// MVE_VQSUBs16
    10636459U,	// MVE_VQSUBs32
    11160747U,	// MVE_VQSUBs8
    11685035U,	// MVE_VQSUBu16
    12209323U,	// MVE_VQSUBu32
    12733611U,	// MVE_VQSUBu8
    1788403U,	// MVE_VREV16_8
    739604U,	// MVE_VREV32_16
    1788180U,	// MVE_VREV32_8
    739690U,	// MVE_VREV64_16
    1263978U,	// MVE_VREV64_32
    1788266U,	// MVE_VREV64_8
    10112314U,	// MVE_VRHADDs16
    10636602U,	// MVE_VRHADDs32
    11160890U,	// MVE_VRHADDs8
    11685178U,	// MVE_VRHADDu16
    12209466U,	// MVE_VRHADDu32
    12733754U,	// MVE_VRHADDu8
    7031617U,	// MVE_VRINTf16A
    7032887U,	// MVE_VRINTf16M
    7032989U,	// MVE_VRINTf16N
    7033078U,	// MVE_VRINTf16P
    7034207U,	// MVE_VRINTf16X
    7034257U,	// MVE_VRINTf16Z
    7555905U,	// MVE_VRINTf32A
    7557175U,	// MVE_VRINTf32M
    7557277U,	// MVE_VRINTf32N
    7557366U,	// MVE_VRINTf32P
    7558495U,	// MVE_VRINTf32X
    7558545U,	// MVE_VRINTf32Z
    10652364U,	// MVE_VRMLALDAVHas32
    12225228U,	// MVE_VRMLALDAVHau32
    10654736U,	// MVE_VRMLALDAVHaxs32
    10628756U,	// MVE_VRMLALDAVHs32
    12201620U,	// MVE_VRMLALDAVHu32
    10630430U,	// MVE_VRMLALDAVHxs32
    10652376U,	// MVE_VRMLSLDAVHas32
    10654749U,	// MVE_VRMLSLDAVHaxs32
    10628767U,	// MVE_VRMLSLDAVHs32
    10630442U,	// MVE_VRMLSLDAVHxs32
    10112580U,	// MVE_VRMULHs16
    10636868U,	// MVE_VRMULHs32
    11161156U,	// MVE_VRMULHs8
    11685444U,	// MVE_VRMULHu16
    12209732U,	// MVE_VRMULHu32
    12734020U,	// MVE_VRMULHu8
    10112883U,	// MVE_VRSHL_by_vecs16
    10637171U,	// MVE_VRSHL_by_vecs32
    11161459U,	// MVE_VRSHL_by_vecs8
    11685747U,	// MVE_VRSHL_by_vecu16
    12210035U,	// MVE_VRSHL_by_vecu32
    12734323U,	// MVE_VRSHL_by_vecu8
    10112883U,	// MVE_VRSHL_qrs16
    10637171U,	// MVE_VRSHL_qrs32
    11161459U,	// MVE_VRSHL_qrs8
    11685747U,	// MVE_VRSHL_qru16
    12210035U,	// MVE_VRSHL_qru32
    12734323U,	// MVE_VRSHL_qru8
    13773846U,	// MVE_VRSHRNi16bh
    13775549U,	// MVE_VRSHRNi16th
    13249558U,	// MVE_VRSHRNi32bh
    13251261U,	// MVE_VRSHRNi32th
    10113372U,	// MVE_VRSHR_imms16
    10637660U,	// MVE_VRSHR_imms32
    11161948U,	// MVE_VRSHR_imms8
    11686236U,	// MVE_VRSHR_immu16
    12210524U,	// MVE_VRSHR_immu32
    12734812U,	// MVE_VRSHR_immu8
    13266144U,	// MVE_VSBC
    13250246U,	// MVE_VSBCI
    673344759U,	// MVE_VSHLC
    10111966U,	// MVE_VSHLL_imms16bh
    10113668U,	// MVE_VSHLL_imms16th
    11160542U,	// MVE_VSHLL_imms8bh
    11162244U,	// MVE_VSHLL_imms8th
    11684830U,	// MVE_VSHLL_immu16bh
    11686532U,	// MVE_VSHLL_immu16th
    12733406U,	// MVE_VSHLL_immu8bh
    12735108U,	// MVE_VSHLL_immu8th
    10177502U,	// MVE_VSHLL_lws16bh
    10179204U,	// MVE_VSHLL_lws16th
    11226078U,	// MVE_VSHLL_lws8bh
    11227780U,	// MVE_VSHLL_lws8th
    11750366U,	// MVE_VSHLL_lwu16bh
    11752068U,	// MVE_VSHLL_lwu16th
    12798942U,	// MVE_VSHLL_lwu8bh
    12800644U,	// MVE_VSHLL_lwu8th
    10112889U,	// MVE_VSHL_by_vecs16
    10637177U,	// MVE_VSHL_by_vecs32
    11161465U,	// MVE_VSHL_by_vecs8
    11685753U,	// MVE_VSHL_by_vecu16
    12210041U,	// MVE_VSHL_by_vecu32
    12734329U,	// MVE_VSHL_by_vecu8
    13782905U,	// MVE_VSHL_immi16
    13258617U,	// MVE_VSHL_immi32
    14307193U,	// MVE_VSHL_immi8
    10112889U,	// MVE_VSHL_qrs16
    10637177U,	// MVE_VSHL_qrs32
    11161465U,	// MVE_VSHL_qrs8
    11685753U,	// MVE_VSHL_qru16
    12210041U,	// MVE_VSHL_qru32
    12734329U,	// MVE_VSHL_qru8
    13773854U,	// MVE_VSHRNi16bh
    13775557U,	// MVE_VSHRNi16th
    13249566U,	// MVE_VSHRNi32bh
    13251269U,	// MVE_VSHRNi32th
    10113378U,	// MVE_VSHR_imms16
    10637666U,	// MVE_VSHR_imms32
    11161954U,	// MVE_VSHR_imms8
    11686242U,	// MVE_VSHR_immu16
    12210530U,	// MVE_VSHR_immu32
    12734818U,	// MVE_VSHR_immu8
    667354U,	// MVE_VSLIimm16
    1191642U,	// MVE_VSLIimm32
    1715930U,	// MVE_VSLIimm8
    667359U,	// MVE_VSRIimm16
    1191647U,	// MVE_VSRIimm32
    1715935U,	// MVE_VSRIimm8
    23815031U,	// MVE_VST20_16
    246647U,	// MVE_VST20_16_wb
    23814161U,	// MVE_VST20_32
    245777U,	// MVE_VST20_32_wb
    23815666U,	// MVE_VST20_8
    247282U,	// MVE_VST20_8_wb
    23815071U,	// MVE_VST21_16
    246687U,	// MVE_VST21_16_wb
    23814227U,	// MVE_VST21_32
    245843U,	// MVE_VST21_32_wb
    23815702U,	// MVE_VST21_8
    247318U,	// MVE_VST21_8_wb
    23823243U,	// MVE_VST40_16
    254859U,	// MVE_VST40_16_wb
    23822373U,	// MVE_VST40_32
    253989U,	// MVE_VST40_32_wb
    23823876U,	// MVE_VST40_8
    255492U,	// MVE_VST40_8_wb
    23823283U,	// MVE_VST41_16
    254899U,	// MVE_VST41_16_wb
    23822439U,	// MVE_VST41_32
    254055U,	// MVE_VST41_32_wb
    23823912U,	// MVE_VST41_8
    255528U,	// MVE_VST41_8_wb
    23823303U,	// MVE_VST42_16
    254919U,	// MVE_VST42_16_wb
    23822485U,	// MVE_VST42_32
    254101U,	// MVE_VST42_32_wb
    23823930U,	// MVE_VST42_8
    255546U,	// MVE_VST42_8_wb
    23823323U,	// MVE_VST43_16
    254939U,	// MVE_VST43_16_wb
    23822518U,	// MVE_VST43_32
    254134U,	// MVE_VST43_32_wb
    23823948U,	// MVE_VST43_8
    255564U,	// MVE_VST43_8_wb
    674907U,	// MVE_VSTRB16
    738864219U,	// MVE_VSTRB16_post
    738864219U,	// MVE_VSTRB16_pre
    674907U,	// MVE_VSTRB16_rq
    1199195U,	// MVE_VSTRB32
    739388507U,	// MVE_VSTRB32_post
    739388507U,	// MVE_VSTRB32_pre
    1199195U,	// MVE_VSTRB32_rq
    1723483U,	// MVE_VSTRB8_rq
    1723483U,	// MVE_VSTRBU8
    739912795U,	// MVE_VSTRBU8_post
    739912795U,	// MVE_VSTRBU8_pre
    14830965U,	// MVE_VSTRD64_qi
    753020277U,	// MVE_VSTRD64_qi_pre
    14830965U,	// MVE_VSTRD64_rq
    14830965U,	// MVE_VSTRD64_rq_u
    675415U,	// MVE_VSTRH16_rq
    675415U,	// MVE_VSTRH16_rq_u
    1199703U,	// MVE_VSTRH32
    739389015U,	// MVE_VSTRH32_post
    739389015U,	// MVE_VSTRH32_pre
    1199703U,	// MVE_VSTRH32_rq
    1199703U,	// MVE_VSTRH32_rq_u
    675415U,	// MVE_VSTRHU16
    738864727U,	// MVE_VSTRHU16_post
    738864727U,	// MVE_VSTRHU16_pre
    1201157U,	// MVE_VSTRW32_qi
    739390469U,	// MVE_VSTRW32_qi_pre
    1201157U,	// MVE_VSTRW32_rq
    1201157U,	// MVE_VSTRW32_rq_u
    1201157U,	// MVE_VSTRWU32
    739390469U,	// MVE_VSTRWU32_post
    739390469U,	// MVE_VSTRWU32_pre
    6966449U,	// MVE_VSUB_qr_f16
    7490737U,	// MVE_VSUB_qr_f32
    13782193U,	// MVE_VSUB_qr_i16
    13257905U,	// MVE_VSUB_qr_i32
    14306481U,	// MVE_VSUB_qr_i8
    6966449U,	// MVE_VSUBf16
    7490737U,	// MVE_VSUBf32
    13782193U,	// MVE_VSUBi16
    13257905U,	// MVE_VSUBi32
    14306481U,	// MVE_VSUBi8
    740901871U,	// MVE_WLSTP_16
    740901118U,	// MVE_WLSTP_32
    740901480U,	// MVE_WLSTP_64
    740902529U,	// MVE_WLSTP_8
    2134212U,	// MVNi
    2134212U,	// MVNr
    2109636U,	// MVNsi
    2166980U,	// MVNsr
    740901306U,	// NEON_VMAXNMNDf
    740902201U,	// NEON_VMAXNMNDh
    740901306U,	// NEON_VMAXNMNQf
    740902201U,	// NEON_VMAXNMNQh
    740901294U,	// NEON_VMINNMNDf
    740902189U,	// NEON_VMINNMNDh
    740901294U,	// NEON_VMINNMNQf
    740902189U,	// NEON_VMINNMNQh
    2109821U,	// ORRri
    2109821U,	// ORRrr
    2167165U,	// ORRrsi
    78205U,	// ORRrsr
    2142762U,	// PKHBT
    2141306U,	// PKHTB
    264171U,	// PLDWi12
    272363U,	// PLDWrs
    264010U,	// PLDi12
    272202U,	// PLDrs
    264056U,	// PLIi12
    272248U,	// PLIrs
    2157902U,	// QADD
    2157008U,	// QADD16
    2157111U,	// QADD8
    2159952U,	// QASX
    2157876U,	// QDADD
    2157727U,	// QDSUB
    2159698U,	// QSAX
    2157740U,	// QSUB
    2156970U,	// QSUB16
    2157072U,	// QSUB8
    2126453U,	// RBIT
    2126771U,	// REV
    2124276U,	// REV16
    2125444U,	// REVSH
    3753707U,	// RFEDA
    24200939U,	// RFEDA_UPD
    3753738U,	// RFEDB
    24200970U,	// RFEDB_UPD
    3753714U,	// RFEIA
    24200946U,	// RFEIA_UPD
    3753745U,	// RFEIB
    24200977U,	// RFEIB_UPD
    2108523U,	// RSBri
    2108523U,	// RSBrr
    2165867U,	// RSBrsi
    76907U,	// RSBrsr
    2108682U,	// RSCri
    2108682U,	// RSCrr
    2166026U,	// RSCrsi
    77066U,	// RSCrsr
    2157015U,	// SADD16
    2157117U,	// SADD8
    2159957U,	// SASX
    3170U,	// SB
    2108641U,	// SBCri
    2108641U,	// SBCrr
    2165985U,	// SBCrsi
    77025U,	// SBCrsr
    2143466U,	// SBFX
    2159543U,	// SDIV
    2158411U,	// SEL
    280399U,	// SETEND
    3753879U,	// SETPAN
    673792192U,	// SHA1C
    740901066U,	// SHA1H
    673792224U,	// SHA1M
    673792234U,	// SHA1P
    673792047U,	// SHA1SU0
    673792113U,	// SHA1SU1
    673792212U,	// SHA256H
    673792159U,	// SHA256H2
    673792059U,	// SHA256SU0
    673792125U,	// SHA256SU1
    2156991U,	// SHADD16
    2157096U,	// SHADD8
    2159939U,	// SHASX
    2159685U,	// SHSAX
    2156953U,	// SHSUB16
    2157057U,	// SHSUB8
    2206973U,	// SMC
    2141086U,	// SMLABB
    2142755U,	// SMLABT
    2141462U,	// SMLAD
    2143392U,	// SMLADX
    290575U,	// SMLAL
    2231205U,	// SMLALBB
    2232880U,	// SMLALBT
    2231640U,	// SMLALD
    2233518U,	// SMLALDX
    2231424U,	// SMLALTB
    2233122U,	// SMLALTT
    2141299U,	// SMLATB
    2143003U,	// SMLATT
    2141366U,	// SMLAWB
    2143051U,	// SMLAWT
    2141563U,	// SMLSD
    2143422U,	// SMLSDX
    2231651U,	// SMLSLD
    2233526U,	// SMLSLDX
    2140932U,	// SMMLA
    2142517U,	// SMMLAR
    2142666U,	// SMMLS
    2142597U,	// SMMLSR
    2158596U,	// SMMUL
    2158951U,	// SMMULR
    2157852U,	// SMUAD
    2159783U,	// SMUADX
    2157485U,	// SMULBB
    2159160U,	// SMULBT
    2166709U,	// SMULL
    2157704U,	// SMULTB
    2159402U,	// SMULTT
    2157757U,	// SMULWB
    2159442U,	// SMULWT
    2157953U,	// SMUSD
    2159813U,	// SMUSDX
    3754037U,	// SRSDA
    3753989U,	// SRSDA_UPD
    3754059U,	// SRSDB
    3754013U,	// SRSDB_UPD
    3754048U,	// SRSIA
    3754001U,	// SRSIA_UPD
    3754070U,	// SRSIB
    3754025U,	// SRSIB_UPD
    2142740U,	// SSAT
    2157029U,	// SSAT16
    2159703U,	// SSAX
    2156977U,	// SSUB16
    2157078U,	// SSUB8
    1417848708U,	// STC2L_OFFSET
    1484957572U,	// STC2L_OPTION
    1484957572U,	// STC2L_POST
    1552066436U,	// STC2L_PRE
    1417847353U,	// STC2_OFFSET
    1484956217U,	// STC2_OPTION
    1484956217U,	// STC2_POST
    1552065081U,	// STC2_PRE
    1142992689U,	// STCL_OFFSET
    1142992689U,	// STCL_OPTION
    1142992689U,	// STCL_POST
    1142992689U,	// STCL_PRE
    1142992142U,	// STC_OFFSET
    1142992142U,	// STC_OPTION
    1142992142U,	// STC_POST
    1142992142U,	// STC_PRE
    2125818U,	// STL
    2124789U,	// STLB
    2159826U,	// STLEX
    2157771U,	// STLEXB
    2157966U,	// STLEXD
    2158257U,	// STLEXH
    2125358U,	// STLH
    2206406U,	// STMDA
    740321990U,	// STMDA_UPD
    2206662U,	// STMDB
    740322246U,	// STMDB_UPD
    2207808U,	// STMIA
    740323392U,	// STMIA_UPD
    2206680U,	// STMIB
    740322264U,	// STMIB_UPD
    740348485U,	// STRBT_POST_IMM
    740348485U,	// STRBT_POST_REG
    740346972U,	// STRB_POST_IMM
    740346972U,	// STRB_POST_REG
    740338780U,	// STRB_PRE_IMM
    740346972U,	// STRB_PRE_REG
    2157660U,	// STRBi12
    2141276U,	// STRBrs
    2149750U,	// STRD
    740429174U,	// STRD_POST
    740429174U,	// STRD_PRE
    2159844U,	// STREX
    2157785U,	// STREXB
    2157980U,	// STREXD
    2158271U,	// STREXH
    2141784U,	// STRH
    740340328U,	// STRHTi
    740348520U,	// STRHTr
    740347480U,	// STRH_POST
    740347480U,	// STRH_PRE
    740348684U,	// STRT_POST_IMM
    740348684U,	// STRT_POST_REG
    740348319U,	// STR_POST_IMM
    740348319U,	// STR_POST_REG
    740340127U,	// STR_PRE_IMM
    740348319U,	// STR_PRE_REG
    2159007U,	// STRi12
    2142623U,	// STRrs
    2108577U,	// SUBri
    2108577U,	// SUBrr
    2165921U,	// SUBrsi
    76961U,	// SUBrsr
    2206994U,	// SVC
    2158883U,	// SWP
    2157648U,	// SWPB
    2141074U,	// SXTAB
    2140539U,	// SXTAB16
    2141688U,	// SXTAH
    2157717U,	// SXTB
    2156939U,	// SXTB16
    2158218U,	// SXTH
    2126129U,	// TEQri
    2126129U,	// TEQrr
    2158897U,	// TEQrsi
    2142513U,	// TEQrsr
    4309U,	// TRAP
    4309U,	// TRAPNaCl
    296743U,	// TSB
    2126615U,	// TSTri
    2126615U,	// TSTrr
    2159383U,	// TSTrsi
    2142999U,	// TSTrsr
    2157022U,	// UADD16
    2157123U,	// UADD8
    2159962U,	// UASX
    2143471U,	// UBFX
    3753819U,	// UDF
    2159548U,	// UDIV
    2156999U,	// UHADD16
    2157103U,	// UHADD8
    2159945U,	// UHASX
    2159691U,	// UHSAX
    2156961U,	// UHSUB16
    2157064U,	// UHSUB8
    2232052U,	// UMAAL
    290581U,	// UMLAL
    2166715U,	// UMULL
    2157007U,	// UQADD16
    2157110U,	// UQADD8
    2159951U,	// UQASX
    2159697U,	// UQSAX
    2156969U,	// UQSUB16
    2157071U,	// UQSUB8
    2157090U,	// USAD8
    2140666U,	// USADA8
    2142745U,	// USAT
    2157036U,	// USAT16
    2159708U,	// USAX
    2156984U,	// USUB16
    2157084U,	// USUB8
    2141080U,	// UXTAB
    2140547U,	// UXTAB16
    2141694U,	// UXTAH
    2157722U,	// UXTB
    2156946U,	// UXTB16
    2158223U,	// UXTH
    10530554U,	// VABALsv2i64
    10006266U,	// VABALsv4i32
    11054842U,	// VABALsv8i16
    12103418U,	// VABALuv2i64
    11579130U,	// VABALuv4i32
    12627706U,	// VABALuv8i16
    11053733U,	// VABAsv16i8
    10529445U,	// VABAsv2i32
    10005157U,	// VABAsv4i16
    10529445U,	// VABAsv4i32
    10005157U,	// VABAsv8i16
    11053733U,	// VABAsv8i8
    12626597U,	// VABAuv16i8
    12102309U,	// VABAuv2i32
    11578021U,	// VABAuv4i16
    12102309U,	// VABAuv4i32
    11578021U,	// VABAuv8i16
    12626597U,	// VABAuv8i8
    10546998U,	// VABDLsv2i64
    10022710U,	// VABDLsv4i32
    11071286U,	// VABDLsv8i16
    12119862U,	// VABDLuv2i64
    11595574U,	// VABDLuv4i32
    12644150U,	// VABDLuv8i16
    7400738U,	// VABDfd
    7400738U,	// VABDfq
    6876450U,	// VABDhd
    6876450U,	// VABDhq
    11070754U,	// VABDsv16i8
    10546466U,	// VABDsv2i32
    10022178U,	// VABDsv4i16
    10546466U,	// VABDsv4i32
    10022178U,	// VABDsv8i16
    11070754U,	// VABDsv8i8
    12643618U,	// VABDuv16i8
    12119330U,	// VABDuv2i32
    11595042U,	// VABDuv4i16
    12119330U,	// VABDuv4i32
    11595042U,	// VABDuv8i16
    12643618U,	// VABDuv8i8
    1080062395U,	// VABSD
    6844859U,	// VABSH
    7369147U,	// VABSS
    7369147U,	// VABSfd
    7369147U,	// VABSfq
    6844859U,	// VABShd
    6844859U,	// VABShq
    11039163U,	// VABSv16i8
    10514875U,	// VABSv2i32
    9990587U,	// VABSv4i16
    10514875U,	// VABSv4i32
    9990587U,	// VABSv8i16
    11039163U,	// VABSv8i8
    7400867U,	// VACGEfd
    7400867U,	// VACGEfq
    6876579U,	// VACGEhd
    6876579U,	// VACGEhq
    7402071U,	// VACGTfd
    7402071U,	// VACGTfq
    6877783U,	// VACGThd
    6877783U,	// VACGThq
    1080094035U,	// VADDD
    6876499U,	// VADDH
    760279137U,	// VADDHNv2i32
    13168737U,	// VADDHNv4i16
    13693025U,	// VADDHNv8i8
    10547011U,	// VADDLsv2i64
    10022723U,	// VADDLsv4i32
    11071299U,	// VADDLsv8i16
    12119875U,	// VADDLuv2i64
    11595587U,	// VADDLuv4i32
    12644163U,	// VADDLuv8i16
    7400787U,	// VADDS
    10548212U,	// VADDWsv2i64
    10023924U,	// VADDWsv4i32
    11072500U,	// VADDWsv8i16
    12121076U,	// VADDWuv2i64
    11596788U,	// VADDWuv4i32
    12645364U,	// VADDWuv8i16
    7400787U,	// VADDfd
    7400787U,	// VADDfq
    6876499U,	// VADDhd
    6876499U,	// VADDhq
    14216531U,	// VADDv16i8
    760278355U,	// VADDv1i64
    13167955U,	// VADDv2i32
    760278355U,	// VADDv2i64
    13692243U,	// VADDv4i16
    13167955U,	// VADDv4i32
    13692243U,	// VADDv8i16
    14216531U,	// VADDv8i8
    2157930U,	// VANDd
    2157930U,	// VANDq
    808019398U,	// VBF16MALBQ
    808019398U,	// VBF16MALBQI
    808019410U,	// VBF16MALTQ
    808019410U,	// VBF16MALTQI
    2157810U,	// VBICd
    13167858U,	// VBICiv2i32
    13692146U,	// VBICiv4i16
    13167858U,	// VBICiv4i32
    13692146U,	// VBICiv8i16
    2157810U,	// VBICq
    2141643U,	// VBIFd
    2141643U,	// VBIFq
    2142842U,	// VBITd
    2142842U,	// VBITq
    2142183U,	// VBSLd
    2142183U,	// VBSLq
    740901271U,	// VCADDv2f32
    740902144U,	// VCADDv4f16
    740901271U,	// VCADDv4f32
    740902144U,	// VCADDv8f16
    7401772U,	// VCEQfd
    7401772U,	// VCEQfq
    6877484U,	// VCEQhd
    6877484U,	// VCEQhq
    14217516U,	// VCEQv16i8
    13168940U,	// VCEQv2i32
    13693228U,	// VCEQv4i16
    13168940U,	// VCEQv4i32
    13693228U,	// VCEQv8i16
    14217516U,	// VCEQv8i8
    14184748U,	// VCEQzv16i8
    7369004U,	// VCEQzv2f32
    13136172U,	// VCEQzv2i32
    6844716U,	// VCEQzv4f16
    7369004U,	// VCEQzv4f32
    13660460U,	// VCEQzv4i16
    13136172U,	// VCEQzv4i32
    6844716U,	// VCEQzv8f16
    13660460U,	// VCEQzv8i16
    14184748U,	// VCEQzv8i8
    7400873U,	// VCGEfd
    7400873U,	// VCGEfq
    6876585U,	// VCGEhd
    6876585U,	// VCGEhq
    11070889U,	// VCGEsv16i8
    10546601U,	// VCGEsv2i32
    10022313U,	// VCGEsv4i16
    10546601U,	// VCGEsv4i32
    10022313U,	// VCGEsv8i16
    11070889U,	// VCGEsv8i8
    12643753U,	// VCGEuv16i8
    12119465U,	// VCGEuv2i32
    11595177U,	// VCGEuv4i16
    12119465U,	// VCGEuv4i32
    11595177U,	// VCGEuv8i16
    12643753U,	// VCGEuv8i8
    11038121U,	// VCGEzv16i8
    7368105U,	// VCGEzv2f32
    10513833U,	// VCGEzv2i32
    6843817U,	// VCGEzv4f16
    7368105U,	// VCGEzv4f32
    9989545U,	// VCGEzv4i16
    10513833U,	// VCGEzv4i32
    6843817U,	// VCGEzv8f16
    9989545U,	// VCGEzv8i16
    11038121U,	// VCGEzv8i8
    7402077U,	// VCGTfd
    7402077U,	// VCGTfq
    6877789U,	// VCGThd
    6877789U,	// VCGThq
    11072093U,	// VCGTsv16i8
    10547805U,	// VCGTsv2i32
    10023517U,	// VCGTsv4i16
    10547805U,	// VCGTsv4i32
    10023517U,	// VCGTsv8i16
    11072093U,	// VCGTsv8i8
    12644957U,	// VCGTuv16i8
    12120669U,	// VCGTuv2i32
    11596381U,	// VCGTuv4i16
    12120669U,	// VCGTuv4i32
    11596381U,	// VCGTuv8i16
    12644957U,	// VCGTuv8i8
    11039325U,	// VCGTzv16i8
    7369309U,	// VCGTzv2f32
    10515037U,	// VCGTzv2i32
    6845021U,	// VCGTzv4f16
    7369309U,	// VCGTzv4f32
    9990749U,	// VCGTzv4i16
    10515037U,	// VCGTzv4i32
    6845021U,	// VCGTzv8f16
    9990749U,	// VCGTzv8i16
    11039325U,	// VCGTzv8i8
    11038126U,	// VCLEzv16i8
    7368110U,	// VCLEzv2f32
    10513838U,	// VCLEzv2i32
    6843822U,	// VCLEzv4f16
    7368110U,	// VCLEzv4f32
    9989550U,	// VCLEzv4i16
    10513838U,	// VCLEzv4i32
    6843822U,	// VCLEzv8f16
    9989550U,	// VCLEzv8i16
    11038126U,	// VCLEzv8i8
    11039173U,	// VCLSv16i8
    10514885U,	// VCLSv2i32
    9990597U,	// VCLSv4i16
    10514885U,	// VCLSv4i32
    9990597U,	// VCLSv8i16
    11039173U,	// VCLSv8i8
    11039359U,	// VCLTzv16i8
    7369343U,	// VCLTzv2f32
    10515071U,	// VCLTzv2i32
    6845055U,	// VCLTzv4f16
    7369343U,	// VCLTzv4f32
    9990783U,	// VCLTzv4i16
    10515071U,	// VCLTzv4i32
    6845055U,	// VCLTzv8f16
    9990783U,	// VCLTzv8i16
    11039359U,	// VCLTzv8i8
    14185868U,	// VCLZv16i8
    13137292U,	// VCLZv2i32
    13661580U,	// VCLZv4i16
    13137292U,	// VCLZv4i32
    13661580U,	// VCLZv8i16
    14185868U,	// VCLZv8i8
    673792384U,	// VCMLAv2f32
    673792384U,	// VCMLAv2f32_indexed
    673793257U,	// VCMLAv4f16
    673793257U,	// VCMLAv4f16_indexed
    673792384U,	// VCMLAv4f32
    673792384U,	// VCMLAv4f32_indexed
    673793257U,	// VCMLAv8f16
    673793257U,	// VCMLAv8f16_indexed
    1080062179U,	// VCMPD
    1080061370U,	// VCMPED
    6843834U,	// VCMPEH
    7368122U,	// VCMPES
    1952558522U,	// VCMPEZD
    6925754U,	// VCMPEZH
    7450042U,	// VCMPEZS
    6844643U,	// VCMPH
    7368931U,	// VCMPS
    1952559331U,	// VCMPZD
    6926563U,	// VCMPZH
    7450851U,	// VCMPZS
    1602210U,	// VCNTd
    1602210U,	// VCNTq
    740901128U,	// VCVTANSDf
    740902001U,	// VCVTANSDh
    740901128U,	// VCVTANSQf
    740902001U,	// VCVTANSQh
    740901188U,	// VCVTANUDf
    740902061U,	// VCVTANUDh
    740901188U,	// VCVTANUQf
    740902061U,	// VCVTANUQh
    740901490U,	// VCVTASD
    740901881U,	// VCVTASH
    740901128U,	// VCVTASS
    740901550U,	// VCVTAUD
    740901941U,	// VCVTAUH
    740901188U,	// VCVTAUS
    24669327U,	// VCVTBDH
    25193615U,	// VCVTBHD
    16805007U,	// VCVTBHS
    753429647U,	// VCVTBSH
    25719617U,	// VCVTDS
    740901143U,	// VCVTMNSDf
    740902016U,	// VCVTMNSDh
    740901143U,	// VCVTMNSQf
    740902016U,	// VCVTMNSQh
    740901203U,	// VCVTMNUDf
    740902076U,	// VCVTMNUDh
    740901203U,	// VCVTMNUQf
    740902076U,	// VCVTMNUQh
    740901505U,	// VCVTMSD
    740901896U,	// VCVTMSH
    740901143U,	// VCVTMSS
    740901565U,	// VCVTMUD
    740901956U,	// VCVTMUH
    740901203U,	// VCVTMUS
    740901158U,	// VCVTNNSDf
    740902031U,	// VCVTNNSDh
    740901158U,	// VCVTNNSQf
    740902031U,	// VCVTNNSQh
    740901218U,	// VCVTNNUDf
    740902091U,	// VCVTNNUDh
    740901218U,	// VCVTNNUQf
    740902091U,	// VCVTNNUQh
    740901520U,	// VCVTNSD
    740901911U,	// VCVTNSH
    740901158U,	// VCVTNSS
    740901580U,	// VCVTNUD
    740901971U,	// VCVTNUH
    740901218U,	// VCVTNUS
    740901173U,	// VCVTPNSDf
    740902046U,	// VCVTPNSDh
    740901173U,	// VCVTPNSQf
    740902046U,	// VCVTPNSQh
    740901233U,	// VCVTPNUDf
    740902106U,	// VCVTPNUDh
    740901233U,	// VCVTPNUQf
    740902106U,	// VCVTPNUQh
    740901535U,	// VCVTPSD
    740901926U,	// VCVTPSH
    740901173U,	// VCVTPSS
    740901595U,	// VCVTPUD
    740901986U,	// VCVTPUH
    740901233U,	// VCVTPUS
    26243905U,	// VCVTSD
    24671029U,	// VCVTTDH
    25195317U,	// VCVTTHD
    16806709U,	// VCVTTHS
    753431349U,	// VCVTTSH
    753431361U,	// VCVTf2h
    1025536833U,	// VCVTf2sd
    1025536833U,	// VCVTf2sq
    1026585409U,	// VCVTf2ud
    1026585409U,	// VCVTf2uq
    1092678465U,	// VCVTf2xsd
    1092678465U,	// VCVTf2xsq
    1093727041U,	// VCVTf2xud
    1093727041U,	// VCVTf2xuq
    16806721U,	// VCVTh2f
    1025012545U,	// VCVTh2sd
    1025012545U,	// VCVTh2sq
    1026061121U,	// VCVTh2ud
    1026061121U,	// VCVTh2uq
    1092154177U,	// VCVTh2xsd
    1092154177U,	// VCVTh2xsq
    1093202753U,	// VCVTh2xud
    1093202753U,	// VCVTh2xuq
    1023963969U,	// VCVTs2fd
    1023963969U,	// VCVTs2fq
    1022391105U,	// VCVTs2hd
    1022391105U,	// VCVTs2hq
    1024488257U,	// VCVTu2fd
    1024488257U,	// VCVTu2fq
    1022915393U,	// VCVTu2hd
    1022915393U,	// VCVTu2hq
    1091105601U,	// VCVTxs2fd
    1091105601U,	// VCVTxs2fq
    1089532737U,	// VCVTxs2hd
    1089532737U,	// VCVTxs2hq
    1091629889U,	// VCVTxu2fd
    1091629889U,	// VCVTxu2fq
    1090057025U,	// VCVTxu2hd
    1090057025U,	// VCVTxu2hq
    1080095681U,	// VDIVD
    6878145U,	// VDIVH
    7402433U,	// VDIVS
    553231U,	// VDUP16d
    553231U,	// VDUP16q
    1077519U,	// VDUP32d
    1077519U,	// VDUP32q
    1601807U,	// VDUP8d
    1601807U,	// VDUP8q
    585999U,	// VDUPLN16d
    585999U,	// VDUPLN16q
    1110287U,	// VDUPLN32d
    1110287U,	// VDUPLN32q
    1634575U,	// VDUPLN8d
    1634575U,	// VDUPLN8q
    2158958U,	// VEORd
    2158958U,	// VEORq
    570201U,	// VEXTd16
    1094489U,	// VEXTd32
    1618777U,	// VEXTd8
    570201U,	// VEXTq16
    1094489U,	// VEXTq32
    14725977U,	// VEXTq64
    1618777U,	// VEXTq8
    1080077077U,	// VFMAD
    6859541U,	// VFMAH
    740902167U,	// VFMALD
    740902167U,	// VFMALDI
    740902167U,	// VFMALQ
    740902167U,	// VFMALQI
    7383829U,	// VFMAS
    7383829U,	// VFMAfd
    7383829U,	// VFMAfq
    6859541U,	// VFMAhd
    6859541U,	// VFMAhq
    1080078811U,	// VFMSD
    6861275U,	// VFMSH
    740902178U,	// VFMSLD
    740902178U,	// VFMSLDI
    740902178U,	// VFMSLQ
    740902178U,	// VFMSLQI
    7385563U,	// VFMSS
    7385563U,	// VFMSfd
    7385563U,	// VFMSfq
    6861275U,	// VFMShd
    6861275U,	// VFMShq
    1080077082U,	// VFNMAD
    6859546U,	// VFNMAH
    7383834U,	// VFNMAS
    1080078816U,	// VFNMSD
    6861280U,	// VFNMSH
    7385568U,	// VFNMSS
    740901646U,	// VFP_VMAXNMD
    740902201U,	// VFP_VMAXNMH
    740901306U,	// VFP_VMAXNMS
    740901634U,	// VFP_VMINNMD
    740902189U,	// VFP_VMINNMH
    740901294U,	// VFP_VMINNMS
    1111011U,	// VGETLNi32
    10023907U,	// VGETLNs16
    11072483U,	// VGETLNs8
    11596771U,	// VGETLNu16
    12645347U,	// VGETLNu8
    11070785U,	// VHADDsv16i8
    10546497U,	// VHADDsv2i32
    10022209U,	// VHADDsv4i16
    10546497U,	// VHADDsv4i32
    10022209U,	// VHADDsv8i16
    11070785U,	// VHADDsv8i8
    12643649U,	// VHADDuv16i8
    12119361U,	// VHADDuv2i32
    11595073U,	// VHADDuv4i16
    12119361U,	// VHADDuv4i32
    11595073U,	// VHADDuv8i16
    12643649U,	// VHADDuv8i8
    11070629U,	// VHSUBsv16i8
    10546341U,	// VHSUBsv2i32
    10022053U,	// VHSUBsv4i16
    10546341U,	// VHSUBsv4i32
    10022053U,	// VHSUBsv8i16
    11070629U,	// VHSUBsv8i8
    12643493U,	// VHSUBuv16i8
    12119205U,	// VHSUBuv2i32
    11594917U,	// VHSUBuv4i16
    12119205U,	// VHSUBuv4i32
    11594917U,	// VHSUBuv8i16
    12643493U,	// VHSUBuv8i8
    740902261U,	// VINSH
    1033401147U,	// VJCVT
    2013849855U,	// VLD1DUPd16
    2013833471U,	// VLD1DUPd16wb_fixed
    2013841663U,	// VLD1DUPd16wb_register
    2014374143U,	// VLD1DUPd32
    2014357759U,	// VLD1DUPd32wb_fixed
    2014365951U,	// VLD1DUPd32wb_register
    2014898431U,	// VLD1DUPd8
    2014882047U,	// VLD1DUPd8wb_fixed
    2014890239U,	// VLD1DUPd8wb_register
    2080958719U,	// VLD1DUPq16
    2080942335U,	// VLD1DUPq16wb_fixed
    2080950527U,	// VLD1DUPq16wb_register
    2081483007U,	// VLD1DUPq32
    2081466623U,	// VLD1DUPq32wb_fixed
    2081474815U,	// VLD1DUPq32wb_register
    2082007295U,	// VLD1DUPq8
    2081990911U,	// VLD1DUPq8wb_fixed
    2081999103U,	// VLD1DUPq8wb_register
    27314431U,	// VLD1LNd16
    27568383U,	// VLD1LNd16_UPD
    27838719U,	// VLD1LNd32
    28092671U,	// VLD1LNd32_UPD
    28363007U,	// VLD1LNd8
    28616959U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    2148067583U,	// VLD1d16
    537454847U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    537438463U,	// VLD1d16Qwb_fixed
    537446655U,	// VLD1d16Qwb_register
    269019391U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    269003007U,	// VLD1d16Twb_fixed
    269011199U,	// VLD1d16Twb_register
    2148051199U,	// VLD1d16wb_fixed
    2148059391U,	// VLD1d16wb_register
    2148591871U,	// VLD1d32
    537979135U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    537962751U,	// VLD1d32Qwb_fixed
    537970943U,	// VLD1d32Qwb_register
    269543679U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    269527295U,	// VLD1d32Twb_fixed
    269535487U,	// VLD1d32Twb_register
    2148575487U,	// VLD1d32wb_fixed
    2148583679U,	// VLD1d32wb_register
    2162223359U,	// VLD1d64
    551610623U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    551594239U,	// VLD1d64Qwb_fixed
    551602431U,	// VLD1d64Qwb_register
    283175167U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    283158783U,	// VLD1d64Twb_fixed
    283166975U,	// VLD1d64Twb_register
    2162206975U,	// VLD1d64wb_fixed
    2162215167U,	// VLD1d64wb_register
    2149116159U,	// VLD1d8
    538503423U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    538487039U,	// VLD1d8Qwb_fixed
    538495231U,	// VLD1d8Qwb_register
    270067967U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    270051583U,	// VLD1d8Twb_fixed
    270059775U,	// VLD1d8Twb_register
    2149099775U,	// VLD1d8wb_fixed
    2149107967U,	// VLD1d8wb_register
    2215176447U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    2215160063U,	// VLD1q16wb_fixed
    2215168255U,	// VLD1q16wb_register
    2215700735U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    2215684351U,	// VLD1q32wb_fixed
    2215692543U,	// VLD1q32wb_register
    2229332223U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    2229315839U,	// VLD1q64wb_fixed
    2229324031U,	// VLD1q64wb_register
    2216225023U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    2216208639U,	// VLD1q8wb_fixed
    2216216831U,	// VLD1q8wb_register
    2080958768U,	// VLD2DUPd16
    2080942384U,	// VLD2DUPd16wb_fixed
    2080950576U,	// VLD2DUPd16wb_register
    2282285360U,	// VLD2DUPd16x2
    2282268976U,	// VLD2DUPd16x2wb_fixed
    2282277168U,	// VLD2DUPd16x2wb_register
    2081483056U,	// VLD2DUPd32
    2081466672U,	// VLD2DUPd32wb_fixed
    2081474864U,	// VLD2DUPd32wb_register
    2282809648U,	// VLD2DUPd32x2
    2282793264U,	// VLD2DUPd32x2wb_fixed
    2282801456U,	// VLD2DUPd32x2wb_register
    2082007344U,	// VLD2DUPd8
    2081990960U,	// VLD2DUPd8wb_fixed
    2081999152U,	// VLD2DUPd8wb_register
    2283333936U,	// VLD2DUPd8x2
    2283317552U,	// VLD2DUPd8x2wb_fixed
    2283325744U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    27568432U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    27576624U,	// VLD2LNd16_UPD
    28092720U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    28100912U,	// VLD2LNd32_UPD
    28617008U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    28625200U,	// VLD2LNd8_UPD
    27568432U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    27576624U,	// VLD2LNq16_UPD
    28092720U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    28100912U,	// VLD2LNq32_UPD
    2349394224U,	// VLD2b16
    2349377840U,	// VLD2b16wb_fixed
    2349386032U,	// VLD2b16wb_register
    2349918512U,	// VLD2b32
    2349902128U,	// VLD2b32wb_fixed
    2349910320U,	// VLD2b32wb_register
    2350442800U,	// VLD2b8
    2350426416U,	// VLD2b8wb_fixed
    2350434608U,	// VLD2b8wb_register
    2215176496U,	// VLD2d16
    2215160112U,	// VLD2d16wb_fixed
    2215168304U,	// VLD2d16wb_register
    2215700784U,	// VLD2d32
    2215684400U,	// VLD2d32wb_fixed
    2215692592U,	// VLD2d32wb_register
    2216225072U,	// VLD2d8
    2216208688U,	// VLD2d8wb_fixed
    2216216880U,	// VLD2d8wb_register
    537454896U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    537438512U,	// VLD2q16wb_fixed
    537446704U,	// VLD2q16wb_register
    537979184U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    537962800U,	// VLD2q32wb_fixed
    537970992U,	// VLD2q32wb_register
    538503472U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    538487088U,	// VLD2q8wb_fixed
    538495280U,	// VLD2q8wb_register
    27314517U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    27568469U,	// VLD3DUPd16_UPD
    27838805U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    28092757U,	// VLD3DUPd32_UPD
    28363093U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    28617045U,	// VLD3DUPd8_UPD
    27314517U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    27568469U,	// VLD3DUPq16_UPD
    27838805U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    28092757U,	// VLD3DUPq32_UPD
    28363093U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    28617045U,	// VLD3DUPq8_UPD
    27576661U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    27584853U,	// VLD3LNd16_UPD
    28100949U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    28109141U,	// VLD3LNd32_UPD
    28625237U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    28633429U,	// VLD3LNd8_UPD
    27576661U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    27584853U,	// VLD3LNq16_UPD
    28100949U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    28109141U,	// VLD3LNq32_UPD
    27314517U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    27568469U,	// VLD3d16_UPD
    27838805U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    28092757U,	// VLD3d32_UPD
    28363093U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    28617045U,	// VLD3d8_UPD
    27314517U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    27568469U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    27838805U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    28092757U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    28363093U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    28617045U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    27396465U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    27593073U,	// VLD4DUPd16_UPD
    27920753U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    28117361U,	// VLD4DUPd32_UPD
    28445041U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    28641649U,	// VLD4DUPd8_UPD
    27396465U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    27593073U,	// VLD4DUPq16_UPD
    27920753U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    28117361U,	// VLD4DUPq32_UPD
    28445041U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    28641649U,	// VLD4DUPq8_UPD
    27584881U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    27601265U,	// VLD4LNd16_UPD
    28109169U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    28125553U,	// VLD4LNd32_UPD
    28633457U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    28649841U,	// VLD4LNd8_UPD
    27584881U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    27601265U,	// VLD4LNq16_UPD
    28109169U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    28125553U,	// VLD4LNq32_UPD
    27396465U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    27593073U,	// VLD4d16_UPD
    27920753U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    28117361U,	// VLD4d32_UPD
    28445041U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    28641649U,	// VLD4d8_UPD
    27396465U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    27593073U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    27920753U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    28117361U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    28445041U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    28641649U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    740322238U,	// VLDMDDB_UPD
    2206442U,	// VLDMDIA
    740322026U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    740322238U,	// VLDMSDB_UPD
    2206442U,	// VLDMSIA
    740322026U,	// VLDMSIA_UPD
    2158916U,	// VLDRD
    586052U,	// VLDRH
    2158916U,	// VLDRS
    2444783940U,	// VLDR_FPCXTNS_off
    2511925572U,	// VLDR_FPCXTNS_post
    2579034436U,	// VLDR_FPCXTNS_pre
    2445308228U,	// VLDR_FPCXTS_off
    2512449860U,	// VLDR_FPCXTS_post
    2579558724U,	// VLDR_FPCXTS_pre
    2445832516U,	// VLDR_FPSCR_NZCVQC_off
    2512974148U,	// VLDR_FPSCR_NZCVQC_post
    2580083012U,	// VLDR_FPSCR_NZCVQC_pre
    2446356804U,	// VLDR_FPSCR_off
    2513498436U,	// VLDR_FPSCR_post
    2580607300U,	// VLDR_FPSCR_pre
    2648240452U,	// VLDR_P0_off
    1507373380U,	// VLDR_P0_post
    2715332932U,	// VLDR_P0_pre
    2447405380U,	// VLDR_VPR_off
    2514547012U,	// VLDR_VPR_post
    2581655876U,	// VLDR_VPR_pre
    2207771U,	// VLLDM
    2207806U,	// VLSTM
    7402560U,	// VMAXfd
    7402560U,	// VMAXfq
    6878272U,	// VMAXhd
    6878272U,	// VMAXhq
    11072576U,	// VMAXsv16i8
    10548288U,	// VMAXsv2i32
    10024000U,	// VMAXsv4i16
    10548288U,	// VMAXsv4i32
    10024000U,	// VMAXsv8i16
    11072576U,	// VMAXsv8i8
    12645440U,	// VMAXuv16i8
    12121152U,	// VMAXuv2i32
    11596864U,	// VMAXuv4i16
    12121152U,	// VMAXuv4i32
    11596864U,	// VMAXuv8i16
    12645440U,	// VMAXuv8i8
    7401582U,	// VMINfd
    7401582U,	// VMINfq
    6877294U,	// VMINhd
    6877294U,	// VMINhq
    11071598U,	// VMINsv16i8
    10547310U,	// VMINsv2i32
    10023022U,	// VMINsv4i16
    10547310U,	// VMINsv4i32
    10023022U,	// VMINsv8i16
    11071598U,	// VMINsv8i8
    12644462U,	// VMINuv16i8
    12120174U,	// VMINuv2i32
    11595886U,	// VMINuv4i16
    12120174U,	// VMINuv4i32
    11595886U,	// VMINuv8i16
    12644462U,	// VMINuv8i8
    1080077072U,	// VMLAD
    6859536U,	// VMLAH
    10538779U,	// VMLALslsv2i32
    10014491U,	// VMLALslsv4i16
    12111643U,	// VMLALsluv2i32
    11587355U,	// VMLALsluv4i16
    10530587U,	// VMLALsv2i64
    10006299U,	// VMLALsv4i32
    11054875U,	// VMLALsv8i16
    12103451U,	// VMLALuv2i64
    11579163U,	// VMLALuv4i32
    12627739U,	// VMLALuv8i16
    7383824U,	// VMLAS
    7383824U,	// VMLAfd
    7383824U,	// VMLAfq
    6859536U,	// VMLAhd
    6859536U,	// VMLAhq
    7392016U,	// VMLAslfd
    7392016U,	// VMLAslfq
    6867728U,	// VMLAslhd
    6867728U,	// VMLAslhq
    13159184U,	// VMLAslv2i32
    13683472U,	// VMLAslv4i16
    13159184U,	// VMLAslv4i32
    13683472U,	// VMLAslv8i16
    14199568U,	// VMLAv16i8
    13150992U,	// VMLAv2i32
    13675280U,	// VMLAv4i16
    13150992U,	// VMLAv4i32
    13675280U,	// VMLAv8i16
    14199568U,	// VMLAv8i8
    1080078806U,	// VMLSD
    6861270U,	// VMLSH
    10538996U,	// VMLSLslsv2i32
    10014708U,	// VMLSLslsv4i16
    12111860U,	// VMLSLsluv2i32
    11587572U,	// VMLSLsluv4i16
    10530804U,	// VMLSLsv2i64
    10006516U,	// VMLSLsv4i32
    11055092U,	// VMLSLsv8i16
    12103668U,	// VMLSLuv2i64
    11579380U,	// VMLSLuv4i32
    12627956U,	// VMLSLuv8i16
    7385558U,	// VMLSS
    7385558U,	// VMLSfd
    7385558U,	// VMLSfq
    6861270U,	// VMLShd
    6861270U,	// VMLShq
    7393750U,	// VMLSslfd
    7393750U,	// VMLSslfq
    6869462U,	// VMLSslhd
    6869462U,	// VMLSslhq
    13160918U,	// VMLSslv2i32
    13685206U,	// VMLSslv4i16
    13160918U,	// VMLSslv4i32
    13685206U,	// VMLSslv8i16
    14201302U,	// VMLSv16i8
    13152726U,	// VMLSv2i32
    13677014U,	// VMLSv4i16
    13152726U,	// VMLSv4i32
    13677014U,	// VMLSv8i16
    14201302U,	// VMLSv8i8
    808019386U,	// VMMLA
    1080062947U,	// VMOVD
    2159587U,	// VMOVDRR
    740902307U,	// VMOVH
    6845411U,	// VMOVHR
    10514453U,	// VMOVLsv2i64
    9990165U,	// VMOVLsv4i32
    11038741U,	// VMOVLsv8i16
    12087317U,	// VMOVLuv2i64
    11563029U,	// VMOVLuv4i32
    12611605U,	// VMOVLuv8i16
    760246479U,	// VMOVNv2i32
    13136079U,	// VMOVNv4i16
    13660367U,	// VMOVNv8i8
    6845411U,	// VMOVRH
    2159587U,	// VMOVRRD
    2143203U,	// VMOVRRS
    2126819U,	// VMOVRS
    7369699U,	// VMOVS
    2126819U,	// VMOVSR
    2143203U,	// VMOVSRR
    14185443U,	// VMOVv16i8
    1901097955U,	// VMOVv1i64
    7369699U,	// VMOVv2f32
    13136867U,	// VMOVv2i32
    1901097955U,	// VMOVv2i64
    7369699U,	// VMOVv4f32
    13661155U,	// VMOVv4i16
    13136867U,	// VMOVv4i32
    13661155U,	// VMOVv8i16
    14185443U,	// VMOVv8i8
    2208248U,	// VMRS
    2208248U,	// VMRS_FPCXTNS
    2208248U,	// VMRS_FPCXTS
    2208248U,	// VMRS_FPEXC
    2208248U,	// VMRS_FPINST
    2208248U,	// VMRS_FPINST2
    2126328U,	// VMRS_FPSCR_NZCVQC
    2208248U,	// VMRS_FPSID
    2208248U,	// VMRS_MVFR0
    2208248U,	// VMRS_MVFR1
    2208248U,	// VMRS_MVFR2
    2126328U,	// VMRS_P0
    2208248U,	// VMRS_VPR
    30519692U,	// VMSR
    28946828U,	// VMSR_FPCXTNS
    29471116U,	// VMSR_FPCXTS
    32092556U,	// VMSR_FPEXC
    32616844U,	// VMSR_FPINST
    33141132U,	// VMSR_FPINST2
    768110988U,	// VMSR_FPSCR_NZCVQC
    33665420U,	// VMSR_FPSID
    769159564U,	// VMSR_P0
    31568268U,	// VMSR_VPR
    1080094736U,	// VMULD
    6877200U,	// VMULH
    740901730U,	// VMULLp64
    23130049U,	// VMULLp8
    10530753U,	// VMULLslsv2i32
    10006465U,	// VMULLslsv4i16
    12103617U,	// VMULLsluv2i32
    11579329U,	// VMULLsluv4i16
    10547137U,	// VMULLsv2i64
    10022849U,	// VMULLsv4i32
    11071425U,	// VMULLsv8i16
    12120001U,	// VMULLuv2i64
    11595713U,	// VMULLuv4i32
    12644289U,	// VMULLuv8i16
    7401488U,	// VMULS
    7401488U,	// VMULfd
    7401488U,	// VMULfq
    6877200U,	// VMULhd
    6877200U,	// VMULhq
    23130128U,	// VMULpd
    23130128U,	// VMULpq
    7385104U,	// VMULslfd
    7385104U,	// VMULslfq
    6860816U,	// VMULslhd
    6860816U,	// VMULslhq
    13152272U,	// VMULslv2i32
    13676560U,	// VMULslv4i16
    13152272U,	// VMULslv4i32
    13676560U,	// VMULslv8i16
    14217232U,	// VMULv16i8
    13168656U,	// VMULv2i32
    13692944U,	// VMULv4i16
    13168656U,	// VMULv4i32
    13692944U,	// VMULv8i16
    14217232U,	// VMULv8i8
    2126019U,	// VMVNd
    2126019U,	// VMVNq
    13136067U,	// VMVNv2i32
    13660355U,	// VMVNv4i16
    13136067U,	// VMVNv4i32
    13660355U,	// VMVNv8i16
    1080061402U,	// VNEGD
    6843866U,	// VNEGH
    7368154U,	// VNEGS
    7368154U,	// VNEGf32q
    7368154U,	// VNEGfd
    6843866U,	// VNEGhd
    6843866U,	// VNEGhq
    9989594U,	// VNEGs16d
    9989594U,	// VNEGs16q
    10513882U,	// VNEGs32d
    10513882U,	// VNEGs32q
    11038170U,	// VNEGs8d
    11038170U,	// VNEGs8q
    1080077066U,	// VNMLAD
    6859530U,	// VNMLAH
    7383818U,	// VNMLAS
    1080078800U,	// VNMLSD
    6861264U,	// VNMLSH
    7385552U,	// VNMLSS
    1080094730U,	// VNMULD
    6877194U,	// VNMULH
    7401482U,	// VNMULS
    2158739U,	// VORNd
    2158739U,	// VORNq
    2158972U,	// VORRd
    13169020U,	// VORRiv2i32
    13693308U,	// VORRiv4i16
    13169020U,	// VORRiv4i32
    13693308U,	// VORRiv8i16
    2158972U,	// VORRq
    11071232U,	// VPADALsv16i8
    10546944U,	// VPADALsv2i32
    10022656U,	// VPADALsv4i16
    10546944U,	// VPADALsv4i32
    10022656U,	// VPADALsv8i16
    11071232U,	// VPADALsv8i8
    12644096U,	// VPADALuv16i8
    12119808U,	// VPADALuv2i32
    11595520U,	// VPADALuv4i16
    12119808U,	// VPADALuv4i32
    11595520U,	// VPADALuv8i16
    12644096U,	// VPADALuv8i8
    11038524U,	// VPADDLsv16i8
    10514236U,	// VPADDLsv2i32
    9989948U,	// VPADDLsv4i16
    10514236U,	// VPADDLsv4i32
    9989948U,	// VPADDLsv8i16
    11038524U,	// VPADDLsv8i8
    12611388U,	// VPADDLuv16i8
    12087100U,	// VPADDLuv2i32
    11562812U,	// VPADDLuv4i16
    12087100U,	// VPADDLuv4i32
    11562812U,	// VPADDLuv8i16
    12611388U,	// VPADDLuv8i8
    7400775U,	// VPADDf
    6876487U,	// VPADDh
    13692231U,	// VPADDi16
    13167943U,	// VPADDi32
    14216519U,	// VPADDi8
    7402554U,	// VPMAXf
    6878266U,	// VPMAXh
    10023994U,	// VPMAXs16
    10548282U,	// VPMAXs32
    11072570U,	// VPMAXs8
    11596858U,	// VPMAXu16
    12121146U,	// VPMAXu32
    12645434U,	// VPMAXu8
    7401576U,	// VPMINf
    6877288U,	// VPMINh
    10023016U,	// VPMINs16
    10547304U,	// VPMINs32
    11071592U,	// VPMINs8
    11595880U,	// VPMINu16
    12120168U,	// VPMINu32
    12644456U,	// VPMINu8
    11039157U,	// VQABSv16i8
    10514869U,	// VQABSv2i32
    9990581U,	// VQABSv4i16
    10514869U,	// VQABSv4i32
    9990581U,	// VQABSv8i16
    11039157U,	// VQABSv8i8
    11070797U,	// VQADDsv16i8
    772336973U,	// VQADDsv1i64
    10546509U,	// VQADDsv2i32
    772336973U,	// VQADDsv2i64
    10022221U,	// VQADDsv4i16
    10546509U,	// VQADDsv4i32
    10022221U,	// VQADDsv8i16
    11070797U,	// VQADDsv8i8
    12643661U,	// VQADDuv16i8
    21556557U,	// VQADDuv1i64
    12119373U,	// VQADDuv2i32
    21556557U,	// VQADDuv2i64
    11595085U,	// VQADDuv4i16
    12119373U,	// VQADDuv4i32
    11595085U,	// VQADDuv8i16
    12643661U,	// VQADDuv8i8
    10538759U,	// VQDMLALslv2i32
    10014471U,	// VQDMLALslv4i16
    10530567U,	// VQDMLALv2i64
    10006279U,	// VQDMLALv4i32
    10538988U,	// VQDMLSLslv2i32
    10014700U,	// VQDMLSLslv4i16
    10530796U,	// VQDMLSLv2i64
    10006508U,	// VQDMLSLv4i32
    10530355U,	// VQDMULHslv2i32
    10006067U,	// VQDMULHslv4i16
    10530355U,	// VQDMULHslv4i32
    10006067U,	// VQDMULHslv8i16
    10546739U,	// VQDMULHv2i32
    10022451U,	// VQDMULHv4i16
    10546739U,	// VQDMULHv4i32
    10022451U,	// VQDMULHv8i16
    10530733U,	// VQDMULLslv2i32
    10006445U,	// VQDMULLslv4i16
    10547117U,	// VQDMULLv2i64
    10022829U,	// VQDMULLv4i32
    772305083U,	// VQMOVNsuv2i32
    10514619U,	// VQMOVNsuv4i16
    9990331U,	// VQMOVNsuv8i8
    772305096U,	// VQMOVNsv2i32
    10514632U,	// VQMOVNsv4i16
    9990344U,	// VQMOVNsv8i8
    21524680U,	// VQMOVNuv2i32
    12087496U,	// VQMOVNuv4i16
    11563208U,	// VQMOVNuv8i8
    11038164U,	// VQNEGv16i8
    10513876U,	// VQNEGv2i32
    9989588U,	// VQNEGv4i16
    10513876U,	// VQNEGv4i32
    9989588U,	// VQNEGv8i16
    11038164U,	// VQNEGv8i8
    10538479U,	// VQRDMLAHslv2i32
    10014191U,	// VQRDMLAHslv4i16
    10538479U,	// VQRDMLAHslv4i32
    10014191U,	// VQRDMLAHslv8i16
    10530287U,	// VQRDMLAHv2i32
    10005999U,	// VQRDMLAHv4i16
    10530287U,	// VQRDMLAHv4i32
    10005999U,	// VQRDMLAHv8i16
    10538608U,	// VQRDMLSHslv2i32
    10014320U,	// VQRDMLSHslv4i16
    10538608U,	// VQRDMLSHslv4i32
    10014320U,	// VQRDMLSHslv8i16
    10530416U,	// VQRDMLSHv2i32
    10006128U,	// VQRDMLSHv4i16
    10530416U,	// VQRDMLSHv4i32
    10006128U,	// VQRDMLSHv8i16
    10530363U,	// VQRDMULHslv2i32
    10006075U,	// VQRDMULHslv4i16
    10530363U,	// VQRDMULHslv4i32
    10006075U,	// VQRDMULHslv8i16
    10546747U,	// VQRDMULHv2i32
    10022459U,	// VQRDMULHv4i16
    10546747U,	// VQRDMULHv4i32
    10022459U,	// VQRDMULHv8i16
    11071340U,	// VQRSHLsv16i8
    772337516U,	// VQRSHLsv1i64
    10547052U,	// VQRSHLsv2i32
    772337516U,	// VQRSHLsv2i64
    10022764U,	// VQRSHLsv4i16
    10547052U,	// VQRSHLsv4i32
    10022764U,	// VQRSHLsv8i16
    11071340U,	// VQRSHLsv8i8
    12644204U,	// VQRSHLuv16i8
    21557100U,	// VQRSHLuv1i64
    12119916U,	// VQRSHLuv2i32
    21557100U,	// VQRSHLuv2i64
    11595628U,	// VQRSHLuv4i16
    12119916U,	// VQRSHLuv4i32
    11595628U,	// VQRSHLuv8i16
    12644204U,	// VQRSHLuv8i8
    772337790U,	// VQRSHRNsv2i32
    10547326U,	// VQRSHRNsv4i16
    10023038U,	// VQRSHRNsv8i8
    21557374U,	// VQRSHRNuv2i32
    12120190U,	// VQRSHRNuv4i16
    11595902U,	// VQRSHRNuv8i8
    772337842U,	// VQRSHRUNv2i32
    10547378U,	// VQRSHRUNv4i16
    10023090U,	// VQRSHRUNv8i8
    11071327U,	// VQSHLsiv16i8
    772337503U,	// VQSHLsiv1i64
    10547039U,	// VQSHLsiv2i32
    772337503U,	// VQSHLsiv2i64
    10022751U,	// VQSHLsiv4i16
    10547039U,	// VQSHLsiv4i32
    10022751U,	// VQSHLsiv8i16
    11071327U,	// VQSHLsiv8i8
    11072350U,	// VQSHLsuv16i8
    772338526U,	// VQSHLsuv1i64
    10548062U,	// VQSHLsuv2i32
    772338526U,	// VQSHLsuv2i64
    10023774U,	// VQSHLsuv4i16
    10548062U,	// VQSHLsuv4i32
    10023774U,	// VQSHLsuv8i16
    11072350U,	// VQSHLsuv8i8
    11071327U,	// VQSHLsv16i8
    772337503U,	// VQSHLsv1i64
    10547039U,	// VQSHLsv2i32
    772337503U,	// VQSHLsv2i64
    10022751U,	// VQSHLsv4i16
    10547039U,	// VQSHLsv4i32
    10022751U,	// VQSHLsv8i16
    11071327U,	// VQSHLsv8i8
    12644191U,	// VQSHLuiv16i8
    21557087U,	// VQSHLuiv1i64
    12119903U,	// VQSHLuiv2i32
    21557087U,	// VQSHLuiv2i64
    11595615U,	// VQSHLuiv4i16
    12119903U,	// VQSHLuiv4i32
    11595615U,	// VQSHLuiv8i16
    12644191U,	// VQSHLuiv8i8
    12644191U,	// VQSHLuv16i8
    21557087U,	// VQSHLuv1i64
    12119903U,	// VQSHLuv2i32
    21557087U,	// VQSHLuv2i64
    11595615U,	// VQSHLuv4i16
    12119903U,	// VQSHLuv4i32
    11595615U,	// VQSHLuv8i16
    12644191U,	// VQSHLuv8i8
    772337783U,	// VQSHRNsv2i32
    10547319U,	// VQSHRNsv4i16
    10023031U,	// VQSHRNsv8i8
    21557367U,	// VQSHRNuv2i32
    12120183U,	// VQSHRNuv4i16
    11595895U,	// VQSHRNuv8i8
    772337834U,	// VQSHRUNv2i32
    10547370U,	// VQSHRUNv4i16
    10023082U,	// VQSHRUNv8i8
    11070635U,	// VQSUBsv16i8
    772336811U,	// VQSUBsv1i64
    10546347U,	// VQSUBsv2i32
    772336811U,	// VQSUBsv2i64
    10022059U,	// VQSUBsv4i16
    10546347U,	// VQSUBsv4i32
    10022059U,	// VQSUBsv8i16
    11070635U,	// VQSUBsv8i8
    12643499U,	// VQSUBuv16i8
    21556395U,	// VQSUBuv1i64
    12119211U,	// VQSUBuv2i32
    21556395U,	// VQSUBuv2i64
    11594923U,	// VQSUBuv4i16
    12119211U,	// VQSUBuv4i32
    11594923U,	// VQSUBuv8i16
    12643499U,	// VQSUBuv8i8
    760279129U,	// VRADDHNv2i32
    13168729U,	// VRADDHNv4i16
    13693017U,	// VRADDHNv8i8
    12086707U,	// VRECPEd
    7368115U,	// VRECPEfd
    7368115U,	// VRECPEfq
    6843827U,	// VRECPEhd
    6843827U,	// VRECPEhq
    12086707U,	// VRECPEq
    7401969U,	// VRECPSfd
    7401969U,	// VRECPSfq
    6877681U,	// VRECPShd
    6877681U,	// VRECPShq
    1599987U,	// VREV16d8
    1599987U,	// VREV16q8
    551188U,	// VREV32d16
    1599764U,	// VREV32d8
    551188U,	// VREV32q16
    1599764U,	// VREV32q8
    551274U,	// VREV64d16
    1075562U,	// VREV64d32
    1599850U,	// VREV64d8
    551274U,	// VREV64q16
    1075562U,	// VREV64q32
    1599850U,	// VREV64q8
    11070778U,	// VRHADDsv16i8
    10546490U,	// VRHADDsv2i32
    10022202U,	// VRHADDsv4i16
    10546490U,	// VRHADDsv4i32
    10022202U,	// VRHADDsv8i16
    11070778U,	// VRHADDsv8i8
    12643642U,	// VRHADDuv16i8
    12119354U,	// VRHADDuv2i32
    11595066U,	// VRHADDuv4i16
    12119354U,	// VRHADDuv4i32
    11595066U,	// VRHADDuv8i16
    12643642U,	// VRHADDuv8i8
    740901610U,	// VRINTAD
    740902132U,	// VRINTAH
    740901259U,	// VRINTANDf
    740902132U,	// VRINTANDh
    740901259U,	// VRINTANQf
    740902132U,	// VRINTANQh
    740901259U,	// VRINTAS
    740901658U,	// VRINTMD
    740902213U,	// VRINTMH
    740901318U,	// VRINTMNDf
    740902213U,	// VRINTMNDh
    740901318U,	// VRINTMNQf
    740902213U,	// VRINTMNQh
    740901318U,	// VRINTMS
    740901670U,	// VRINTND
    740902225U,	// VRINTNH
    740901330U,	// VRINTNNDf
    740902225U,	// VRINTNNDh
    740901330U,	// VRINTNNQf
    740902225U,	// VRINTNNQh
    740901330U,	// VRINTNS
    740901682U,	// VRINTPD
    740902237U,	// VRINTPH
    740901342U,	// VRINTPNDf
    740902237U,	// VRINTPNDh
    740901342U,	// VRINTPNQf
    740902237U,	// VRINTPNQh
    740901342U,	// VRINTPS
    1080062359U,	// VRINTRD
    6844823U,	// VRINTRH
    7369111U,	// VRINTRS
    1080063327U,	// VRINTXD
    6845791U,	// VRINTXH
    740901390U,	// VRINTXNDf
    740902295U,	// VRINTXNDh
    740901390U,	// VRINTXNQf
    740902295U,	// VRINTXNQh
    7370079U,	// VRINTXS
    1080063377U,	// VRINTZD
    6845841U,	// VRINTZH
    740901402U,	// VRINTZNDf
    740902318U,	// VRINTZNDh
    740901402U,	// VRINTZNQf
    740902318U,	// VRINTZNQh
    7370129U,	// VRINTZS
    11071347U,	// VRSHLsv16i8
    772337523U,	// VRSHLsv1i64
    10547059U,	// VRSHLsv2i32
    772337523U,	// VRSHLsv2i64
    10022771U,	// VRSHLsv4i16
    10547059U,	// VRSHLsv4i32
    10022771U,	// VRSHLsv8i16
    11071347U,	// VRSHLsv8i8
    12644211U,	// VRSHLuv16i8
    21557107U,	// VRSHLuv1i64
    12119923U,	// VRSHLuv2i32
    21557107U,	// VRSHLuv2i64
    11595635U,	// VRSHLuv4i16
    12119923U,	// VRSHLuv4i32
    11595635U,	// VRSHLuv8i16
    12644211U,	// VRSHLuv8i8
    760279174U,	// VRSHRNv2i32
    13168774U,	// VRSHRNv4i16
    13693062U,	// VRSHRNv8i8
    11071836U,	// VRSHRsv16i8
    772338012U,	// VRSHRsv1i64
    10547548U,	// VRSHRsv2i32
    772338012U,	// VRSHRsv2i64
    10023260U,	// VRSHRsv4i16
    10547548U,	// VRSHRsv4i32
    10023260U,	// VRSHRsv8i16
    11071836U,	// VRSHRsv8i8
    12644700U,	// VRSHRuv16i8
    21557596U,	// VRSHRuv1i64
    12120412U,	// VRSHRuv2i32
    21557596U,	// VRSHRuv2i64
    11596124U,	// VRSHRuv4i16
    12120412U,	// VRSHRuv4i32
    11596124U,	// VRSHRuv8i16
    12644700U,	// VRSHRuv8i8
    12086720U,	// VRSQRTEd
    7368128U,	// VRSQRTEfd
    7368128U,	// VRSQRTEfq
    6843840U,	// VRSQRTEhd
    6843840U,	// VRSQRTEhq
    12086720U,	// VRSQRTEq
    7401991U,	// VRSQRTSfd
    7401991U,	// VRSQRTSfq
    6877703U,	// VRSQRTShd
    6877703U,	// VRSQRTShq
    11053878U,	// VRSRAsv16i8
    705211190U,	// VRSRAsv1i64
    10529590U,	// VRSRAsv2i32
    705211190U,	// VRSRAsv2i64
    10005302U,	// VRSRAsv4i16
    10529590U,	// VRSRAsv4i32
    10005302U,	// VRSRAsv8i16
    11053878U,	// VRSRAsv8i8
    12626742U,	// VRSRAuv16i8
    21539638U,	// VRSRAuv1i64
    12102454U,	// VRSRAuv2i32
    21539638U,	// VRSRAuv2i64
    11578166U,	// VRSRAuv4i16
    12102454U,	// VRSRAuv4i32
    11578166U,	// VRSRAuv8i16
    12626742U,	// VRSRAuv8i8
    760279114U,	// VRSUBHNv2i32
    13168714U,	// VRSUBHNv4i16
    13693002U,	// VRSUBHNv8i8
    2753679407U,	// VSCCLRMD
    2753679407U,	// VSCCLRMS
    808019628U,	// VSDOTD
    808019628U,	// VSDOTDI
    808019628U,	// VSDOTQ
    808019628U,	// VSDOTQI
    740901694U,	// VSELEQD
    740902249U,	// VSELEQH
    740901354U,	// VSELEQS
    740901622U,	// VSELGED
    740902155U,	// VSELGEH
    740901282U,	// VSELGES
    740901718U,	// VSELGTD
    740902283U,	// VSELGTH
    740901378U,	// VSELGTS
    740901706U,	// VSELVSD
    740902271U,	// VSELVSH
    740901366U,	// VSELVSS
    570339U,	// VSETLNi16
    1094627U,	// VSETLNi32
    1618915U,	// VSETLNi8
    13692834U,	// VSHLLi16
    13168546U,	// VSHLLi32
    14217122U,	// VSHLLi8
    10547106U,	// VSHLLsv2i64
    10022818U,	// VSHLLsv4i32
    11071394U,	// VSHLLsv8i16
    12119970U,	// VSHLLuv2i64
    11595682U,	// VSHLLuv4i32
    12644258U,	// VSHLLuv8i16
    14217081U,	// VSHLiv16i8
    760278905U,	// VSHLiv1i64
    13168505U,	// VSHLiv2i32
    760278905U,	// VSHLiv2i64
    13692793U,	// VSHLiv4i16
    13168505U,	// VSHLiv4i32
    13692793U,	// VSHLiv8i16
    14217081U,	// VSHLiv8i8
    11071353U,	// VSHLsv16i8
    772337529U,	// VSHLsv1i64
    10547065U,	// VSHLsv2i32
    772337529U,	// VSHLsv2i64
    10022777U,	// VSHLsv4i16
    10547065U,	// VSHLsv4i32
    10022777U,	// VSHLsv8i16
    11071353U,	// VSHLsv8i8
    12644217U,	// VSHLuv16i8
    21557113U,	// VSHLuv1i64
    12119929U,	// VSHLuv2i32
    21557113U,	// VSHLuv2i64
    11595641U,	// VSHLuv4i16
    12119929U,	// VSHLuv4i32
    11595641U,	// VSHLuv8i16
    12644217U,	// VSHLuv8i8
    760279181U,	// VSHRNv2i32
    13168781U,	// VSHRNv4i16
    13693069U,	// VSHRNv8i8
    11071842U,	// VSHRsv16i8
    772338018U,	// VSHRsv1i64
    10547554U,	// VSHRsv2i32
    772338018U,	// VSHRsv2i64
    10023266U,	// VSHRsv4i16
    10547554U,	// VSHRsv4i32
    10023266U,	// VSHRsv8i16
    11071842U,	// VSHRsv8i8
    12644706U,	// VSHRuv16i8
    21557602U,	// VSHRuv1i64
    12120418U,	// VSHRuv2i32
    21557602U,	// VSHRuv2i64
    11596130U,	// VSHRuv4i16
    12120418U,	// VSHRuv4i32
    11596130U,	// VSHRuv8i16
    12644706U,	// VSHRuv8i8
    34665281U,	// VSHTOD
    1089532737U,	// VSHTOH
    35189569U,	// VSHTOS
    1042314049U,	// VSITOD
    1042838337U,	// VSITOH
    1023963969U,	// VSITOS
    1617626U,	// VSLIv16i8
    14724826U,	// VSLIv1i64
    1093338U,	// VSLIv2i32
    14724826U,	// VSLIv2i64
    569050U,	// VSLIv4i16
    1093338U,	// VSLIv4i32
    569050U,	// VSLIv8i16
    1617626U,	// VSLIv8i8
    1109455681U,	// VSLTOD
    1109979969U,	// VSLTOH
    1091105601U,	// VSLTOS
    808019606U,	// VSMMLA
    1080062726U,	// VSQRTD
    6845190U,	// VSQRTH
    7369478U,	// VSQRTS
    11053884U,	// VSRAsv16i8
    705211196U,	// VSRAsv1i64
    10529596U,	// VSRAsv2i32
    705211196U,	// VSRAsv2i64
    10005308U,	// VSRAsv4i16
    10529596U,	// VSRAsv4i32
    10005308U,	// VSRAsv8i16
    11053884U,	// VSRAsv8i8
    12626748U,	// VSRAuv16i8
    21539644U,	// VSRAuv1i64
    12102460U,	// VSRAuv2i32
    21539644U,	// VSRAuv2i64
    11578172U,	// VSRAuv4i16
    12102460U,	// VSRAuv4i32
    11578172U,	// VSRAuv8i16
    12626748U,	// VSRAuv8i8
    1617631U,	// VSRIv16i8
    14724831U,	// VSRIv1i64
    1093343U,	// VSRIv2i32
    14724831U,	// VSRIv2i64
    569055U,	// VSRIv4i16
    1093343U,	// VSRIv4i32
    569055U,	// VSRIv8i16
    1617631U,	// VSRIv8i8
    698394890U,	// VST1LNd16
    2845968650U,	// VST1LNd16_UPD
    698919178U,	// VST1LNd32
    2846492938U,	// VST1LNd32_UPD
    699443466U,	// VST1LNd8
    2847017226U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    2886265098U,	// VST1d16
    2953373962U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    3020466442U,	// VST1d16Qwb_fixed
    3087583498U,	// VST1d16Qwb_register
    3154700554U,	// VST1d16T
    0U,	// VST1d16TPseudo
    3221793034U,	// VST1d16Twb_fixed
    3288910090U,	// VST1d16Twb_register
    3356010762U,	// VST1d16wb_fixed
    3423127818U,	// VST1d16wb_register
    2886789386U,	// VST1d32
    2953898250U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    3020990730U,	// VST1d32Qwb_fixed
    3088107786U,	// VST1d32Qwb_register
    3155224842U,	// VST1d32T
    0U,	// VST1d32TPseudo
    3222317322U,	// VST1d32Twb_fixed
    3289434378U,	// VST1d32Twb_register
    3356535050U,	// VST1d32wb_fixed
    3423652106U,	// VST1d32wb_register
    2900420874U,	// VST1d64
    2967529738U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    3034622218U,	// VST1d64Qwb_fixed
    3101739274U,	// VST1d64Qwb_register
    3168856330U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    3235948810U,	// VST1d64Twb_fixed
    3303065866U,	// VST1d64Twb_register
    3370166538U,	// VST1d64wb_fixed
    3437283594U,	// VST1d64wb_register
    2887313674U,	// VST1d8
    2954422538U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    3021515018U,	// VST1d8Qwb_fixed
    3088632074U,	// VST1d8Qwb_register
    3155749130U,	// VST1d8T
    0U,	// VST1d8TPseudo
    3222841610U,	// VST1d8Twb_fixed
    3289958666U,	// VST1d8Twb_register
    3357059338U,	// VST1d8wb_fixed
    3424176394U,	// VST1d8wb_register
    3490244874U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    3557337354U,	// VST1q16wb_fixed
    3624454410U,	// VST1q16wb_register
    3490769162U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    3557861642U,	// VST1q32wb_fixed
    3624978698U,	// VST1q32wb_register
    3504400650U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    3571493130U,	// VST1q64wb_fixed
    3638610186U,	// VST1q64wb_register
    3491293450U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    3558385930U,	// VST1q8wb_fixed
    3625502986U,	// VST1q8wb_register
    698403147U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    2846140747U,	// VST2LNd16_UPD
    698927435U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    2846665035U,	// VST2LNd32_UPD
    699451723U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    2847189323U,	// VST2LNd8_UPD
    698403147U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    2846140747U,	// VST2LNq16_UPD
    698927435U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    2846665035U,	// VST2LNq32_UPD
    3691571531U,	// VST2b16
    3758664011U,	// VST2b16wb_fixed
    3825781067U,	// VST2b16wb_register
    3692095819U,	// VST2b32
    3759188299U,	// VST2b32wb_fixed
    3826305355U,	// VST2b32wb_register
    3692620107U,	// VST2b8
    3759712587U,	// VST2b8wb_fixed
    3826829643U,	// VST2b8wb_register
    3490244939U,	// VST2d16
    3557337419U,	// VST2d16wb_fixed
    3624454475U,	// VST2d16wb_register
    3490769227U,	// VST2d32
    3557861707U,	// VST2d32wb_fixed
    3624978763U,	// VST2d32wb_register
    3491293515U,	// VST2d8
    3558385995U,	// VST2d8wb_fixed
    3625503051U,	// VST2d8wb_register
    2953374027U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    3020466507U,	// VST2q16wb_fixed
    3087583563U,	// VST2q16wb_register
    2953898315U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    3020990795U,	// VST2q32wb_fixed
    3088107851U,	// VST2q32wb_register
    2954422603U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    3021515083U,	// VST2q8wb_fixed
    3088632139U,	// VST2q8wb_register
    698485088U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    2846165344U,	// VST3LNd16_UPD
    699009376U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    2846689632U,	// VST3LNd32_UPD
    699533664U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    2847213920U,	// VST3LNd8_UPD
    698485088U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    2846165344U,	// VST3LNq16_UPD
    699009376U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    2846689632U,	// VST3LNq32_UPD
    698403168U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    2846140768U,	// VST3d16_UPD
    698927456U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    2846665056U,	// VST3d32_UPD
    699451744U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    2847189344U,	// VST3d8_UPD
    698403168U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    2846140768U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    698927456U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    2846665056U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    699451744U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    2847189344U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    698657142U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    2846148982U,	// VST4LNd16_UPD
    699181430U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    2846673270U,	// VST4LNd32_UPD
    699705718U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    2847197558U,	// VST4LNd8_UPD
    698657142U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    2846148982U,	// VST4LNq16_UPD
    699181430U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    2846673270U,	// VST4LNq32_UPD
    698485110U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    2846165366U,	// VST4d16_UPD
    699009398U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    2846689654U,	// VST4d32_UPD
    699533686U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    2847213942U,	// VST4d8_UPD
    698485110U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    2846165366U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    699009398U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    2846689654U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    699533686U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    2847213942U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    740322245U,	// VSTMDDB_UPD
    2206449U,	// VSTMDIA
    740322033U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    740322245U,	// VSTMSDB_UPD
    2206449U,	// VSTMSIA
    740322033U,	// VSTMSIA_UPD
    2159006U,	// VSTRD
    586142U,	// VSTRH
    2159006U,	// VSTRS
    2444784030U,	// VSTR_FPCXTNS_off
    2511925662U,	// VSTR_FPCXTNS_post
    2579034526U,	// VSTR_FPCXTNS_pre
    2445308318U,	// VSTR_FPCXTS_off
    2512449950U,	// VSTR_FPCXTS_post
    2579558814U,	// VSTR_FPCXTS_pre
    2445832606U,	// VSTR_FPSCR_NZCVQC_off
    2512974238U,	// VSTR_FPSCR_NZCVQC_post
    2580083102U,	// VSTR_FPSCR_NZCVQC_pre
    2446356894U,	// VSTR_FPSCR_off
    2513498526U,	// VSTR_FPSCR_post
    2580607390U,	// VSTR_FPSCR_pre
    2648240542U,	// VSTR_P0_off
    1507373470U,	// VSTR_P0_post
    2715333022U,	// VSTR_P0_pre
    2447405470U,	// VSTR_VPR_off
    2514547102U,	// VSTR_VPR_post
    2581655966U,	// VSTR_VPR_pre
    1080093873U,	// VSUBD
    6876337U,	// VSUBH
    760279122U,	// VSUBHNv2i32
    13168722U,	// VSUBHNv4i16
    13693010U,	// VSUBHNv8i8
    10546982U,	// VSUBLsv2i64
    10022694U,	// VSUBLsv4i32
    11071270U,	// VSUBLsv8i16
    12119846U,	// VSUBLuv2i64
    11595558U,	// VSUBLuv4i32
    12644134U,	// VSUBLuv8i16
    7400625U,	// VSUBS
    10548206U,	// VSUBWsv2i64
    10023918U,	// VSUBWsv4i32
    11072494U,	// VSUBWsv8i16
    12121070U,	// VSUBWuv2i64
    11596782U,	// VSUBWuv4i32
    12645358U,	// VSUBWuv8i16
    7400625U,	// VSUBfd
    7400625U,	// VSUBfq
    6876337U,	// VSUBhd
    6876337U,	// VSUBhq
    14216369U,	// VSUBv16i8
    760278193U,	// VSUBv1i64
    13167793U,	// VSUBv2i32
    760278193U,	// VSUBv2i64
    13692081U,	// VSUBv4i16
    13167793U,	// VSUBv4i32
    13692081U,	// VSUBv8i16
    14216369U,	// VSUBv8i8
    808019649U,	// VSUDOTDI
    808019649U,	// VSUDOTQI
    2142498U,	// VSWPd
    2142498U,	// VSWPq
    1634081U,	// VTBL1
    1634081U,	// VTBL2
    1634081U,	// VTBL3
    0U,	// VTBL3Pseudo
    1634081U,	// VTBL4
    0U,	// VTBL4Pseudo
    1619099U,	// VTBX1
    1619099U,	// VTBX2
    1619099U,	// VTBX3
    0U,	// VTBX3Pseudo
    1619099U,	// VTBX4
    0U,	// VTBX4Pseudo
    36762433U,	// VTOSHD
    1092154177U,	// VTOSHH
    37286721U,	// VTOSHS
    1033400739U,	// VTOSIRD
    1044410787U,	// VTOSIRH
    1025536419U,	// VTOSIRS
    1033401153U,	// VTOSIZD
    1044411201U,	// VTOSIZH
    1025536833U,	// VTOSIZS
    1100542785U,	// VTOSLD
    1111552833U,	// VTOSLH
    1092678465U,	// VTOSLS
    38335297U,	// VTOUHD
    1093202753U,	// VTOUHH
    38859585U,	// VTOUHS
    1045983651U,	// VTOUIRD
    1046507939U,	// VTOUIRH
    1026584995U,	// VTOUIRS
    1045984065U,	// VTOUIZD
    1046508353U,	// VTOUIZH
    1026585409U,	// VTOUIZS
    1113125697U,	// VTOULD
    1113649985U,	// VTOULH
    1093727041U,	// VTOULS
    569496U,	// VTRNd16
    1093784U,	// VTRNd32
    1618072U,	// VTRNd8
    569496U,	// VTRNq16
    1093784U,	// VTRNq32
    1618072U,	// VTRNq8
    1635094U,	// VTSTv16i8
    1110806U,	// VTSTv2i32
    586518U,	// VTSTv4i16
    1110806U,	// VTSTv4i32
    586518U,	// VTSTv8i16
    1635094U,	// VTSTv8i8
    808019660U,	// VUDOTD
    808019660U,	// VUDOTDI
    808019660U,	// VUDOTQ
    808019660U,	// VUDOTQI
    40432449U,	// VUHTOD
    1090057025U,	// VUHTOH
    40956737U,	// VUHTOS
    1048081217U,	// VUITOD
    1048605505U,	// VUITOH
    1024488257U,	// VUITOS
    1115222849U,	// VULTOD
    1115747137U,	// VULTOH
    1091629889U,	// VULTOS
    808019638U,	// VUMMLA
    808019617U,	// VUSDOTD
    808019617U,	// VUSDOTDI
    808019617U,	// VUSDOTQ
    808019617U,	// VUSDOTQI
    808019594U,	// VUSMMLA
    569639U,	// VUZPd16
    1618215U,	// VUZPd8
    569639U,	// VUZPq16
    1093927U,	// VUZPq32
    1618215U,	// VUZPq8
    569566U,	// VZIPd16
    1618142U,	// VZIPd8
    569566U,	// VZIPq16
    1093854U,	// VZIPq32
    1618142U,	// VZIPq8
    2206400U,	// sysLDMDA
    740321984U,	// sysLDMDA_UPD
    2206655U,	// sysLDMDB
    740322239U,	// sysLDMDB_UPD
    2207773U,	// sysLDMIA
    740323357U,	// sysLDMIA_UPD
    2206674U,	// sysLDMIB
    740322258U,	// sysLDMIB_UPD
    2206406U,	// sysSTMDA
    740321990U,	// sysSTMDA_UPD
    2206662U,	// sysSTMDB
    740322246U,	// sysSTMDB_UPD
    2207808U,	// sysSTMIA
    740323392U,	// sysSTMIA_UPD
    2206680U,	// sysSTMIB
    740322264U,	// sysSTMIB_UPD
    2108646U,	// t2ADCri
    42478822U,	// t2ADCrr
    42536166U,	// t2ADCrs
    42478890U,	// t2ADDri
    2159605U,	// t2ADDri12
    42478890U,	// t2ADDrr
    42536234U,	// t2ADDrs
    42478890U,	// t2ADDspImm
    2159605U,	// t2ADDspImm12
    42496320U,	// t2ADR
    2108779U,	// t2ANDri
    42478955U,	// t2ANDrr
    42536299U,	// t2ANDrs
    42480001U,	// t2ASRri
    42480001U,	// t2ASRrr
    914992016U,	// t2B
    2157806U,	// t2BFC
    2141906U,	// t2BFI
    874540879U,	// t2BFLi
    874542394U,	// t2BFLr
    874540488U,	// t2BFi
    3895035791U,	// t2BFic
    874542315U,	// t2BFr
    2108659U,	// t2BICri
    42478835U,	// t2BICrr
    42536179U,	// t2BICrs
    2207460U,	// t2BXJ
    914992016U,	// t2Bcc
    1143083226U,	// t2CDP
    1143081269U,	// t2CDP2
    3790046U,	// t2CLREX
    2753679410U,	// t2CLRM
    2127245U,	// t2CLZ
    42496115U,	// t2CMNri
    42496115U,	// t2CMNzrr
    42528883U,	// t2CMNzrs
    42496228U,	// t2CMPri
    42496228U,	// t2CMPrr
    42528996U,	// t2CMPrs
    3753903U,	// t2CPS1p
    1317720564U,	// t2CPS2p
    1277350388U,	// t2CPS3p
    740902649U,	// t2CRC32B
    740902657U,	// t2CRC32CB
    740902767U,	// t2CRC32CH
    740902882U,	// t2CRC32CW
    740902759U,	// t2CRC32H
    740902874U,	// t2CRC32W
    740902801U,	// t2CSEL
    740902700U,	// t2CSINC
    740902853U,	// t2CSINV
    740902752U,	// t2CSNEG
    2207184U,	// t2DBG
    3787012U,	// t2DCPS1
    3787077U,	// t2DCPS2
    3787098U,	// t2DCPS3
    740902821U,	// t2DLS
    3961629697U,	// t2DMB
    3961629793U,	// t2DSB
    2109807U,	// t2EORri
    42479983U,	// t2EORrr
    42537327U,	// t2EORrs
    42578599U,	// t2HINT
    3753932U,	// t2HVC
    4028738661U,	// t2ISB
    69227127U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    2124476U,	// t2LDA
    2124685U,	// t2LDAB
    2127052U,	// t2LDAEX
    2124996U,	// t2LDAEXB
    2157959U,	// t2LDAEXD
    2125482U,	// t2LDAEXH
    2125282U,	// t2LDAH
    1142992616U,	// t2LDC2L_OFFSET
    1142992616U,	// t2LDC2L_OPTION
    1142992616U,	// t2LDC2L_POST
    1142992616U,	// t2LDC2L_PRE
    1142991131U,	// t2LDC2_OFFSET
    1142991131U,	// t2LDC2_OPTION
    1142991131U,	// t2LDC2_POST
    1142991131U,	// t2LDC2_PRE
    1142992684U,	// t2LDCL_OFFSET
    1142992684U,	// t2LDCL_OPTION
    1142992684U,	// t2LDCL_POST
    1142992684U,	// t2LDCL_PRE
    1142992106U,	// t2LDC_OFFSET
    1142992106U,	// t2LDC_OPTION
    1142992106U,	// t2LDC_POST
    1142992106U,	// t2LDC_PRE
    2206655U,	// t2LDMDB
    740322239U,	// t2LDMDB_UPD
    42577949U,	// t2LDMIA
    780693533U,	// t2LDMIA_UPD
    2159167U,	// t2LDRBT
    2141270U,	// t2LDRB_POST
    2141270U,	// t2LDRB_PRE
    42527830U,	// t2LDRBi12
    2157654U,	// t2LDRBi8
    42495062U,	// t2LDRBpci
    42511446U,	// t2LDRBs
    2149744U,	// t2LDRD_POST
    2149744U,	// t2LDRD_PRE
    2141552U,	// t2LDRDi8
    2159832U,	// t2LDREX
    2125010U,	// t2LDREXB
    2157973U,	// t2LDREXD
    2125496U,	// t2LDREXH
    2159202U,	// t2LDRHT
    2141778U,	// t2LDRH_POST
    2141778U,	// t2LDRH_PRE
    42528338U,	// t2LDRHi12
    2158162U,	// t2LDRHi8
    42495570U,	// t2LDRHpci
    42511954U,	// t2LDRHs
    2159179U,	// t2LDRSBT
    2141289U,	// t2LDRSB_POST
    2141289U,	// t2LDRSB_PRE
    42527849U,	// t2LDRSBi12
    2157673U,	// t2LDRSBi8
    42495081U,	// t2LDRSBpci
    42511465U,	// t2LDRSBs
    2159214U,	// t2LDRSHT
    2141817U,	// t2LDRSH_POST
    2141817U,	// t2LDRSH_PRE
    42528377U,	// t2LDRSHi12
    2158201U,	// t2LDRSHi8
    42495609U,	// t2LDRSHpci
    42511993U,	// t2LDRSHs
    2159361U,	// t2LDRT
    2142533U,	// t2LDR_POST
    2142533U,	// t2LDR_PRE
    42529093U,	// t2LDRi12
    2158917U,	// t2LDRi8
    42496325U,	// t2LDRpci
    42512709U,	// t2LDRs
    3770199U,	// t2LE
    3762007U,	// t2LEUpdate
    42479600U,	// t2LSLri
    42479600U,	// t2LSLrr
    42480008U,	// t2LSRri
    42480008U,	// t2LSRrr
    1143083324U,	// t2MCR
    1143081274U,	// t2MCR2
    1143001463U,	// t2MCRR
    1142999359U,	// t2MCRR2
    2140928U,	// t2MLA
    2142668U,	// t2MLS
    2159430U,	// t2MOVTi16
    42505188U,	// t2MOVi
    2126859U,	// t2MOVi16
    42505188U,	// t2MOVr
    42496509U,	// t2MOVsra_flag
    42496514U,	// t2MOVsrl_flag
    941755649U,	// t2MRC
    941754656U,	// t2MRC2
    1612762373U,	// t2MRRC
    1612761381U,	// t2MRRC2
    2208249U,	// t2MRS_AR
    2126329U,	// t2MRS_M
    2126329U,	// t2MRSbanked
    2208249U,	// t2MRSsys_AR
    1679847821U,	// t2MSR_AR
    1679847821U,	// t2MSR_M
    1746956685U,	// t2MSRbanked
    2158592U,	// t2MUL
    2134212U,	// t2MVNi
    42504388U,	// t2MVNr
    42479812U,	// t2MVNs
    2109588U,	// t2ORNri
    2109588U,	// t2ORNrr
    2166932U,	// t2ORNrs
    2109821U,	// t2ORRri
    42479997U,	// t2ORRrr
    42537341U,	// t2ORRrs
    2142762U,	// t2PKHBT
    2141306U,	// t2PKHTB
    4095767546U,	// t2PLDWi12
    4162876410U,	// t2PLDWi8
    4230018042U,	// t2PLDWs
    4095765855U,	// t2PLDi12
    4162874719U,	// t2PLDi8
    2207071U,	// t2PLDpci
    4230016351U,	// t2PLDs
    4095766230U,	// t2PLIi12
    4162875094U,	// t2PLIi8
    2207446U,	// t2PLIpci
    4230016726U,	// t2PLIs
    2157902U,	// t2QADD
    2157008U,	// t2QADD16
    2157111U,	// t2QADD8
    2159952U,	// t2QASX
    2157876U,	// t2QDADD
    2157727U,	// t2QDSUB
    2159698U,	// t2QSAX
    2157740U,	// t2QSUB
    2156970U,	// t2QSUB16
    2157072U,	// t2QSUB8
    2126453U,	// t2RBIT
    42496947U,	// t2REV
    42494452U,	// t2REV16
    42495620U,	// t2REVSH
    2206648U,	// t2RFEDB
    2206648U,	// t2RFEDBW
    2206436U,	// t2RFEIA
    2206436U,	// t2RFEIAW
    42479987U,	// t2RORri
    42479987U,	// t2RORrr
    2135359U,	// t2RRX
    42478699U,	// t2RSBri
    2108523U,	// t2RSBrr
    2165867U,	// t2RSBrs
    2157015U,	// t2SADD16
    2157117U,	// t2SADD8
    2159957U,	// t2SASX
    3170U,	// t2SB
    2108641U,	// t2SBCri
    42478817U,	// t2SBCrr
    42536161U,	// t2SBCrs
    2143466U,	// t2SBFX
    2159543U,	// t2SDIV
    2158411U,	// t2SEL
    3753879U,	// t2SETPAN
    3788255U,	// t2SG
    2156991U,	// t2SHADD16
    2157096U,	// t2SHADD8
    2159939U,	// t2SHASX
    2159685U,	// t2SHSAX
    2156953U,	// t2SHSUB16
    2157057U,	// t2SHSUB8
    2206973U,	// t2SMC
    2141086U,	// t2SMLABB
    2142755U,	// t2SMLABT
    2141462U,	// t2SMLAD
    2143392U,	// t2SMLADX
    2232079U,	// t2SMLAL
    2231205U,	// t2SMLALBB
    2232880U,	// t2SMLALBT
    2231640U,	// t2SMLALD
    2233518U,	// t2SMLALDX
    2231424U,	// t2SMLALTB
    2233122U,	// t2SMLALTT
    2141299U,	// t2SMLATB
    2143003U,	// t2SMLATT
    2141366U,	// t2SMLAWB
    2143051U,	// t2SMLAWT
    2141563U,	// t2SMLSD
    2143422U,	// t2SMLSDX
    2231651U,	// t2SMLSLD
    2233526U,	// t2SMLSLDX
    2140932U,	// t2SMMLA
    2142517U,	// t2SMMLAR
    2142666U,	// t2SMMLS
    2142597U,	// t2SMMLSR
    2158596U,	// t2SMMUL
    2158951U,	// t2SMMULR
    2157852U,	// t2SMUAD
    2159783U,	// t2SMUADX
    2157485U,	// t2SMULBB
    2159160U,	// t2SMULBT
    2142133U,	// t2SMULL
    2157704U,	// t2SMULTB
    2159402U,	// t2SMULTT
    2157757U,	// t2SMULWB
    2159442U,	// t2SMULWT
    2157953U,	// t2SMUSD
    2159813U,	// t2SMUSDX
    43101132U,	// t2SRSDB
    43625420U,	// t2SRSDB_UPD
    43100920U,	// t2SRSIA
    43625208U,	// t2SRSIA_UPD
    2142740U,	// t2SSAT
    2157029U,	// t2SSAT16
    2159703U,	// t2SSAX
    2156977U,	// t2SSUB16
    2157078U,	// t2SSUB8
    1142992622U,	// t2STC2L_OFFSET
    1142992622U,	// t2STC2L_OPTION
    1142992622U,	// t2STC2L_POST
    1142992622U,	// t2STC2L_PRE
    1142991147U,	// t2STC2_OFFSET
    1142991147U,	// t2STC2_OPTION
    1142991147U,	// t2STC2_POST
    1142991147U,	// t2STC2_PRE
    1142992689U,	// t2STCL_OFFSET
    1142992689U,	// t2STCL_OPTION
    1142992689U,	// t2STCL_POST
    1142992689U,	// t2STCL_PRE
    1142992142U,	// t2STC_OFFSET
    1142992142U,	// t2STC_OPTION
    1142992142U,	// t2STC_POST
    1142992142U,	// t2STC_PRE
    2125818U,	// t2STL
    2124789U,	// t2STLB
    2159826U,	// t2STLEX
    2157771U,	// t2STLEXB
    2141582U,	// t2STLEXD
    2158257U,	// t2STLEXH
    2125358U,	// t2STLH
    2206662U,	// t2STMDB
    740322246U,	// t2STMDB_UPD
    42577984U,	// t2STMIA
    780693568U,	// t2STMIA_UPD
    2159173U,	// t2STRBT
    740338780U,	// t2STRB_POST
    740338780U,	// t2STRB_PRE
    42527836U,	// t2STRBi12
    2157660U,	// t2STRBi8
    42511452U,	// t2STRBs
    740347254U,	// t2STRD_POST
    740347254U,	// t2STRD_PRE
    2141558U,	// t2STRDi8
    2143460U,	// t2STREX
    2157785U,	// t2STREXB
    2141596U,	// t2STREXD
    2158271U,	// t2STREXH
    2159208U,	// t2STRHT
    740339288U,	// t2STRH_POST
    740339288U,	// t2STRH_PRE
    42528344U,	// t2STRHi12
    2158168U,	// t2STRHi8
    42511960U,	// t2STRHs
    2159372U,	// t2STRT
    740340127U,	// t2STR_POST
    740340127U,	// t2STR_PRE
    42529183U,	// t2STRi12
    2159007U,	// t2STRi8
    42512799U,	// t2STRs
    44151232U,	// t2SUBS_PC_LR
    42478753U,	// t2SUBri
    2159599U,	// t2SUBri12
    42478753U,	// t2SUBrr
    42536097U,	// t2SUBrs
    42478753U,	// t2SUBspImm
    2159599U,	// t2SUBspImm12
    2141074U,	// t2SXTAB
    2140539U,	// t2SXTAB16
    2141688U,	// t2SXTAH
    42527893U,	// t2SXTB
    2156939U,	// t2SXTB16
    42528394U,	// t2SXTH
    69233588U,	// t2TBB
    136343044U,	// t2TBH
    42496305U,	// t2TEQri
    42496305U,	// t2TEQrr
    42529073U,	// t2TEQrs
    203533423U,	// t2TSB
    42496791U,	// t2TSTri
    42496791U,	// t2TSTrr
    42529559U,	// t2TSTrs
    2126623U,	// t2TT
    2124616U,	// t2TTA
    2126366U,	// t2TTAT
    2126641U,	// t2TTT
    2157022U,	// t2UADD16
    2157123U,	// t2UADD8
    2159962U,	// t2UASX
    2143471U,	// t2UBFX
    3753939U,	// t2UDF
    2159548U,	// t2UDIV
    2156999U,	// t2UHADD16
    2157103U,	// t2UHADD8
    2159945U,	// t2UHASX
    2159691U,	// t2UHSAX
    2156961U,	// t2UHSUB16
    2157064U,	// t2UHSUB8
    2232052U,	// t2UMAAL
    2232085U,	// t2UMLAL
    2142139U,	// t2UMULL
    2157007U,	// t2UQADD16
    2157110U,	// t2UQADD8
    2159951U,	// t2UQASX
    2159697U,	// t2UQSAX
    2156969U,	// t2UQSUB16
    2157071U,	// t2UQSUB8
    2157090U,	// t2USAD8
    2140666U,	// t2USADA8
    2142745U,	// t2USAT
    2157036U,	// t2USAT16
    2159708U,	// t2USAX
    2156984U,	// t2USUB16
    2157084U,	// t2USUB8
    2141080U,	// t2UXTAB
    2140547U,	// t2UXTAB16
    2141694U,	// t2UXTAH
    42527898U,	// t2UXTB
    2156946U,	// t2UXTB16
    42528399U,	// t2UXTH
    740902826U,	// t2WLS
    850218214U,	// tADC
    2157866U,	// tADDhirr
    716000554U,	// tADDi3
    850218282U,	// tADDi8
    2157866U,	// tADDrSP
    2157866U,	// tADDrSPi
    716000554U,	// tADDrr
    2157866U,	// tADDspi
    2157866U,	// tADDspr
    2126144U,	// tADR
    850218347U,	// tAND
    716001665U,	// tASRri
    850219393U,	// tASRrr
    874621840U,	// tB
    850218227U,	// tBIC
    3753919U,	// tBKPT
    270651171U,	// tBL
    673305067U,	// tBLXNSr
    270652726U,	// tBLXi
    673305910U,	// tBLXr
    2208912U,	// tBX
    2208230U,	// tBXNS
    874621840U,	// tBcc
    3895019519U,	// tCBNZ
    3895019514U,	// tCBZ
    2125939U,	// tCMNz
    2126052U,	// tCMPhir
    2126052U,	// tCMPi8
    2126052U,	// tCMPr
    1275253236U,	// tCPS
    850219375U,	// tEOR
    2208423U,	// tHINT
    3753914U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    2207773U,	// tLDMIA
    2157654U,	// tLDRBi
    2157654U,	// tLDRBr
    2158162U,	// tLDRHi
    2158162U,	// tLDRHr
    2157673U,	// tLDRSB
    2158201U,	// tLDRSH
    2158917U,	// tLDRi
    2126149U,	// tLDRpci
    2158917U,	// tLDRr
    2158917U,	// tLDRspi
    716001264U,	// tLSLri
    850218992U,	// tLSLrr
    716001672U,	// tLSRri
    850219400U,	// tLSRrr
    740902836U,	// tMOVSr
    1052070884U,	// tMOVi8
    2126820U,	// tMOVr
    716001280U,	// tMUL
    1052070084U,	// tMVN
    850219389U,	// tORR
    0U,	// tPICADD
    2753679592U,	// tPOP
    2753678975U,	// tPUSH
    2126771U,	// tREV
    2124276U,	// tREV16
    2125444U,	// tREVSH
    850219379U,	// tROR
    1991593067U,	// tRSB
    850218209U,	// tSBC
    280399U,	// tSETEND
    740323392U,	// tSTMIA_UPD
    2157660U,	// tSTRBi
    2157660U,	// tSTRBr
    2158168U,	// tSTRHi
    2158168U,	// tSTRHr
    2159007U,	// tSTRi
    2159007U,	// tSTRr
    2159007U,	// tSTRspi
    716000417U,	// tSUBi3
    850218145U,	// tSUBi8
    716000417U,	// tSUBrr
    2157729U,	// tSUBspi
    2206994U,	// tSVC
    2124949U,	// tSXTB
    2125450U,	// tSXTH
    4309U,	// tTRAP
    2126615U,	// tTST
    3753819U,	// tUDF
    2124954U,	// tUXTB
    2125455U,	// tUXTH
    2293U,	// t__brkdiv0
  };

  static const uint32_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ASRi
    0U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BL_PUSHLR
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    0U,	// CompilerBarrier
    0U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    128U,	// LDRBT_POST
    16384U,	// LDRConstPool
    128U,	// LDRHTii
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    128U,	// LDRSBTii
    128U,	// LDRSHTii
    128U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LOADDUAL
    0U,	// LSLi
    0U,	// LSLr
    0U,	// LSRi
    0U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MULv5
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    0U,	// RORi
    0U,	// RORr
    0U,	// RRX
    16384U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    0U,	// STOREDUAL
    128U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    128U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    16640U,	// VLD1LNdAsm_16
    16640U,	// VLD1LNdAsm_32
    16640U,	// VLD1LNdAsm_8
    33024U,	// VLD1LNdWB_fixed_Asm_16
    33024U,	// VLD1LNdWB_fixed_Asm_32
    33024U,	// VLD1LNdWB_fixed_Asm_8
    524544U,	// VLD1LNdWB_register_Asm_16
    524544U,	// VLD1LNdWB_register_Asm_32
    524544U,	// VLD1LNdWB_register_Asm_8
    16640U,	// VLD2LNdAsm_16
    16640U,	// VLD2LNdAsm_32
    16640U,	// VLD2LNdAsm_8
    33024U,	// VLD2LNdWB_fixed_Asm_16
    33024U,	// VLD2LNdWB_fixed_Asm_32
    33024U,	// VLD2LNdWB_fixed_Asm_8
    524544U,	// VLD2LNdWB_register_Asm_16
    524544U,	// VLD2LNdWB_register_Asm_32
    524544U,	// VLD2LNdWB_register_Asm_8
    16640U,	// VLD2LNqAsm_16
    16640U,	// VLD2LNqAsm_32
    33024U,	// VLD2LNqWB_fixed_Asm_16
    33024U,	// VLD2LNqWB_fixed_Asm_32
    524544U,	// VLD2LNqWB_register_Asm_16
    524544U,	// VLD2LNqWB_register_Asm_32
    2U,	// VLD3DUPdAsm_16
    2U,	// VLD3DUPdAsm_32
    2U,	// VLD3DUPdAsm_8
    4U,	// VLD3DUPdWB_fixed_Asm_16
    4U,	// VLD3DUPdWB_fixed_Asm_32
    4U,	// VLD3DUPdWB_fixed_Asm_8
    16768U,	// VLD3DUPdWB_register_Asm_16
    16768U,	// VLD3DUPdWB_register_Asm_32
    16768U,	// VLD3DUPdWB_register_Asm_8
    2U,	// VLD3DUPqAsm_16
    2U,	// VLD3DUPqAsm_32
    2U,	// VLD3DUPqAsm_8
    4U,	// VLD3DUPqWB_fixed_Asm_16
    4U,	// VLD3DUPqWB_fixed_Asm_32
    4U,	// VLD3DUPqWB_fixed_Asm_8
    16768U,	// VLD3DUPqWB_register_Asm_16
    16768U,	// VLD3DUPqWB_register_Asm_32
    16768U,	// VLD3DUPqWB_register_Asm_8
    16640U,	// VLD3LNdAsm_16
    16640U,	// VLD3LNdAsm_32
    16640U,	// VLD3LNdAsm_8
    33024U,	// VLD3LNdWB_fixed_Asm_16
    33024U,	// VLD3LNdWB_fixed_Asm_32
    33024U,	// VLD3LNdWB_fixed_Asm_8
    524544U,	// VLD3LNdWB_register_Asm_16
    524544U,	// VLD3LNdWB_register_Asm_32
    524544U,	// VLD3LNdWB_register_Asm_8
    16640U,	// VLD3LNqAsm_16
    16640U,	// VLD3LNqAsm_32
    33024U,	// VLD3LNqWB_fixed_Asm_16
    33024U,	// VLD3LNqWB_fixed_Asm_32
    524544U,	// VLD3LNqWB_register_Asm_16
    524544U,	// VLD3LNqWB_register_Asm_32
    518U,	// VLD3dAsm_16
    518U,	// VLD3dAsm_32
    518U,	// VLD3dAsm_8
    646U,	// VLD3dWB_fixed_Asm_16
    646U,	// VLD3dWB_fixed_Asm_32
    646U,	// VLD3dWB_fixed_Asm_8
    49926U,	// VLD3dWB_register_Asm_16
    49926U,	// VLD3dWB_register_Asm_32
    49926U,	// VLD3dWB_register_Asm_8
    2U,	// VLD3qAsm_16
    2U,	// VLD3qAsm_32
    2U,	// VLD3qAsm_8
    4U,	// VLD3qWB_fixed_Asm_16
    4U,	// VLD3qWB_fixed_Asm_32
    4U,	// VLD3qWB_fixed_Asm_8
    16768U,	// VLD3qWB_register_Asm_16
    16768U,	// VLD3qWB_register_Asm_32
    16768U,	// VLD3qWB_register_Asm_8
    2U,	// VLD4DUPdAsm_16
    2U,	// VLD4DUPdAsm_32
    2U,	// VLD4DUPdAsm_8
    4U,	// VLD4DUPdWB_fixed_Asm_16
    4U,	// VLD4DUPdWB_fixed_Asm_32
    4U,	// VLD4DUPdWB_fixed_Asm_8
    16768U,	// VLD4DUPdWB_register_Asm_16
    16768U,	// VLD4DUPdWB_register_Asm_32
    16768U,	// VLD4DUPdWB_register_Asm_8
    2U,	// VLD4DUPqAsm_16
    2U,	// VLD4DUPqAsm_32
    2U,	// VLD4DUPqAsm_8
    4U,	// VLD4DUPqWB_fixed_Asm_16
    4U,	// VLD4DUPqWB_fixed_Asm_32
    4U,	// VLD4DUPqWB_fixed_Asm_8
    16768U,	// VLD4DUPqWB_register_Asm_16
    16768U,	// VLD4DUPqWB_register_Asm_32
    16768U,	// VLD4DUPqWB_register_Asm_8
    16640U,	// VLD4LNdAsm_16
    16640U,	// VLD4LNdAsm_32
    16640U,	// VLD4LNdAsm_8
    33024U,	// VLD4LNdWB_fixed_Asm_16
    33024U,	// VLD4LNdWB_fixed_Asm_32
    33024U,	// VLD4LNdWB_fixed_Asm_8
    524544U,	// VLD4LNdWB_register_Asm_16
    524544U,	// VLD4LNdWB_register_Asm_32
    524544U,	// VLD4LNdWB_register_Asm_8
    16640U,	// VLD4LNqAsm_16
    16640U,	// VLD4LNqAsm_32
    33024U,	// VLD4LNqWB_fixed_Asm_16
    33024U,	// VLD4LNqWB_fixed_Asm_32
    524544U,	// VLD4LNqWB_register_Asm_16
    524544U,	// VLD4LNqWB_register_Asm_32
    518U,	// VLD4dAsm_16
    518U,	// VLD4dAsm_32
    518U,	// VLD4dAsm_8
    646U,	// VLD4dWB_fixed_Asm_16
    646U,	// VLD4dWB_fixed_Asm_32
    646U,	// VLD4dWB_fixed_Asm_8
    49926U,	// VLD4dWB_register_Asm_16
    49926U,	// VLD4dWB_register_Asm_32
    49926U,	// VLD4dWB_register_Asm_8
    2U,	// VLD4qAsm_16
    2U,	// VLD4qAsm_32
    2U,	// VLD4qAsm_8
    4U,	// VLD4qWB_fixed_Asm_16
    4U,	// VLD4qWB_fixed_Asm_32
    4U,	// VLD4qWB_fixed_Asm_8
    16768U,	// VLD4qWB_register_Asm_16
    16768U,	// VLD4qWB_register_Asm_32
    16768U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVHcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    16640U,	// VST1LNdAsm_16
    16640U,	// VST1LNdAsm_32
    16640U,	// VST1LNdAsm_8
    33024U,	// VST1LNdWB_fixed_Asm_16
    33024U,	// VST1LNdWB_fixed_Asm_32
    33024U,	// VST1LNdWB_fixed_Asm_8
    524544U,	// VST1LNdWB_register_Asm_16
    524544U,	// VST1LNdWB_register_Asm_32
    524544U,	// VST1LNdWB_register_Asm_8
    16640U,	// VST2LNdAsm_16
    16640U,	// VST2LNdAsm_32
    16640U,	// VST2LNdAsm_8
    33024U,	// VST2LNdWB_fixed_Asm_16
    33024U,	// VST2LNdWB_fixed_Asm_32
    33024U,	// VST2LNdWB_fixed_Asm_8
    524544U,	// VST2LNdWB_register_Asm_16
    524544U,	// VST2LNdWB_register_Asm_32
    524544U,	// VST2LNdWB_register_Asm_8
    16640U,	// VST2LNqAsm_16
    16640U,	// VST2LNqAsm_32
    33024U,	// VST2LNqWB_fixed_Asm_16
    33024U,	// VST2LNqWB_fixed_Asm_32
    524544U,	// VST2LNqWB_register_Asm_16
    524544U,	// VST2LNqWB_register_Asm_32
    16640U,	// VST3LNdAsm_16
    16640U,	// VST3LNdAsm_32
    16640U,	// VST3LNdAsm_8
    33024U,	// VST3LNdWB_fixed_Asm_16
    33024U,	// VST3LNdWB_fixed_Asm_32
    33024U,	// VST3LNdWB_fixed_Asm_8
    524544U,	// VST3LNdWB_register_Asm_16
    524544U,	// VST3LNdWB_register_Asm_32
    524544U,	// VST3LNdWB_register_Asm_8
    16640U,	// VST3LNqAsm_16
    16640U,	// VST3LNqAsm_32
    33024U,	// VST3LNqWB_fixed_Asm_16
    33024U,	// VST3LNqWB_fixed_Asm_32
    524544U,	// VST3LNqWB_register_Asm_16
    524544U,	// VST3LNqWB_register_Asm_32
    518U,	// VST3dAsm_16
    518U,	// VST3dAsm_32
    518U,	// VST3dAsm_8
    646U,	// VST3dWB_fixed_Asm_16
    646U,	// VST3dWB_fixed_Asm_32
    646U,	// VST3dWB_fixed_Asm_8
    49926U,	// VST3dWB_register_Asm_16
    49926U,	// VST3dWB_register_Asm_32
    49926U,	// VST3dWB_register_Asm_8
    2U,	// VST3qAsm_16
    2U,	// VST3qAsm_32
    2U,	// VST3qAsm_8
    4U,	// VST3qWB_fixed_Asm_16
    4U,	// VST3qWB_fixed_Asm_32
    4U,	// VST3qWB_fixed_Asm_8
    16768U,	// VST3qWB_register_Asm_16
    16768U,	// VST3qWB_register_Asm_32
    16768U,	// VST3qWB_register_Asm_8
    16640U,	// VST4LNdAsm_16
    16640U,	// VST4LNdAsm_32
    16640U,	// VST4LNdAsm_8
    33024U,	// VST4LNdWB_fixed_Asm_16
    33024U,	// VST4LNdWB_fixed_Asm_32
    33024U,	// VST4LNdWB_fixed_Asm_8
    524544U,	// VST4LNdWB_register_Asm_16
    524544U,	// VST4LNdWB_register_Asm_32
    524544U,	// VST4LNdWB_register_Asm_8
    16640U,	// VST4LNqAsm_16
    16640U,	// VST4LNqAsm_32
    33024U,	// VST4LNqWB_fixed_Asm_16
    33024U,	// VST4LNqWB_fixed_Asm_32
    524544U,	// VST4LNqWB_register_Asm_16
    524544U,	// VST4LNqWB_register_Asm_32
    518U,	// VST4dAsm_16
    518U,	// VST4dAsm_32
    518U,	// VST4dAsm_8
    646U,	// VST4dWB_fixed_Asm_16
    646U,	// VST4dWB_fixed_Asm_32
    646U,	// VST4dWB_fixed_Asm_8
    49926U,	// VST4dWB_register_Asm_16
    49926U,	// VST4dWB_register_Asm_32
    49926U,	// VST4dWB_register_Asm_8
    2U,	// VST4qAsm_16
    2U,	// VST4qAsm_32
    2U,	// VST4qAsm_8
    4U,	// VST4qWB_fixed_Asm_16
    4U,	// VST4qWB_fixed_Asm_32
    4U,	// VST4qWB_fixed_Asm_8
    16768U,	// VST4qWB_register_Asm_16
    16768U,	// VST4qWB_register_Asm_32
    16768U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BF_LabelPseudo
    0U,	// t2BR_JT
    0U,	// t2DoLoopStart
    0U,	// t2LDMIA_RET
    16384U,	// t2LDRBpcrel
    16384U,	// t2LDRConstPool
    16384U,	// t2LDRHpcrel
    16384U,	// t2LDRSBpcrel
    16384U,	// t2LDRSHpcrel
    0U,	// t2LDRpci_pic
    16384U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LoopDec
    0U,	// t2LoopEnd
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    896U,	// t2MOVSsi
    1024U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    896U,	// t2MOVsi
    1024U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// t2WhileLoopStart
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBLXNS_CALL
    0U,	// tBL_PUSHLR
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBXNS_RET
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tLDMIA_UPD
    16384U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLSri
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tRSBS
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    1048576U,	// ADCri
    0U,	// ADCrr
    1572864U,	// ADCrsi
    0U,	// ADCrsr
    1048576U,	// ADDri
    0U,	// ADDrr
    1572864U,	// ADDrsi
    0U,	// ADDrsr
    1152U,	// ADR
    2U,	// AESD
    2U,	// AESE
    2U,	// AESIMC
    2U,	// AESMC
    1048576U,	// ANDri
    0U,	// ANDrr
    1572864U,	// ANDrsi
    0U,	// ANDrsr
    520U,	// BF16VDOTI_VDOTD
    520U,	// BF16VDOTI_VDOTQ
    2U,	// BF16VDOTS_VDOTD
    2U,	// BF16VDOTS_VDOTQ
    2U,	// BF16_VCVT
    2U,	// BF16_VCVTB
    2U,	// BF16_VCVTT
    1280U,	// BFC
    2098560U,	// BFI
    1048576U,	// BICri
    0U,	// BICrr
    1572864U,	// BICrsi
    0U,	// BICrsr
    0U,	// BKPT
    0U,	// BL
    0U,	// BLX
    2U,	// BLX_pred
    0U,	// BLXi
    2U,	// BL_pred
    0U,	// BX
    2U,	// BXJ
    0U,	// BX_RET
    2U,	// BX_pred
    2U,	// Bcc
    2U,	// CDE_CX1
    16778U,	// CDE_CX1A
    0U,	// CDE_CX1D
    524U,	// CDE_CX1DA
    16768U,	// CDE_CX2
    524682U,	// CDE_CX2A
    526U,	// CDE_CX2D
    2687756U,	// CDE_CX2DA
    524672U,	// CDE_CX3
    34079114U,	// CDE_CX3A
    2687758U,	// CDE_CX3D
    70320908U,	// CDE_CX3DA
    2U,	// CDE_VCX1A_fpdp
    2U,	// CDE_VCX1A_fpsp
    16778U,	// CDE_VCX1A_vec
    2U,	// CDE_VCX1_fpdp
    2U,	// CDE_VCX1_fpsp
    17802U,	// CDE_VCX1_vec
    17920U,	// CDE_VCX2A_fpdp
    17920U,	// CDE_VCX2A_fpsp
    524682U,	// CDE_VCX2A_vec
    16768U,	// CDE_VCX2_fpdp
    16768U,	// CDE_VCX2_fpsp
    3671434U,	// CDE_VCX2_vec
    4195840U,	// CDE_VCX3A_fpdp
    4195840U,	// CDE_VCX3A_fpsp
    34079114U,	// CDE_VCX3A_vec
    524672U,	// CDE_VCX3_fpdp
    524672U,	// CDE_VCX3_fpsp
    37225866U,	// CDE_VCX3_vec
    82704U,	// CDP
    0U,	// CDP2
    0U,	// CLREX
    16384U,	// CLZ
    1664U,	// CMNri
    16384U,	// CMNzrr
    1792U,	// CMNzrsi
    1024U,	// CMNzrsr
    1664U,	// CMPri
    16384U,	// CMPrr
    1792U,	// CMPrsi
    1024U,	// CMPrsr
    0U,	// CPS1p
    2U,	// CPS2p
    17792U,	// CPS3p
    17792U,	// CRC32B
    17792U,	// CRC32CB
    17792U,	// CRC32CH
    17792U,	// CRC32CW
    17792U,	// CRC32H
    17792U,	// CRC32W
    2U,	// DBG
    0U,	// DMB
    0U,	// DSB
    1048576U,	// EORri
    0U,	// EORrr
    1572864U,	// EORrsi
    0U,	// EORrsr
    0U,	// ERET
    18U,	// FCONSTD
    1920U,	// FCONSTH
    1920U,	// FCONSTS
    532U,	// FLDMXDB_UPD
    18432U,	// FLDMXIA
    532U,	// FLDMXIA_UPD
    0U,	// FMSTAT
    532U,	// FSTMXDB_UPD
    18432U,	// FSTMXIA
    532U,	// FSTMXIA_UPD
    2U,	// HINT
    0U,	// HLT
    0U,	// HVC
    0U,	// ISB
    128U,	// LDA
    128U,	// LDAB
    128U,	// LDAEX
    128U,	// LDAEXB
    0U,	// LDAEXD
    128U,	// LDAEXH
    128U,	// LDAH
    0U,	// LDC2L_OFFSET
    2176U,	// LDC2L_OPTION
    2304U,	// LDC2L_POST
    0U,	// LDC2L_PRE
    0U,	// LDC2_OFFSET
    2176U,	// LDC2_OPTION
    2304U,	// LDC2_POST
    0U,	// LDC2_PRE
    2454U,	// LDCL_OFFSET
    4721174U,	// LDCL_OPTION
    5245462U,	// LDCL_POST
    2710U,	// LDCL_PRE
    2454U,	// LDC_OFFSET
    4721174U,	// LDC_OPTION
    5245462U,	// LDC_POST
    2710U,	// LDC_PRE
    18432U,	// LDMDA
    532U,	// LDMDA_UPD
    18432U,	// LDMDB
    532U,	// LDMDB_UPD
    18432U,	// LDMIA
    532U,	// LDMIA_UPD
    18432U,	// LDMIB
    532U,	// LDMIB_UPD
    5769728U,	// LDRBT_POST_IMM
    5769728U,	// LDRBT_POST_REG
    5769728U,	// LDRB_POST_IMM
    5769728U,	// LDRB_POST_REG
    2816U,	// LDRB_PRE_IMM
    2944U,	// LDRB_PRE_REG
    3072U,	// LDRBi12
    3200U,	// LDRBrs
    6291456U,	// LDRD
    40370176U,	// LDRD_POST
    7340032U,	// LDRD_PRE
    128U,	// LDREX
    128U,	// LDREXB
    0U,	// LDREXD
    128U,	// LDREXH
    3328U,	// LDRH
    7866880U,	// LDRHTi
    8391168U,	// LDRHTr
    8915456U,	// LDRH_POST
    3456U,	// LDRH_PRE
    3328U,	// LDRSB
    7866880U,	// LDRSBTi
    8391168U,	// LDRSBTr
    8915456U,	// LDRSB_POST
    3456U,	// LDRSB_PRE
    3328U,	// LDRSH
    7866880U,	// LDRSHTi
    8391168U,	// LDRSHTr
    8915456U,	// LDRSH_POST
    3456U,	// LDRSH_PRE
    5769728U,	// LDRT_POST_IMM
    5769728U,	// LDRT_POST_REG
    5769728U,	// LDR_POST_IMM
    5769728U,	// LDR_POST_REG
    2816U,	// LDR_PRE_IMM
    2944U,	// LDR_PRE_REG
    3072U,	// LDRcp
    3072U,	// LDRi12
    3200U,	// LDRrs
    103908112U,	// MCR
    3584U,	// MCR2
    137462544U,	// MCRR
    9437568U,	// MCRR2
    33554432U,	// MLA
    33554432U,	// MLS
    0U,	// MOVPCLR
    17792U,	// MOVTi16
    1664U,	// MOVi
    16384U,	// MOVi16
    16384U,	// MOVr
    16384U,	// MOVr_TC
    1792U,	// MOVsi
    1024U,	// MOVsr
    115480U,	// MRC
    0U,	// MRC2
    0U,	// MRRC
    0U,	// MRRC2
    26U,	// MRS
    3712U,	// MRSbanked
    28U,	// MRSsys
    528U,	// MSR
    0U,	// MSRbanked
    30U,	// MSRi
    0U,	// MUL
    524288U,	// MVE_ASRLi
    524288U,	// MVE_ASRLr
    2U,	// MVE_DLSTP_16
    2U,	// MVE_DLSTP_32
    2U,	// MVE_DLSTP_64
    2U,	// MVE_DLSTP_8
    0U,	// MVE_LCTP
    0U,	// MVE_LETP
    524288U,	// MVE_LSLLi
    524288U,	// MVE_LSLLr
    524288U,	// MVE_LSRL
    17792U,	// MVE_SQRSHR
    9961472U,	// MVE_SQRSHRL
    17792U,	// MVE_SQSHL
    524288U,	// MVE_SQSHLL
    17792U,	// MVE_SRSHR
    524288U,	// MVE_SRSHRL
    17792U,	// MVE_UQRSHL
    9961472U,	// MVE_UQRSHLL
    17792U,	// MVE_UQSHL
    524288U,	// MVE_UQSHLL
    17792U,	// MVE_URSHR
    524288U,	// MVE_URSHRL
    3671424U,	// MVE_VABAVs16
    3671424U,	// MVE_VABAVs32
    3671424U,	// MVE_VABAVs8
    3671424U,	// MVE_VABAVu16
    3671424U,	// MVE_VABAVu32
    3671424U,	// MVE_VABAVu8
    0U,	// MVE_VABDf16
    0U,	// MVE_VABDf32
    0U,	// MVE_VABDs16
    0U,	// MVE_VABDs32
    0U,	// MVE_VABDs8
    0U,	// MVE_VABDu16
    0U,	// MVE_VABDu32
    0U,	// MVE_VABDu8
    16384U,	// MVE_VABSf16
    16384U,	// MVE_VABSf32
    16384U,	// MVE_VABSs16
    16384U,	// MVE_VABSs32
    16384U,	// MVE_VABSs8
    3671424U,	// MVE_VADC
    3671424U,	// MVE_VADCI
    524288U,	// MVE_VADDLVs32acc
    0U,	// MVE_VADDLVs32no_acc
    524288U,	// MVE_VADDLVu32acc
    0U,	// MVE_VADDLVu32no_acc
    17792U,	// MVE_VADDVs16acc
    16384U,	// MVE_VADDVs16no_acc
    17792U,	// MVE_VADDVs32acc
    16384U,	// MVE_VADDVs32no_acc
    17792U,	// MVE_VADDVs8acc
    16384U,	// MVE_VADDVs8no_acc
    17792U,	// MVE_VADDVu16acc
    16384U,	// MVE_VADDVu16no_acc
    17792U,	// MVE_VADDVu32acc
    16384U,	// MVE_VADDVu32no_acc
    17792U,	// MVE_VADDVu8acc
    16384U,	// MVE_VADDVu8no_acc
    0U,	// MVE_VADD_qr_f16
    0U,	// MVE_VADD_qr_f32
    0U,	// MVE_VADD_qr_i16
    0U,	// MVE_VADD_qr_i32
    0U,	// MVE_VADD_qr_i8
    0U,	// MVE_VADDf16
    0U,	// MVE_VADDf32
    0U,	// MVE_VADDi16
    0U,	// MVE_VADDi32
    0U,	// MVE_VADDi8
    0U,	// MVE_VAND
    0U,	// MVE_VBIC
    3840U,	// MVE_VBICimmi16
    3840U,	// MVE_VBICimmi32
    0U,	// MVE_VBRSR16
    0U,	// MVE_VBRSR32
    0U,	// MVE_VBRSR8
    33554432U,	// MVE_VCADDf16
    33554432U,	// MVE_VCADDf32
    33554432U,	// MVE_VCADDi16
    33554432U,	// MVE_VCADDi32
    33554432U,	// MVE_VCADDi8
    16384U,	// MVE_VCLSs16
    16384U,	// MVE_VCLSs32
    16384U,	// MVE_VCLSs8
    16384U,	// MVE_VCLZs16
    16384U,	// MVE_VCLZs32
    16384U,	// MVE_VCLZs8
    37225856U,	// MVE_VCMLAf16
    37225856U,	// MVE_VCMLAf32
    0U,	// MVE_VCMPf16
    0U,	// MVE_VCMPf16r
    0U,	// MVE_VCMPf32
    0U,	// MVE_VCMPf32r
    0U,	// MVE_VCMPi16
    0U,	// MVE_VCMPi16r
    0U,	// MVE_VCMPi32
    0U,	// MVE_VCMPi32r
    0U,	// MVE_VCMPi8
    0U,	// MVE_VCMPi8r
    0U,	// MVE_VCMPs16
    0U,	// MVE_VCMPs16r
    0U,	// MVE_VCMPs32
    0U,	// MVE_VCMPs32r
    0U,	// MVE_VCMPs8
    0U,	// MVE_VCMPs8r
    0U,	// MVE_VCMPu16
    0U,	// MVE_VCMPu16r
    0U,	// MVE_VCMPu32
    0U,	// MVE_VCMPu32r
    0U,	// MVE_VCMPu8
    0U,	// MVE_VCMPu8r
    33554432U,	// MVE_VCMULf16
    33554432U,	// MVE_VCMULf32
    2U,	// MVE_VCTP16
    2U,	// MVE_VCTP32
    2U,	// MVE_VCTP64
    2U,	// MVE_VCTP8
    2U,	// MVE_VCVTf16f32bh
    2U,	// MVE_VCVTf16f32th
    536U,	// MVE_VCVTf16s16_fix
    0U,	// MVE_VCVTf16s16n
    536U,	// MVE_VCVTf16u16_fix
    0U,	// MVE_VCVTf16u16n
    0U,	// MVE_VCVTf32f16bh
    0U,	// MVE_VCVTf32f16th
    536U,	// MVE_VCVTf32s32_fix
    0U,	// MVE_VCVTf32s32n
    536U,	// MVE_VCVTf32u32_fix
    0U,	// MVE_VCVTf32u32n
    536U,	// MVE_VCVTs16f16_fix
    0U,	// MVE_VCVTs16f16a
    0U,	// MVE_VCVTs16f16m
    0U,	// MVE_VCVTs16f16n
    0U,	// MVE_VCVTs16f16p
    0U,	// MVE_VCVTs16f16z
    536U,	// MVE_VCVTs32f32_fix
    0U,	// MVE_VCVTs32f32a
    0U,	// MVE_VCVTs32f32m
    0U,	// MVE_VCVTs32f32n
    0U,	// MVE_VCVTs32f32p
    0U,	// MVE_VCVTs32f32z
    536U,	// MVE_VCVTu16f16_fix
    0U,	// MVE_VCVTu16f16a
    0U,	// MVE_VCVTu16f16m
    0U,	// MVE_VCVTu16f16n
    0U,	// MVE_VCVTu16f16p
    0U,	// MVE_VCVTu16f16z
    536U,	// MVE_VCVTu32f32_fix
    0U,	// MVE_VCVTu32f32a
    0U,	// MVE_VCVTu32f32m
    0U,	// MVE_VCVTu32f32n
    0U,	// MVE_VCVTu32f32p
    0U,	// MVE_VCVTu32f32z
    3670016U,	// MVE_VDDUPu16
    3670016U,	// MVE_VDDUPu32
    3670016U,	// MVE_VDDUPu8
    16384U,	// MVE_VDUP16
    16384U,	// MVE_VDUP32
    16384U,	// MVE_VDUP8
    37224448U,	// MVE_VDWDUPu16
    37224448U,	// MVE_VDWDUPu32
    37224448U,	// MVE_VDWDUPu8
    0U,	// MVE_VEOR
    3671424U,	// MVE_VFMA_qr_Sf16
    3671424U,	// MVE_VFMA_qr_Sf32
    3671424U,	// MVE_VFMA_qr_f16
    3671424U,	// MVE_VFMA_qr_f32
    3671424U,	// MVE_VFMAf16
    3671424U,	// MVE_VFMAf32
    3671424U,	// MVE_VFMSf16
    3671424U,	// MVE_VFMSf32
    0U,	// MVE_VHADD_qr_s16
    0U,	// MVE_VHADD_qr_s32
    0U,	// MVE_VHADD_qr_s8
    0U,	// MVE_VHADD_qr_u16
    0U,	// MVE_VHADD_qr_u32
    0U,	// MVE_VHADD_qr_u8
    0U,	// MVE_VHADDs16
    0U,	// MVE_VHADDs32
    0U,	// MVE_VHADDs8
    0U,	// MVE_VHADDu16
    0U,	// MVE_VHADDu32
    0U,	// MVE_VHADDu8
    33554432U,	// MVE_VHCADDs16
    33554432U,	// MVE_VHCADDs32
    33554432U,	// MVE_VHCADDs8
    0U,	// MVE_VHSUB_qr_s16
    0U,	// MVE_VHSUB_qr_s32
    0U,	// MVE_VHSUB_qr_s8
    0U,	// MVE_VHSUB_qr_u16
    0U,	// MVE_VHSUB_qr_u32
    0U,	// MVE_VHSUB_qr_u8
    0U,	// MVE_VHSUBs16
    0U,	// MVE_VHSUBs32
    0U,	// MVE_VHSUBs8
    0U,	// MVE_VHSUBu16
    0U,	// MVE_VHSUBu32
    0U,	// MVE_VHSUBu8
    3670016U,	// MVE_VIDUPu16
    3670016U,	// MVE_VIDUPu32
    3670016U,	// MVE_VIDUPu8
    37224448U,	// MVE_VIWDUPu16
    37224448U,	// MVE_VIWDUPu32
    37224448U,	// MVE_VIWDUPu8
    0U,	// MVE_VLD20_16
    0U,	// MVE_VLD20_16_wb
    0U,	// MVE_VLD20_32
    0U,	// MVE_VLD20_32_wb
    0U,	// MVE_VLD20_8
    0U,	// MVE_VLD20_8_wb
    0U,	// MVE_VLD21_16
    0U,	// MVE_VLD21_16_wb
    0U,	// MVE_VLD21_32
    0U,	// MVE_VLD21_32_wb
    0U,	// MVE_VLD21_8
    0U,	// MVE_VLD21_8_wb
    0U,	// MVE_VLD40_16
    0U,	// MVE_VLD40_16_wb
    0U,	// MVE_VLD40_32
    0U,	// MVE_VLD40_32_wb
    0U,	// MVE_VLD40_8
    0U,	// MVE_VLD40_8_wb
    0U,	// MVE_VLD41_16
    0U,	// MVE_VLD41_16_wb
    0U,	// MVE_VLD41_32
    0U,	// MVE_VLD41_32_wb
    0U,	// MVE_VLD41_8
    0U,	// MVE_VLD41_8_wb
    0U,	// MVE_VLD42_16
    0U,	// MVE_VLD42_16_wb
    0U,	// MVE_VLD42_32
    0U,	// MVE_VLD42_32_wb
    0U,	// MVE_VLD42_8
    0U,	// MVE_VLD42_8_wb
    0U,	// MVE_VLD43_16
    0U,	// MVE_VLD43_16_wb
    0U,	// MVE_VLD43_32
    0U,	// MVE_VLD43_32_wb
    0U,	// MVE_VLD43_8
    0U,	// MVE_VLD43_8_wb
    3968U,	// MVE_VLDRBS16
    133632U,	// MVE_VLDRBS16_post
    4096U,	// MVE_VLDRBS16_pre
    4224U,	// MVE_VLDRBS16_rq
    3968U,	// MVE_VLDRBS32
    133632U,	// MVE_VLDRBS32_post
    4096U,	// MVE_VLDRBS32_pre
    4224U,	// MVE_VLDRBS32_rq
    3968U,	// MVE_VLDRBU16
    133632U,	// MVE_VLDRBU16_post
    4096U,	// MVE_VLDRBU16_pre
    4224U,	// MVE_VLDRBU16_rq
    3968U,	// MVE_VLDRBU32
    133632U,	// MVE_VLDRBU32_post
    4096U,	// MVE_VLDRBU32_pre
    4224U,	// MVE_VLDRBU32_rq
    3968U,	// MVE_VLDRBU8
    133632U,	// MVE_VLDRBU8_post
    4352U,	// MVE_VLDRBU8_pre
    4224U,	// MVE_VLDRBU8_rq
    3968U,	// MVE_VLDRDU64_qi
    4096U,	// MVE_VLDRDU64_qi_pre
    4480U,	// MVE_VLDRDU64_rq
    4224U,	// MVE_VLDRDU64_rq_u
    3968U,	// MVE_VLDRHS32
    133632U,	// MVE_VLDRHS32_post
    4096U,	// MVE_VLDRHS32_pre
    4608U,	// MVE_VLDRHS32_rq
    4224U,	// MVE_VLDRHS32_rq_u
    3968U,	// MVE_VLDRHU16
    133632U,	// MVE_VLDRHU16_post
    4352U,	// MVE_VLDRHU16_pre
    4608U,	// MVE_VLDRHU16_rq
    4224U,	// MVE_VLDRHU16_rq_u
    3968U,	// MVE_VLDRHU32
    133632U,	// MVE_VLDRHU32_post
    4096U,	// MVE_VLDRHU32_pre
    4608U,	// MVE_VLDRHU32_rq
    4224U,	// MVE_VLDRHU32_rq_u
    3968U,	// MVE_VLDRWU32
    133632U,	// MVE_VLDRWU32_post
    4352U,	// MVE_VLDRWU32_pre
    3968U,	// MVE_VLDRWU32_qi
    4096U,	// MVE_VLDRWU32_qi_pre
    4736U,	// MVE_VLDRWU32_rq
    4224U,	// MVE_VLDRWU32_rq_u
    17792U,	// MVE_VMAXAVs16
    17792U,	// MVE_VMAXAVs32
    17792U,	// MVE_VMAXAVs8
    17792U,	// MVE_VMAXAs16
    17792U,	// MVE_VMAXAs32
    17792U,	// MVE_VMAXAs8
    17792U,	// MVE_VMAXNMAVf16
    17792U,	// MVE_VMAXNMAVf32
    17792U,	// MVE_VMAXNMAf16
    17792U,	// MVE_VMAXNMAf32
    17792U,	// MVE_VMAXNMVf16
    17792U,	// MVE_VMAXNMVf32
    0U,	// MVE_VMAXNMf16
    0U,	// MVE_VMAXNMf32
    17792U,	// MVE_VMAXVs16
    17792U,	// MVE_VMAXVs32
    17792U,	// MVE_VMAXVs8
    17792U,	// MVE_VMAXVu16
    17792U,	// MVE_VMAXVu32
    17792U,	// MVE_VMAXVu8
    0U,	// MVE_VMAXs16
    0U,	// MVE_VMAXs32
    0U,	// MVE_VMAXs8
    0U,	// MVE_VMAXu16
    0U,	// MVE_VMAXu32
    0U,	// MVE_VMAXu8
    17792U,	// MVE_VMINAVs16
    17792U,	// MVE_VMINAVs32
    17792U,	// MVE_VMINAVs8
    17792U,	// MVE_VMINAs16
    17792U,	// MVE_VMINAs32
    17792U,	// MVE_VMINAs8
    17792U,	// MVE_VMINNMAVf16
    17792U,	// MVE_VMINNMAVf32
    17792U,	// MVE_VMINNMAf16
    17792U,	// MVE_VMINNMAf32
    17792U,	// MVE_VMINNMVf16
    17792U,	// MVE_VMINNMVf32
    0U,	// MVE_VMINNMf16
    0U,	// MVE_VMINNMf32
    17792U,	// MVE_VMINVs16
    17792U,	// MVE_VMINVs32
    17792U,	// MVE_VMINVs8
    17792U,	// MVE_VMINVu16
    17792U,	// MVE_VMINVu32
    17792U,	// MVE_VMINVu8
    0U,	// MVE_VMINs16
    0U,	// MVE_VMINs32
    0U,	// MVE_VMINs8
    0U,	// MVE_VMINu16
    0U,	// MVE_VMINu32
    0U,	// MVE_VMINu8
    3671424U,	// MVE_VMLADAVas16
    3671424U,	// MVE_VMLADAVas32
    3671424U,	// MVE_VMLADAVas8
    3671424U,	// MVE_VMLADAVau16
    3671424U,	// MVE_VMLADAVau32
    3671424U,	// MVE_VMLADAVau8
    3671424U,	// MVE_VMLADAVaxs16
    3671424U,	// MVE_VMLADAVaxs32
    3671424U,	// MVE_VMLADAVaxs8
    0U,	// MVE_VMLADAVs16
    0U,	// MVE_VMLADAVs32
    0U,	// MVE_VMLADAVs8
    0U,	// MVE_VMLADAVu16
    0U,	// MVE_VMLADAVu32
    0U,	// MVE_VMLADAVu8
    0U,	// MVE_VMLADAVxs16
    0U,	// MVE_VMLADAVxs32
    0U,	// MVE_VMLADAVxs8
    34078720U,	// MVE_VMLALDAVas16
    34078720U,	// MVE_VMLALDAVas32
    34078720U,	// MVE_VMLALDAVau16
    34078720U,	// MVE_VMLALDAVau32
    34078720U,	// MVE_VMLALDAVaxs16
    34078720U,	// MVE_VMLALDAVaxs32
    33554432U,	// MVE_VMLALDAVs16
    33554432U,	// MVE_VMLALDAVs32
    33554432U,	// MVE_VMLALDAVu16
    33554432U,	// MVE_VMLALDAVu32
    33554432U,	// MVE_VMLALDAVxs16
    33554432U,	// MVE_VMLALDAVxs32
    3671424U,	// MVE_VMLAS_qr_s16
    3671424U,	// MVE_VMLAS_qr_s32
    3671424U,	// MVE_VMLAS_qr_s8
    3671424U,	// MVE_VMLAS_qr_u16
    3671424U,	// MVE_VMLAS_qr_u32
    3671424U,	// MVE_VMLAS_qr_u8
    3671424U,	// MVE_VMLA_qr_s16
    3671424U,	// MVE_VMLA_qr_s32
    3671424U,	// MVE_VMLA_qr_s8
    3671424U,	// MVE_VMLA_qr_u16
    3671424U,	// MVE_VMLA_qr_u32
    3671424U,	// MVE_VMLA_qr_u8
    3671424U,	// MVE_VMLSDAVas16
    3671424U,	// MVE_VMLSDAVas32
    3671424U,	// MVE_VMLSDAVas8
    3671424U,	// MVE_VMLSDAVaxs16
    3671424U,	// MVE_VMLSDAVaxs32
    3671424U,	// MVE_VMLSDAVaxs8
    0U,	// MVE_VMLSDAVs16
    0U,	// MVE_VMLSDAVs32
    0U,	// MVE_VMLSDAVs8
    0U,	// MVE_VMLSDAVxs16
    0U,	// MVE_VMLSDAVxs32
    0U,	// MVE_VMLSDAVxs8
    34078720U,	// MVE_VMLSLDAVas16
    34078720U,	// MVE_VMLSLDAVas32
    34078720U,	// MVE_VMLSLDAVaxs16
    34078720U,	// MVE_VMLSLDAVaxs32
    33554432U,	// MVE_VMLSLDAVs16
    33554432U,	// MVE_VMLSLDAVs32
    33554432U,	// MVE_VMLSLDAVxs16
    33554432U,	// MVE_VMLSLDAVxs32
    16384U,	// MVE_VMOVLs16bh
    16384U,	// MVE_VMOVLs16th
    16384U,	// MVE_VMOVLs8bh
    16384U,	// MVE_VMOVLs8th
    16384U,	// MVE_VMOVLu16bh
    16384U,	// MVE_VMOVLu16th
    16384U,	// MVE_VMOVLu8bh
    16384U,	// MVE_VMOVLu8th
    17792U,	// MVE_VMOVNi16bh
    17792U,	// MVE_VMOVNi16th
    17792U,	// MVE_VMOVNi32bh
    17792U,	// MVE_VMOVNi32th
    147456U,	// MVE_VMOV_from_lane_32
    147456U,	// MVE_VMOV_from_lane_s16
    147456U,	// MVE_VMOV_from_lane_s8
    147456U,	// MVE_VMOV_from_lane_u16
    147456U,	// MVE_VMOV_from_lane_u8
    10650376U,	// MVE_VMOV_q_rr
    167772160U,	// MVE_VMOV_rr_q
    32U,	// MVE_VMOV_to_lane_16
    32U,	// MVE_VMOV_to_lane_32
    32U,	// MVE_VMOV_to_lane_8
    1920U,	// MVE_VMOVimmf32
    4864U,	// MVE_VMOVimmi16
    4864U,	// MVE_VMOVimmi32
    0U,	// MVE_VMOVimmi64
    4864U,	// MVE_VMOVimmi8
    0U,	// MVE_VMULHs16
    0U,	// MVE_VMULHs32
    0U,	// MVE_VMULHs8
    0U,	// MVE_VMULHu16
    0U,	// MVE_VMULHu32
    0U,	// MVE_VMULHu8
    0U,	// MVE_VMULLBp16
    0U,	// MVE_VMULLBp8
    0U,	// MVE_VMULLBs16
    0U,	// MVE_VMULLBs32
    0U,	// MVE_VMULLBs8
    0U,	// MVE_VMULLBu16
    0U,	// MVE_VMULLBu32
    0U,	// MVE_VMULLBu8
    0U,	// MVE_VMULLTp16
    0U,	// MVE_VMULLTp8
    0U,	// MVE_VMULLTs16
    0U,	// MVE_VMULLTs32
    0U,	// MVE_VMULLTs8
    0U,	// MVE_VMULLTu16
    0U,	// MVE_VMULLTu32
    0U,	// MVE_VMULLTu8
    0U,	// MVE_VMUL_qr_f16
    0U,	// MVE_VMUL_qr_f32
    0U,	// MVE_VMUL_qr_i16
    0U,	// MVE_VMUL_qr_i32
    0U,	// MVE_VMUL_qr_i8
    0U,	// MVE_VMULf16
    0U,	// MVE_VMULf32
    0U,	// MVE_VMULi16
    0U,	// MVE_VMULi32
    0U,	// MVE_VMULi8
    16384U,	// MVE_VMVN
    4864U,	// MVE_VMVNimmi16
    4864U,	// MVE_VMVNimmi32
    16384U,	// MVE_VNEGf16
    16384U,	// MVE_VNEGf32
    16384U,	// MVE_VNEGs16
    16384U,	// MVE_VNEGs32
    16384U,	// MVE_VNEGs8
    0U,	// MVE_VORN
    0U,	// MVE_VORR
    3840U,	// MVE_VORRimmi16
    3840U,	// MVE_VORRimmi32
    0U,	// MVE_VPNOT
    0U,	// MVE_VPSEL
    0U,	// MVE_VPST
    0U,	// MVE_VPTv16i8
    0U,	// MVE_VPTv16i8r
    0U,	// MVE_VPTv16s8
    0U,	// MVE_VPTv16s8r
    0U,	// MVE_VPTv16u8
    0U,	// MVE_VPTv16u8r
    0U,	// MVE_VPTv4f32
    0U,	// MVE_VPTv4f32r
    0U,	// MVE_VPTv4i32
    0U,	// MVE_VPTv4i32r
    0U,	// MVE_VPTv4s32
    0U,	// MVE_VPTv4s32r
    0U,	// MVE_VPTv4u32
    0U,	// MVE_VPTv4u32r
    0U,	// MVE_VPTv8f16
    0U,	// MVE_VPTv8f16r
    0U,	// MVE_VPTv8i16
    0U,	// MVE_VPTv8i16r
    0U,	// MVE_VPTv8s16
    0U,	// MVE_VPTv8s16r
    0U,	// MVE_VPTv8u16
    0U,	// MVE_VPTv8u16r
    16384U,	// MVE_VQABSs16
    16384U,	// MVE_VQABSs32
    16384U,	// MVE_VQABSs8
    0U,	// MVE_VQADD_qr_s16
    0U,	// MVE_VQADD_qr_s32
    0U,	// MVE_VQADD_qr_s8
    0U,	// MVE_VQADD_qr_u16
    0U,	// MVE_VQADD_qr_u32
    0U,	// MVE_VQADD_qr_u8
    0U,	// MVE_VQADDs16
    0U,	// MVE_VQADDs32
    0U,	// MVE_VQADDs8
    0U,	// MVE_VQADDu16
    0U,	// MVE_VQADDu32
    0U,	// MVE_VQADDu8
    3671424U,	// MVE_VQDMLADHXs16
    3671424U,	// MVE_VQDMLADHXs32
    3671424U,	// MVE_VQDMLADHXs8
    3671424U,	// MVE_VQDMLADHs16
    3671424U,	// MVE_VQDMLADHs32
    3671424U,	// MVE_VQDMLADHs8
    3671424U,	// MVE_VQDMLAH_qrs16
    3671424U,	// MVE_VQDMLAH_qrs32
    3671424U,	// MVE_VQDMLAH_qrs8
    3671424U,	// MVE_VQDMLASH_qrs16
    3671424U,	// MVE_VQDMLASH_qrs32
    3671424U,	// MVE_VQDMLASH_qrs8
    3671424U,	// MVE_VQDMLSDHXs16
    3671424U,	// MVE_VQDMLSDHXs32
    3671424U,	// MVE_VQDMLSDHXs8
    3671424U,	// MVE_VQDMLSDHs16
    3671424U,	// MVE_VQDMLSDHs32
    3671424U,	// MVE_VQDMLSDHs8
    0U,	// MVE_VQDMULH_qr_s16
    0U,	// MVE_VQDMULH_qr_s32
    0U,	// MVE_VQDMULH_qr_s8
    0U,	// MVE_VQDMULHi16
    0U,	// MVE_VQDMULHi32
    0U,	// MVE_VQDMULHi8
    0U,	// MVE_VQDMULL_qr_s16bh
    0U,	// MVE_VQDMULL_qr_s16th
    0U,	// MVE_VQDMULL_qr_s32bh
    0U,	// MVE_VQDMULL_qr_s32th
    0U,	// MVE_VQDMULLs16bh
    0U,	// MVE_VQDMULLs16th
    0U,	// MVE_VQDMULLs32bh
    0U,	// MVE_VQDMULLs32th
    17792U,	// MVE_VQMOVNs16bh
    17792U,	// MVE_VQMOVNs16th
    17792U,	// MVE_VQMOVNs32bh
    17792U,	// MVE_VQMOVNs32th
    17792U,	// MVE_VQMOVNu16bh
    17792U,	// MVE_VQMOVNu16th
    17792U,	// MVE_VQMOVNu32bh
    17792U,	// MVE_VQMOVNu32th
    17792U,	// MVE_VQMOVUNs16bh
    17792U,	// MVE_VQMOVUNs16th
    17792U,	// MVE_VQMOVUNs32bh
    17792U,	// MVE_VQMOVUNs32th
    16384U,	// MVE_VQNEGs16
    16384U,	// MVE_VQNEGs32
    16384U,	// MVE_VQNEGs8
    3671424U,	// MVE_VQRDMLADHXs16
    3671424U,	// MVE_VQRDMLADHXs32
    3671424U,	// MVE_VQRDMLADHXs8
    3671424U,	// MVE_VQRDMLADHs16
    3671424U,	// MVE_VQRDMLADHs32
    3671424U,	// MVE_VQRDMLADHs8
    3671424U,	// MVE_VQRDMLAH_qrs16
    3671424U,	// MVE_VQRDMLAH_qrs32
    3671424U,	// MVE_VQRDMLAH_qrs8
    3671424U,	// MVE_VQRDMLASH_qrs16
    3671424U,	// MVE_VQRDMLASH_qrs32
    3671424U,	// MVE_VQRDMLASH_qrs8
    3671424U,	// MVE_VQRDMLSDHXs16
    3671424U,	// MVE_VQRDMLSDHXs32
    3671424U,	// MVE_VQRDMLSDHXs8
    3671424U,	// MVE_VQRDMLSDHs16
    3671424U,	// MVE_VQRDMLSDHs32
    3671424U,	// MVE_VQRDMLSDHs8
    0U,	// MVE_VQRDMULH_qr_s16
    0U,	// MVE_VQRDMULH_qr_s32
    0U,	// MVE_VQRDMULH_qr_s8
    0U,	// MVE_VQRDMULHi16
    0U,	// MVE_VQRDMULHi32
    0U,	// MVE_VQRDMULHi8
    0U,	// MVE_VQRSHL_by_vecs16
    0U,	// MVE_VQRSHL_by_vecs32
    0U,	// MVE_VQRSHL_by_vecs8
    0U,	// MVE_VQRSHL_by_vecu16
    0U,	// MVE_VQRSHL_by_vecu32
    0U,	// MVE_VQRSHL_by_vecu8
    17792U,	// MVE_VQRSHL_qrs16
    17792U,	// MVE_VQRSHL_qrs32
    17792U,	// MVE_VQRSHL_qrs8
    17792U,	// MVE_VQRSHL_qru16
    17792U,	// MVE_VQRSHL_qru32
    17792U,	// MVE_VQRSHL_qru8
    3671424U,	// MVE_VQRSHRNbhs16
    3671424U,	// MVE_VQRSHRNbhs32
    3671424U,	// MVE_VQRSHRNbhu16
    3671424U,	// MVE_VQRSHRNbhu32
    3671424U,	// MVE_VQRSHRNths16
    3671424U,	// MVE_VQRSHRNths32
    3671424U,	// MVE_VQRSHRNthu16
    3671424U,	// MVE_VQRSHRNthu32
    3671424U,	// MVE_VQRSHRUNs16bh
    3671424U,	// MVE_VQRSHRUNs16th
    3671424U,	// MVE_VQRSHRUNs32bh
    3671424U,	// MVE_VQRSHRUNs32th
    0U,	// MVE_VQSHLU_imms16
    0U,	// MVE_VQSHLU_imms32
    0U,	// MVE_VQSHLU_imms8
    0U,	// MVE_VQSHL_by_vecs16
    0U,	// MVE_VQSHL_by_vecs32
    0U,	// MVE_VQSHL_by_vecs8
    0U,	// MVE_VQSHL_by_vecu16
    0U,	// MVE_VQSHL_by_vecu32
    0U,	// MVE_VQSHL_by_vecu8
    17792U,	// MVE_VQSHL_qrs16
    17792U,	// MVE_VQSHL_qrs32
    17792U,	// MVE_VQSHL_qrs8
    17792U,	// MVE_VQSHL_qru16
    17792U,	// MVE_VQSHL_qru32
    17792U,	// MVE_VQSHL_qru8
    0U,	// MVE_VQSHLimms16
    0U,	// MVE_VQSHLimms32
    0U,	// MVE_VQSHLimms8
    0U,	// MVE_VQSHLimmu16
    0U,	// MVE_VQSHLimmu32
    0U,	// MVE_VQSHLimmu8
    3671424U,	// MVE_VQSHRNbhs16
    3671424U,	// MVE_VQSHRNbhs32
    3671424U,	// MVE_VQSHRNbhu16
    3671424U,	// MVE_VQSHRNbhu32
    3671424U,	// MVE_VQSHRNths16
    3671424U,	// MVE_VQSHRNths32
    3671424U,	// MVE_VQSHRNthu16
    3671424U,	// MVE_VQSHRNthu32
    3671424U,	// MVE_VQSHRUNs16bh
    3671424U,	// MVE_VQSHRUNs16th
    3671424U,	// MVE_VQSHRUNs32bh
    3671424U,	// MVE_VQSHRUNs32th
    0U,	// MVE_VQSUB_qr_s16
    0U,	// MVE_VQSUB_qr_s32
    0U,	// MVE_VQSUB_qr_s8
    0U,	// MVE_VQSUB_qr_u16
    0U,	// MVE_VQSUB_qr_u32
    0U,	// MVE_VQSUB_qr_u8
    0U,	// MVE_VQSUBs16
    0U,	// MVE_VQSUBs32
    0U,	// MVE_VQSUBs8
    0U,	// MVE_VQSUBu16
    0U,	// MVE_VQSUBu32
    0U,	// MVE_VQSUBu8
    16384U,	// MVE_VREV16_8
    16384U,	// MVE_VREV32_16
    16384U,	// MVE_VREV32_8
    16384U,	// MVE_VREV64_16
    16384U,	// MVE_VREV64_32
    16384U,	// MVE_VREV64_8
    0U,	// MVE_VRHADDs16
    0U,	// MVE_VRHADDs32
    0U,	// MVE_VRHADDs8
    0U,	// MVE_VRHADDu16
    0U,	// MVE_VRHADDu32
    0U,	// MVE_VRHADDu8
    16384U,	// MVE_VRINTf16A
    16384U,	// MVE_VRINTf16M
    16384U,	// MVE_VRINTf16N
    16384U,	// MVE_VRINTf16P
    16384U,	// MVE_VRINTf16X
    16384U,	// MVE_VRINTf16Z
    16384U,	// MVE_VRINTf32A
    16384U,	// MVE_VRINTf32M
    16384U,	// MVE_VRINTf32N
    16384U,	// MVE_VRINTf32P
    16384U,	// MVE_VRINTf32X
    16384U,	// MVE_VRINTf32Z
    34078720U,	// MVE_VRMLALDAVHas32
    34078720U,	// MVE_VRMLALDAVHau32
    34078720U,	// MVE_VRMLALDAVHaxs32
    33554432U,	// MVE_VRMLALDAVHs32
    33554432U,	// MVE_VRMLALDAVHu32
    33554432U,	// MVE_VRMLALDAVHxs32
    34078720U,	// MVE_VRMLSLDAVHas32
    34078720U,	// MVE_VRMLSLDAVHaxs32
    33554432U,	// MVE_VRMLSLDAVHs32
    33554432U,	// MVE_VRMLSLDAVHxs32
    0U,	// MVE_VRMULHs16
    0U,	// MVE_VRMULHs32
    0U,	// MVE_VRMULHs8
    0U,	// MVE_VRMULHu16
    0U,	// MVE_VRMULHu32
    0U,	// MVE_VRMULHu8
    0U,	// MVE_VRSHL_by_vecs16
    0U,	// MVE_VRSHL_by_vecs32
    0U,	// MVE_VRSHL_by_vecs8
    0U,	// MVE_VRSHL_by_vecu16
    0U,	// MVE_VRSHL_by_vecu32
    0U,	// MVE_VRSHL_by_vecu8
    17792U,	// MVE_VRSHL_qrs16
    17792U,	// MVE_VRSHL_qrs32
    17792U,	// MVE_VRSHL_qrs8
    17792U,	// MVE_VRSHL_qru16
    17792U,	// MVE_VRSHL_qru32
    17792U,	// MVE_VRSHL_qru8
    3671424U,	// MVE_VRSHRNi16bh
    3671424U,	// MVE_VRSHRNi16th
    3671424U,	// MVE_VRSHRNi32bh
    3671424U,	// MVE_VRSHRNi32th
    0U,	// MVE_VRSHR_imms16
    0U,	// MVE_VRSHR_imms32
    0U,	// MVE_VRSHR_imms8
    0U,	// MVE_VRSHR_immu16
    0U,	// MVE_VRSHR_immu32
    0U,	// MVE_VRSHR_immu8
    3671424U,	// MVE_VSBC
    3671424U,	// MVE_VSBCI
    524672U,	// MVE_VSHLC
    0U,	// MVE_VSHLL_imms16bh
    0U,	// MVE_VSHLL_imms16th
    0U,	// MVE_VSHLL_imms8bh
    0U,	// MVE_VSHLL_imms8th
    0U,	// MVE_VSHLL_immu16bh
    0U,	// MVE_VSHLL_immu16th
    0U,	// MVE_VSHLL_immu8bh
    0U,	// MVE_VSHLL_immu8th
    180224U,	// MVE_VSHLL_lws16bh
    180224U,	// MVE_VSHLL_lws16th
    196608U,	// MVE_VSHLL_lws8bh
    196608U,	// MVE_VSHLL_lws8th
    180224U,	// MVE_VSHLL_lwu16bh
    180224U,	// MVE_VSHLL_lwu16th
    196608U,	// MVE_VSHLL_lwu8bh
    196608U,	// MVE_VSHLL_lwu8th
    0U,	// MVE_VSHL_by_vecs16
    0U,	// MVE_VSHL_by_vecs32
    0U,	// MVE_VSHL_by_vecs8
    0U,	// MVE_VSHL_by_vecu16
    0U,	// MVE_VSHL_by_vecu32
    0U,	// MVE_VSHL_by_vecu8
    0U,	// MVE_VSHL_immi16
    0U,	// MVE_VSHL_immi32
    0U,	// MVE_VSHL_immi8
    17792U,	// MVE_VSHL_qrs16
    17792U,	// MVE_VSHL_qrs32
    17792U,	// MVE_VSHL_qrs8
    17792U,	// MVE_VSHL_qru16
    17792U,	// MVE_VSHL_qru32
    17792U,	// MVE_VSHL_qru8
    3671424U,	// MVE_VSHRNi16bh
    3671424U,	// MVE_VSHRNi16th
    3671424U,	// MVE_VSHRNi32bh
    3671424U,	// MVE_VSHRNi32th
    0U,	// MVE_VSHR_imms16
    0U,	// MVE_VSHR_imms32
    0U,	// MVE_VSHR_imms8
    0U,	// MVE_VSHR_immu16
    0U,	// MVE_VSHR_immu32
    0U,	// MVE_VSHR_immu8
    3671424U,	// MVE_VSLIimm16
    3671424U,	// MVE_VSLIimm32
    3671424U,	// MVE_VSLIimm8
    3671424U,	// MVE_VSRIimm16
    3671424U,	// MVE_VSRIimm32
    3671424U,	// MVE_VSRIimm8
    0U,	// MVE_VST20_16
    0U,	// MVE_VST20_16_wb
    0U,	// MVE_VST20_32
    0U,	// MVE_VST20_32_wb
    0U,	// MVE_VST20_8
    0U,	// MVE_VST20_8_wb
    0U,	// MVE_VST21_16
    0U,	// MVE_VST21_16_wb
    0U,	// MVE_VST21_32
    0U,	// MVE_VST21_32_wb
    0U,	// MVE_VST21_8
    0U,	// MVE_VST21_8_wb
    0U,	// MVE_VST40_16
    0U,	// MVE_VST40_16_wb
    0U,	// MVE_VST40_32
    0U,	// MVE_VST40_32_wb
    0U,	// MVE_VST40_8
    0U,	// MVE_VST40_8_wb
    0U,	// MVE_VST41_16
    0U,	// MVE_VST41_16_wb
    0U,	// MVE_VST41_32
    0U,	// MVE_VST41_32_wb
    0U,	// MVE_VST41_8
    0U,	// MVE_VST41_8_wb
    0U,	// MVE_VST42_16
    0U,	// MVE_VST42_16_wb
    0U,	// MVE_VST42_32
    0U,	// MVE_VST42_32_wb
    0U,	// MVE_VST42_8
    0U,	// MVE_VST42_8_wb
    0U,	// MVE_VST43_16
    0U,	// MVE_VST43_16_wb
    0U,	// MVE_VST43_32
    0U,	// MVE_VST43_32_wb
    0U,	// MVE_VST43_8
    0U,	// MVE_VST43_8_wb
    3968U,	// MVE_VSTRB16
    133632U,	// MVE_VSTRB16_post
    4096U,	// MVE_VSTRB16_pre
    4224U,	// MVE_VSTRB16_rq
    3968U,	// MVE_VSTRB32
    133632U,	// MVE_VSTRB32_post
    4096U,	// MVE_VSTRB32_pre
    4224U,	// MVE_VSTRB32_rq
    4224U,	// MVE_VSTRB8_rq
    3968U,	// MVE_VSTRBU8
    133632U,	// MVE_VSTRBU8_post
    4352U,	// MVE_VSTRBU8_pre
    3968U,	// MVE_VSTRD64_qi
    4096U,	// MVE_VSTRD64_qi_pre
    4480U,	// MVE_VSTRD64_rq
    4224U,	// MVE_VSTRD64_rq_u
    4608U,	// MVE_VSTRH16_rq
    4224U,	// MVE_VSTRH16_rq_u
    3968U,	// MVE_VSTRH32
    133632U,	// MVE_VSTRH32_post
    4096U,	// MVE_VSTRH32_pre
    4608U,	// MVE_VSTRH32_rq
    4224U,	// MVE_VSTRH32_rq_u
    3968U,	// MVE_VSTRHU16
    133632U,	// MVE_VSTRHU16_post
    4352U,	// MVE_VSTRHU16_pre
    3968U,	// MVE_VSTRW32_qi
    4096U,	// MVE_VSTRW32_qi_pre
    4736U,	// MVE_VSTRW32_rq
    4224U,	// MVE_VSTRW32_rq_u
    3968U,	// MVE_VSTRWU32
    133632U,	// MVE_VSTRWU32_post
    4352U,	// MVE_VSTRWU32_pre
    0U,	// MVE_VSUB_qr_f16
    0U,	// MVE_VSUB_qr_f32
    0U,	// MVE_VSUB_qr_i16
    0U,	// MVE_VSUB_qr_i32
    0U,	// MVE_VSUB_qr_i8
    0U,	// MVE_VSUBf16
    0U,	// MVE_VSUBf32
    0U,	// MVE_VSUBi16
    0U,	// MVE_VSUBi32
    0U,	// MVE_VSUBi8
    21376U,	// MVE_WLSTP_16
    21376U,	// MVE_WLSTP_32
    21376U,	// MVE_WLSTP_64
    21376U,	// MVE_WLSTP_8
    1664U,	// MVNi
    16384U,	// MVNr
    1792U,	// MVNsi
    1024U,	// MVNsr
    17792U,	// NEON_VMAXNMNDf
    17792U,	// NEON_VMAXNMNDh
    17792U,	// NEON_VMAXNMNQf
    17792U,	// NEON_VMAXNMNQh
    17792U,	// NEON_VMINNMNDf
    17792U,	// NEON_VMINNMNDh
    17792U,	// NEON_VMINNMNQf
    17792U,	// NEON_VMINNMNQh
    1048576U,	// ORRri
    0U,	// ORRrr
    1572864U,	// ORRrsi
    0U,	// ORRrsr
    201326592U,	// PKHBT
    234881024U,	// PKHTB
    0U,	// PLDWi12
    0U,	// PLDWrs
    0U,	// PLDi12
    0U,	// PLDrs
    0U,	// PLIi12
    0U,	// PLIrs
    0U,	// QADD
    0U,	// QADD16
    0U,	// QADD8
    0U,	// QASX
    0U,	// QDADD
    0U,	// QDSUB
    0U,	// QSAX
    0U,	// QSUB
    0U,	// QSUB16
    0U,	// QSUB8
    16384U,	// RBIT
    16384U,	// REV
    16384U,	// REV16
    16384U,	// REVSH
    0U,	// RFEDA
    0U,	// RFEDA_UPD
    0U,	// RFEDB
    0U,	// RFEDB_UPD
    0U,	// RFEIA
    0U,	// RFEIA_UPD
    0U,	// RFEIB
    0U,	// RFEIB_UPD
    1048576U,	// RSBri
    0U,	// RSBrr
    1572864U,	// RSBrsi
    0U,	// RSBrsr
    1048576U,	// RSCri
    0U,	// RSCrr
    1572864U,	// RSCrsi
    0U,	// RSCrsr
    0U,	// SADD16
    0U,	// SADD8
    0U,	// SASX
    0U,	// SB
    1048576U,	// SBCri
    0U,	// SBCrr
    1572864U,	// SBCrsi
    0U,	// SBCrsr
    33554432U,	// SBFX
    0U,	// SDIV
    0U,	// SEL
    0U,	// SETEND
    0U,	// SETPAN
    16768U,	// SHA1C
    2U,	// SHA1H
    16768U,	// SHA1M
    16768U,	// SHA1P
    16768U,	// SHA1SU0
    2U,	// SHA1SU1
    16768U,	// SHA256H
    16768U,	// SHA256H2
    2U,	// SHA256SU0
    16768U,	// SHA256SU1
    0U,	// SHADD16
    0U,	// SHADD8
    0U,	// SHASX
    0U,	// SHSAX
    0U,	// SHSUB16
    0U,	// SHSUB8
    2U,	// SMC
    33554432U,	// SMLABB
    33554432U,	// SMLABT
    33554432U,	// SMLAD
    33554432U,	// SMLADX
    0U,	// SMLAL
    33554432U,	// SMLALBB
    33554432U,	// SMLALBT
    33554432U,	// SMLALD
    33554432U,	// SMLALDX
    33554432U,	// SMLALTB
    33554432U,	// SMLALTT
    33554432U,	// SMLATB
    33554432U,	// SMLATT
    33554432U,	// SMLAWB
    33554432U,	// SMLAWT
    33554432U,	// SMLSD
    33554432U,	// SMLSDX
    33554432U,	// SMLSLD
    33554432U,	// SMLSLDX
    33554432U,	// SMMLA
    33554432U,	// SMMLAR
    33554432U,	// SMMLS
    33554432U,	// SMMLSR
    0U,	// SMMUL
    0U,	// SMMULR
    0U,	// SMUAD
    0U,	// SMUADX
    0U,	// SMULBB
    0U,	// SMULBT
    33554432U,	// SMULL
    0U,	// SMULTB
    0U,	// SMULTT
    0U,	// SMULWB
    0U,	// SMULWT
    0U,	// SMUSD
    0U,	// SMUSDX
    0U,	// SRSDA
    0U,	// SRSDA_UPD
    0U,	// SRSDB
    0U,	// SRSDB_UPD
    0U,	// SRSIA
    0U,	// SRSIA_UPD
    0U,	// SRSIB
    0U,	// SRSIB_UPD
    218112U,	// SSAT
    21504U,	// SSAT16
    0U,	// SSAX
    0U,	// SSUB16
    0U,	// SSUB8
    0U,	// STC2L_OFFSET
    2176U,	// STC2L_OPTION
    2304U,	// STC2L_POST
    0U,	// STC2L_PRE
    0U,	// STC2_OFFSET
    2176U,	// STC2_OPTION
    2304U,	// STC2_POST
    0U,	// STC2_PRE
    2454U,	// STCL_OFFSET
    4721174U,	// STCL_OPTION
    5245462U,	// STCL_POST
    2710U,	// STCL_PRE
    2454U,	// STC_OFFSET
    4721174U,	// STC_OPTION
    5245462U,	// STC_POST
    2710U,	// STC_PRE
    128U,	// STL
    128U,	// STLB
    11010048U,	// STLEX
    11010048U,	// STLEXB
    5248U,	// STLEXD
    11010048U,	// STLEXH
    128U,	// STLH
    18432U,	// STMDA
    532U,	// STMDA_UPD
    18432U,	// STMDB
    532U,	// STMDB_UPD
    18432U,	// STMIA
    532U,	// STMIA_UPD
    18432U,	// STMIB
    532U,	// STMIB_UPD
    5769728U,	// STRBT_POST_IMM
    5769728U,	// STRBT_POST_REG
    5769728U,	// STRB_POST_IMM
    5769728U,	// STRB_POST_REG
    2816U,	// STRB_PRE_IMM
    2944U,	// STRB_PRE_REG
    3072U,	// STRBi12
    3200U,	// STRBrs
    6291456U,	// STRD
    40371584U,	// STRD_POST
    7341440U,	// STRD_PRE
    11010048U,	// STREX
    11010048U,	// STREXB
    5248U,	// STREXD
    11010048U,	// STREXH
    3328U,	// STRH
    7866880U,	// STRHTi
    8391168U,	// STRHTr
    8915456U,	// STRH_POST
    3456U,	// STRH_PRE
    5769728U,	// STRT_POST_IMM
    5769728U,	// STRT_POST_REG
    5769728U,	// STR_POST_IMM
    5769728U,	// STR_POST_REG
    2816U,	// STR_PRE_IMM
    2944U,	// STR_PRE_REG
    3072U,	// STRi12
    3200U,	// STRrs
    1048576U,	// SUBri
    0U,	// SUBrr
    1572864U,	// SUBrsi
    0U,	// SUBrsr
    2U,	// SVC
    11010048U,	// SWP
    11010048U,	// SWPB
    268435456U,	// SXTAB
    268435456U,	// SXTAB16
    268435456U,	// SXTAH
    229376U,	// SXTB
    229376U,	// SXTB16
    229376U,	// SXTH
    1664U,	// TEQri
    16384U,	// TEQrr
    1792U,	// TEQrsi
    1024U,	// TEQrsr
    0U,	// TRAP
    0U,	// TRAPNaCl
    0U,	// TSB
    1664U,	// TSTri
    16384U,	// TSTrr
    1792U,	// TSTrsi
    1024U,	// TSTrsr
    0U,	// UADD16
    0U,	// UADD8
    0U,	// UASX
    33554432U,	// UBFX
    0U,	// UDF
    0U,	// UDIV
    0U,	// UHADD16
    0U,	// UHADD8
    0U,	// UHASX
    0U,	// UHSAX
    0U,	// UHSUB16
    0U,	// UHSUB8
    33554432U,	// UMAAL
    0U,	// UMLAL
    33554432U,	// UMULL
    0U,	// UQADD16
    0U,	// UQADD8
    0U,	// UQASX
    0U,	// UQSAX
    0U,	// UQSUB16
    0U,	// UQSUB8
    0U,	// USAD8
    33554432U,	// USADA8
    301989888U,	// USAT
    0U,	// USAT16
    0U,	// USAX
    0U,	// USUB16
    0U,	// USUB8
    268435456U,	// UXTAB
    268435456U,	// UXTAB16
    268435456U,	// UXTAH
    229376U,	// UXTB
    229376U,	// UXTB16
    229376U,	// UXTH
    3671424U,	// VABALsv2i64
    3671424U,	// VABALsv4i32
    3671424U,	// VABALsv8i16
    3671424U,	// VABALuv2i64
    3671424U,	// VABALuv4i32
    3671424U,	// VABALuv8i16
    3671424U,	// VABAsv16i8
    3671424U,	// VABAsv2i32
    3671424U,	// VABAsv4i16
    3671424U,	// VABAsv4i32
    3671424U,	// VABAsv8i16
    3671424U,	// VABAsv8i8
    3671424U,	// VABAuv16i8
    3671424U,	// VABAuv2i32
    3671424U,	// VABAuv4i16
    3671424U,	// VABAuv4i32
    3671424U,	// VABAuv8i16
    3671424U,	// VABAuv8i8
    0U,	// VABDLsv2i64
    0U,	// VABDLsv4i32
    0U,	// VABDLsv8i16
    0U,	// VABDLuv2i64
    0U,	// VABDLuv4i32
    0U,	// VABDLuv8i16
    0U,	// VABDfd
    0U,	// VABDfq
    0U,	// VABDhd
    0U,	// VABDhq
    0U,	// VABDsv16i8
    0U,	// VABDsv2i32
    0U,	// VABDsv4i16
    0U,	// VABDsv4i32
    0U,	// VABDsv8i16
    0U,	// VABDsv8i8
    0U,	// VABDuv16i8
    0U,	// VABDuv2i32
    0U,	// VABDuv4i16
    0U,	// VABDuv4i32
    0U,	// VABDuv8i16
    0U,	// VABDuv8i8
    528U,	// VABSD
    16384U,	// VABSH
    16384U,	// VABSS
    16384U,	// VABSfd
    16384U,	// VABSfq
    16384U,	// VABShd
    16384U,	// VABShq
    16384U,	// VABSv16i8
    16384U,	// VABSv2i32
    16384U,	// VABSv4i16
    16384U,	// VABSv4i32
    16384U,	// VABSv8i16
    16384U,	// VABSv8i8
    0U,	// VACGEfd
    0U,	// VACGEfq
    0U,	// VACGEhd
    0U,	// VACGEhq
    0U,	// VACGTfd
    0U,	// VACGTfq
    0U,	// VACGThd
    0U,	// VACGThq
    2720528U,	// VADDD
    0U,	// VADDH
    17792U,	// VADDHNv2i32
    0U,	// VADDHNv4i16
    0U,	// VADDHNv8i8
    0U,	// VADDLsv2i64
    0U,	// VADDLsv4i32
    0U,	// VADDLsv8i16
    0U,	// VADDLuv2i64
    0U,	// VADDLuv4i32
    0U,	// VADDLuv8i16
    0U,	// VADDS
    0U,	// VADDWsv2i64
    0U,	// VADDWsv4i32
    0U,	// VADDWsv8i16
    0U,	// VADDWuv2i64
    0U,	// VADDWuv4i32
    0U,	// VADDWuv8i16
    0U,	// VADDfd
    0U,	// VADDfq
    0U,	// VADDhd
    0U,	// VADDhq
    0U,	// VADDv16i8
    17792U,	// VADDv1i64
    0U,	// VADDv2i32
    17792U,	// VADDv2i64
    0U,	// VADDv4i16
    0U,	// VADDv4i32
    0U,	// VADDv8i16
    0U,	// VADDv8i8
    0U,	// VANDd
    0U,	// VANDq
    2U,	// VBF16MALBQ
    520U,	// VBF16MALBQI
    2U,	// VBF16MALTQ
    520U,	// VBF16MALTQI
    0U,	// VBICd
    4864U,	// VBICiv2i32
    4864U,	// VBICiv4i16
    4864U,	// VBICiv4i32
    4864U,	// VBICiv8i16
    0U,	// VBICq
    3671424U,	// VBIFd
    3671424U,	// VBIFq
    3671424U,	// VBITd
    3671424U,	// VBITq
    3671424U,	// VBSLd
    3671424U,	// VBSLq
    11535744U,	// VCADDv2f32
    11535744U,	// VCADDv4f16
    11535744U,	// VCADDv4f32
    11535744U,	// VCADDv8f16
    0U,	// VCEQfd
    0U,	// VCEQfq
    0U,	// VCEQhd
    0U,	// VCEQhq
    0U,	// VCEQv16i8
    0U,	// VCEQv2i32
    0U,	// VCEQv4i16
    0U,	// VCEQv4i32
    0U,	// VCEQv8i16
    0U,	// VCEQv8i8
    245760U,	// VCEQzv16i8
    245760U,	// VCEQzv2f32
    245760U,	// VCEQzv2i32
    245760U,	// VCEQzv4f16
    245760U,	// VCEQzv4f32
    245760U,	// VCEQzv4i16
    245760U,	// VCEQzv4i32
    245760U,	// VCEQzv8f16
    245760U,	// VCEQzv8i16
    245760U,	// VCEQzv8i8
    0U,	// VCGEfd
    0U,	// VCGEfq
    0U,	// VCGEhd
    0U,	// VCGEhq
    0U,	// VCGEsv16i8
    0U,	// VCGEsv2i32
    0U,	// VCGEsv4i16
    0U,	// VCGEsv4i32
    0U,	// VCGEsv8i16
    0U,	// VCGEsv8i8
    0U,	// VCGEuv16i8
    0U,	// VCGEuv2i32
    0U,	// VCGEuv4i16
    0U,	// VCGEuv4i32
    0U,	// VCGEuv8i16
    0U,	// VCGEuv8i8
    245760U,	// VCGEzv16i8
    245760U,	// VCGEzv2f32
    245760U,	// VCGEzv2i32
    245760U,	// VCGEzv4f16
    245760U,	// VCGEzv4f32
    245760U,	// VCGEzv4i16
    245760U,	// VCGEzv4i32
    245760U,	// VCGEzv8f16
    245760U,	// VCGEzv8i16
    245760U,	// VCGEzv8i8
    0U,	// VCGTfd
    0U,	// VCGTfq
    0U,	// VCGThd
    0U,	// VCGThq
    0U,	// VCGTsv16i8
    0U,	// VCGTsv2i32
    0U,	// VCGTsv4i16
    0U,	// VCGTsv4i32
    0U,	// VCGTsv8i16
    0U,	// VCGTsv8i8
    0U,	// VCGTuv16i8
    0U,	// VCGTuv2i32
    0U,	// VCGTuv4i16
    0U,	// VCGTuv4i32
    0U,	// VCGTuv8i16
    0U,	// VCGTuv8i8
    245760U,	// VCGTzv16i8
    245760U,	// VCGTzv2f32
    245760U,	// VCGTzv2i32
    245760U,	// VCGTzv4f16
    245760U,	// VCGTzv4f32
    245760U,	// VCGTzv4i16
    245760U,	// VCGTzv4i32
    245760U,	// VCGTzv8f16
    245760U,	// VCGTzv8i16
    245760U,	// VCGTzv8i8
    245760U,	// VCLEzv16i8
    245760U,	// VCLEzv2f32
    245760U,	// VCLEzv2i32
    245760U,	// VCLEzv4f16
    245760U,	// VCLEzv4f32
    245760U,	// VCLEzv4i16
    245760U,	// VCLEzv4i32
    245760U,	// VCLEzv8f16
    245760U,	// VCLEzv8i16
    245760U,	// VCLEzv8i8
    16384U,	// VCLSv16i8
    16384U,	// VCLSv2i32
    16384U,	// VCLSv4i16
    16384U,	// VCLSv4i32
    16384U,	// VCLSv8i16
    16384U,	// VCLSv8i8
    245760U,	// VCLTzv16i8
    245760U,	// VCLTzv2f32
    245760U,	// VCLTzv2i32
    245760U,	// VCLTzv4f16
    245760U,	// VCLTzv4f32
    245760U,	// VCLTzv4i16
    245760U,	// VCLTzv4i32
    245760U,	// VCLTzv8f16
    245760U,	// VCLTzv8i16
    245760U,	// VCLTzv8i8
    16384U,	// VCLZv16i8
    16384U,	// VCLZv2i32
    16384U,	// VCLZv4i16
    16384U,	// VCLZv4i32
    16384U,	// VCLZv8i16
    16384U,	// VCLZv8i8
    12059008U,	// VCMLAv2f32
    262528U,	// VCMLAv2f32_indexed
    12059008U,	// VCMLAv4f16
    262528U,	// VCMLAv4f16_indexed
    12059008U,	// VCMLAv4f32
    262528U,	// VCMLAv4f32_indexed
    12059008U,	// VCMLAv8f16
    262528U,	// VCMLAv8f16_indexed
    528U,	// VCMPD
    528U,	// VCMPED
    16384U,	// VCMPEH
    16384U,	// VCMPES
    0U,	// VCMPEZD
    34U,	// VCMPEZH
    34U,	// VCMPEZS
    16384U,	// VCMPH
    16384U,	// VCMPS
    0U,	// VCMPZD
    34U,	// VCMPZH
    34U,	// VCMPZS
    16384U,	// VCNTd
    16384U,	// VCNTq
    2U,	// VCVTANSDf
    2U,	// VCVTANSDh
    2U,	// VCVTANSQf
    2U,	// VCVTANSQh
    2U,	// VCVTANUDf
    2U,	// VCVTANUDh
    2U,	// VCVTANUQf
    2U,	// VCVTANUQh
    2U,	// VCVTASD
    2U,	// VCVTASH
    2U,	// VCVTASS
    2U,	// VCVTAUD
    2U,	// VCVTAUH
    2U,	// VCVTAUS
    0U,	// VCVTBDH
    0U,	// VCVTBHD
    0U,	// VCVTBHS
    2U,	// VCVTBSH
    0U,	// VCVTDS
    2U,	// VCVTMNSDf
    2U,	// VCVTMNSDh
    2U,	// VCVTMNSQf
    2U,	// VCVTMNSQh
    2U,	// VCVTMNUDf
    2U,	// VCVTMNUDh
    2U,	// VCVTMNUQf
    2U,	// VCVTMNUQh
    2U,	// VCVTMSD
    2U,	// VCVTMSH
    2U,	// VCVTMSS
    2U,	// VCVTMUD
    2U,	// VCVTMUH
    2U,	// VCVTMUS
    2U,	// VCVTNNSDf
    2U,	// VCVTNNSDh
    2U,	// VCVTNNSQf
    2U,	// VCVTNNSQh
    2U,	// VCVTNNUDf
    2U,	// VCVTNNUDh
    2U,	// VCVTNNUQf
    2U,	// VCVTNNUQh
    2U,	// VCVTNSD
    2U,	// VCVTNSH
    2U,	// VCVTNSS
    2U,	// VCVTNUD
    2U,	// VCVTNUH
    2U,	// VCVTNUS
    2U,	// VCVTPNSDf
    2U,	// VCVTPNSDh
    2U,	// VCVTPNSQf
    2U,	// VCVTPNSQh
    2U,	// VCVTPNUDf
    2U,	// VCVTPNUDh
    2U,	// VCVTPNUQf
    2U,	// VCVTPNUQh
    2U,	// VCVTPSD
    2U,	// VCVTPSH
    2U,	// VCVTPSS
    2U,	// VCVTPUD
    2U,	// VCVTPUH
    2U,	// VCVTPUS
    0U,	// VCVTSD
    0U,	// VCVTTDH
    0U,	// VCVTTHD
    0U,	// VCVTTHS
    2U,	// VCVTTSH
    2U,	// VCVTf2h
    0U,	// VCVTf2sd
    0U,	// VCVTf2sq
    0U,	// VCVTf2ud
    0U,	// VCVTf2uq
    536U,	// VCVTf2xsd
    536U,	// VCVTf2xsq
    536U,	// VCVTf2xud
    536U,	// VCVTf2xuq
    0U,	// VCVTh2f
    0U,	// VCVTh2sd
    0U,	// VCVTh2sq
    0U,	// VCVTh2ud
    0U,	// VCVTh2uq
    536U,	// VCVTh2xsd
    536U,	// VCVTh2xsq
    536U,	// VCVTh2xud
    536U,	// VCVTh2xuq
    0U,	// VCVTs2fd
    0U,	// VCVTs2fq
    0U,	// VCVTs2hd
    0U,	// VCVTs2hq
    0U,	// VCVTu2fd
    0U,	// VCVTu2fq
    0U,	// VCVTu2hd
    0U,	// VCVTu2hq
    536U,	// VCVTxs2fd
    536U,	// VCVTxs2fq
    536U,	// VCVTxs2hd
    536U,	// VCVTxs2hq
    536U,	// VCVTxu2fd
    536U,	// VCVTxu2fq
    536U,	// VCVTxu2hd
    536U,	// VCVTxu2hq
    2720528U,	// VDIVD
    0U,	// VDIVH
    0U,	// VDIVS
    16384U,	// VDUP16d
    16384U,	// VDUP16q
    16384U,	// VDUP32d
    16384U,	// VDUP32q
    16384U,	// VDUP8d
    16384U,	// VDUP8q
    147456U,	// VDUPLN16d
    147456U,	// VDUPLN16q
    147456U,	// VDUPLN32d
    147456U,	// VDUPLN32q
    147456U,	// VDUPLN8d
    147456U,	// VDUPLN8q
    0U,	// VEORd
    0U,	// VEORq
    33554432U,	// VEXTd16
    33554432U,	// VEXTd32
    33554432U,	// VEXTd8
    33554432U,	// VEXTq16
    33554432U,	// VEXTq32
    33554432U,	// VEXTq64
    33554432U,	// VEXTq8
    49944U,	// VFMAD
    3671424U,	// VFMAH
    17792U,	// VFMALD
    279936U,	// VFMALDI
    17792U,	// VFMALQ
    279936U,	// VFMALQI
    3671424U,	// VFMAS
    3671424U,	// VFMAfd
    3671424U,	// VFMAfq
    3671424U,	// VFMAhd
    3671424U,	// VFMAhq
    49944U,	// VFMSD
    3671424U,	// VFMSH
    17792U,	// VFMSLD
    279936U,	// VFMSLDI
    17792U,	// VFMSLQ
    279936U,	// VFMSLQI
    3671424U,	// VFMSS
    3671424U,	// VFMSfd
    3671424U,	// VFMSfq
    3671424U,	// VFMShd
    3671424U,	// VFMShq
    49944U,	// VFNMAD
    3671424U,	// VFNMAH
    3671424U,	// VFNMAS
    49944U,	// VFNMSD
    3671424U,	// VFNMSH
    3671424U,	// VFNMSS
    17792U,	// VFP_VMAXNMD
    17792U,	// VFP_VMAXNMH
    17792U,	// VFP_VMAXNMS
    17792U,	// VFP_VMINNMD
    17792U,	// VFP_VMINNMH
    17792U,	// VFP_VMINNMS
    147456U,	// VGETLNi32
    147456U,	// VGETLNs16
    147456U,	// VGETLNs8
    147456U,	// VGETLNu16
    147456U,	// VGETLNu8
    0U,	// VHADDsv16i8
    0U,	// VHADDsv2i32
    0U,	// VHADDsv4i16
    0U,	// VHADDsv4i32
    0U,	// VHADDsv8i16
    0U,	// VHADDsv8i8
    0U,	// VHADDuv16i8
    0U,	// VHADDuv2i32
    0U,	// VHADDuv4i16
    0U,	// VHADDuv4i32
    0U,	// VHADDuv8i16
    0U,	// VHADDuv8i8
    0U,	// VHSUBsv16i8
    0U,	// VHSUBsv2i32
    0U,	// VHSUBsv4i16
    0U,	// VHSUBsv4i32
    0U,	// VHSUBsv8i16
    0U,	// VHSUBsv8i8
    0U,	// VHSUBuv16i8
    0U,	// VHSUBuv2i32
    0U,	// VHSUBuv4i16
    0U,	// VHSUBuv4i32
    0U,	// VHSUBuv8i16
    0U,	// VHSUBuv8i8
    2U,	// VINSH
    0U,	// VJCVT
    518U,	// VLD1DUPd16
    676U,	// VLD1DUPd16wb_fixed
    2687780U,	// VLD1DUPd16wb_register
    518U,	// VLD1DUPd32
    676U,	// VLD1DUPd32wb_fixed
    2687780U,	// VLD1DUPd32wb_register
    518U,	// VLD1DUPd8
    676U,	// VLD1DUPd8wb_fixed
    2687780U,	// VLD1DUPd8wb_register
    518U,	// VLD1DUPq16
    676U,	// VLD1DUPq16wb_fixed
    2687780U,	// VLD1DUPq16wb_register
    518U,	// VLD1DUPq32
    676U,	// VLD1DUPq32wb_fixed
    2687780U,	// VLD1DUPq32wb_register
    518U,	// VLD1DUPq8
    676U,	// VLD1DUPq8wb_fixed
    2687780U,	// VLD1DUPq8wb_register
    12883238U,	// VLD1LNd16
    13407654U,	// VLD1LNd16_UPD
    12883238U,	// VLD1LNd32
    13407654U,	// VLD1LNd32_UPD
    12883238U,	// VLD1LNd8
    13407654U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    518U,	// VLD1d16
    518U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    676U,	// VLD1d16Qwb_fixed
    2687780U,	// VLD1d16Qwb_register
    518U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    676U,	// VLD1d16Twb_fixed
    2687780U,	// VLD1d16Twb_register
    676U,	// VLD1d16wb_fixed
    2687780U,	// VLD1d16wb_register
    518U,	// VLD1d32
    518U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    676U,	// VLD1d32Qwb_fixed
    2687780U,	// VLD1d32Qwb_register
    518U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    676U,	// VLD1d32Twb_fixed
    2687780U,	// VLD1d32Twb_register
    676U,	// VLD1d32wb_fixed
    2687780U,	// VLD1d32wb_register
    518U,	// VLD1d64
    518U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    676U,	// VLD1d64Qwb_fixed
    2687780U,	// VLD1d64Qwb_register
    518U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    676U,	// VLD1d64Twb_fixed
    2687780U,	// VLD1d64Twb_register
    676U,	// VLD1d64wb_fixed
    2687780U,	// VLD1d64wb_register
    518U,	// VLD1d8
    518U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    676U,	// VLD1d8Qwb_fixed
    2687780U,	// VLD1d8Qwb_register
    518U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    676U,	// VLD1d8Twb_fixed
    2687780U,	// VLD1d8Twb_register
    676U,	// VLD1d8wb_fixed
    2687780U,	// VLD1d8wb_register
    518U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    676U,	// VLD1q16wb_fixed
    2687780U,	// VLD1q16wb_register
    518U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    676U,	// VLD1q32wb_fixed
    2687780U,	// VLD1q32wb_register
    518U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    676U,	// VLD1q64wb_fixed
    2687780U,	// VLD1q64wb_register
    518U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    676U,	// VLD1q8wb_fixed
    2687780U,	// VLD1q8wb_register
    518U,	// VLD2DUPd16
    676U,	// VLD2DUPd16wb_fixed
    2687780U,	// VLD2DUPd16wb_register
    518U,	// VLD2DUPd16x2
    676U,	// VLD2DUPd16x2wb_fixed
    2687780U,	// VLD2DUPd16x2wb_register
    518U,	// VLD2DUPd32
    676U,	// VLD2DUPd32wb_fixed
    2687780U,	// VLD2DUPd32wb_register
    518U,	// VLD2DUPd32x2
    676U,	// VLD2DUPd32x2wb_fixed
    2687780U,	// VLD2DUPd32x2wb_register
    518U,	// VLD2DUPd8
    676U,	// VLD2DUPd8wb_fixed
    2687780U,	// VLD2DUPd8wb_register
    518U,	// VLD2DUPd8x2
    676U,	// VLD2DUPd8x2wb_fixed
    2687780U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    13948326U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    349869606U,	// VLD2LNd16_UPD
    13948326U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    349869606U,	// VLD2LNd32_UPD
    13948326U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    349869606U,	// VLD2LNd8_UPD
    13948326U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    349869606U,	// VLD2LNq16_UPD
    13948326U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    349869606U,	// VLD2LNq32_UPD
    518U,	// VLD2b16
    676U,	// VLD2b16wb_fixed
    2687780U,	// VLD2b16wb_register
    518U,	// VLD2b32
    676U,	// VLD2b32wb_fixed
    2687780U,	// VLD2b32wb_register
    518U,	// VLD2b8
    676U,	// VLD2b8wb_fixed
    2687780U,	// VLD2b8wb_register
    518U,	// VLD2d16
    676U,	// VLD2d16wb_fixed
    2687780U,	// VLD2d16wb_register
    518U,	// VLD2d32
    676U,	// VLD2d32wb_fixed
    2687780U,	// VLD2d32wb_register
    518U,	// VLD2d8
    676U,	// VLD2d8wb_fixed
    2687780U,	// VLD2d8wb_register
    518U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    676U,	// VLD2q16wb_fixed
    2687780U,	// VLD2q16wb_register
    518U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    676U,	// VLD2q32wb_fixed
    2687780U,	// VLD2q32wb_register
    518U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    676U,	// VLD2q8wb_fixed
    2687780U,	// VLD2q8wb_register
    333480U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    15029928U,	// VLD3DUPd16_UPD
    333480U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    15029928U,	// VLD3DUPd32_UPD
    333480U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    15029928U,	// VLD3DUPd8_UPD
    333480U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    15029928U,	// VLD3DUPq16_UPD
    333480U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    15029928U,	// VLD3DUPq32_UPD
    333480U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    15029928U,	// VLD3DUPq8_UPD
    383424038U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    15505190U,	// VLD3LNd16_UPD
    383424038U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    15505190U,	// VLD3LNd32_UPD
    383424038U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    15505190U,	// VLD3LNd8_UPD
    383424038U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    15505190U,	// VLD3LNq16_UPD
    383424038U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    15505190U,	// VLD3LNq32_UPD
    402653184U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    402653184U,	// VLD3d16_UPD
    402653184U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    402653184U,	// VLD3d32_UPD
    402653184U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    402653184U,	// VLD3d8_UPD
    402653184U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    402653184U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    402653184U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    402653184U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    402653184U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    402653184U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    2971560U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    366504U,	// VLD4DUPd16_UPD
    2971560U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    366504U,	// VLD4DUPd32_UPD
    2971560U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    366504U,	// VLD4DUPd8_UPD
    2971560U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    366504U,	// VLD4DUPq16_UPD
    2971560U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    366504U,	// VLD4DUPq32_UPD
    2971560U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    366504U,	// VLD4DUPq8_UPD
    440194854U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    6182U,	// VLD4LNd16_UPD
    440194854U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    6182U,	// VLD4LNd32_UPD
    440194854U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    6182U,	// VLD4LNd8_UPD
    440194854U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    6182U,	// VLD4LNq16_UPD
    440194854U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    6182U,	// VLD4LNq32_UPD
    33554432U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    33554432U,	// VLD4d16_UPD
    33554432U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    33554432U,	// VLD4d32_UPD
    33554432U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    33554432U,	// VLD4d8_UPD
    33554432U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    33554432U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    33554432U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    33554432U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    33554432U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    33554432U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    532U,	// VLDMDDB_UPD
    18432U,	// VLDMDIA
    532U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    532U,	// VLDMSDB_UPD
    18432U,	// VLDMSIA
    532U,	// VLDMSIA_UPD
    6272U,	// VLDRD
    6400U,	// VLDRH
    6272U,	// VLDRS
    0U,	// VLDR_FPCXTNS_off
    0U,	// VLDR_FPCXTNS_post
    0U,	// VLDR_FPCXTNS_pre
    0U,	// VLDR_FPCXTS_off
    0U,	// VLDR_FPCXTS_post
    0U,	// VLDR_FPCXTS_pre
    0U,	// VLDR_FPSCR_NZCVQC_off
    0U,	// VLDR_FPSCR_NZCVQC_post
    0U,	// VLDR_FPSCR_NZCVQC_pre
    0U,	// VLDR_FPSCR_off
    0U,	// VLDR_FPSCR_post
    0U,	// VLDR_FPSCR_pre
    0U,	// VLDR_P0_off
    42U,	// VLDR_P0_post
    0U,	// VLDR_P0_pre
    0U,	// VLDR_VPR_off
    0U,	// VLDR_VPR_post
    0U,	// VLDR_VPR_pre
    2U,	// VLLDM
    2U,	// VLSTM
    0U,	// VMAXfd
    0U,	// VMAXfq
    0U,	// VMAXhd
    0U,	// VMAXhq
    0U,	// VMAXsv16i8
    0U,	// VMAXsv2i32
    0U,	// VMAXsv4i16
    0U,	// VMAXsv4i32
    0U,	// VMAXsv8i16
    0U,	// VMAXsv8i8
    0U,	// VMAXuv16i8
    0U,	// VMAXuv2i32
    0U,	// VMAXuv4i16
    0U,	// VMAXuv4i32
    0U,	// VMAXuv8i16
    0U,	// VMAXuv8i8
    0U,	// VMINfd
    0U,	// VMINfq
    0U,	// VMINhd
    0U,	// VMINhq
    0U,	// VMINsv16i8
    0U,	// VMINsv2i32
    0U,	// VMINsv4i16
    0U,	// VMINsv4i32
    0U,	// VMINsv8i16
    0U,	// VMINsv8i8
    0U,	// VMINuv16i8
    0U,	// VMINuv2i32
    0U,	// VMINuv4i16
    0U,	// VMINuv4i32
    0U,	// VMINuv8i16
    0U,	// VMINuv8i8
    49944U,	// VMLAD
    3671424U,	// VMLAH
    473433472U,	// VMLALslsv2i32
    473433472U,	// VMLALslsv4i16
    473433472U,	// VMLALsluv2i32
    473433472U,	// VMLALsluv4i16
    3671424U,	// VMLALsv2i64
    3671424U,	// VMLALsv4i32
    3671424U,	// VMLALsv8i16
    3671424U,	// VMLALuv2i64
    3671424U,	// VMLALuv4i32
    3671424U,	// VMLALuv8i16
    3671424U,	// VMLAS
    3671424U,	// VMLAfd
    3671424U,	// VMLAfq
    3671424U,	// VMLAhd
    3671424U,	// VMLAhq
    473433472U,	// VMLAslfd
    473433472U,	// VMLAslfq
    473433472U,	// VMLAslhd
    473433472U,	// VMLAslhq
    473433472U,	// VMLAslv2i32
    473433472U,	// VMLAslv4i16
    473433472U,	// VMLAslv4i32
    473433472U,	// VMLAslv8i16
    3671424U,	// VMLAv16i8
    3671424U,	// VMLAv2i32
    3671424U,	// VMLAv4i16
    3671424U,	// VMLAv4i32
    3671424U,	// VMLAv8i16
    3671424U,	// VMLAv8i8
    49944U,	// VMLSD
    3671424U,	// VMLSH
    473433472U,	// VMLSLslsv2i32
    473433472U,	// VMLSLslsv4i16
    473433472U,	// VMLSLsluv2i32
    473433472U,	// VMLSLsluv4i16
    3671424U,	// VMLSLsv2i64
    3671424U,	// VMLSLsv4i32
    3671424U,	// VMLSLsv8i16
    3671424U,	// VMLSLuv2i64
    3671424U,	// VMLSLuv4i32
    3671424U,	// VMLSLuv8i16
    3671424U,	// VMLSS
    3671424U,	// VMLSfd
    3671424U,	// VMLSfq
    3671424U,	// VMLShd
    3671424U,	// VMLShq
    473433472U,	// VMLSslfd
    473433472U,	// VMLSslfq
    473433472U,	// VMLSslhd
    473433472U,	// VMLSslhq
    473433472U,	// VMLSslv2i32
    473433472U,	// VMLSslv4i16
    473433472U,	// VMLSslv4i32
    473433472U,	// VMLSslv8i16
    3671424U,	// VMLSv16i8
    3671424U,	// VMLSv2i32
    3671424U,	// VMLSv4i16
    3671424U,	// VMLSv4i32
    3671424U,	// VMLSv8i16
    3671424U,	// VMLSv8i8
    2U,	// VMMLA
    528U,	// VMOVD
    0U,	// VMOVDRR
    2U,	// VMOVH
    16384U,	// VMOVHR
    16384U,	// VMOVLsv2i64
    16384U,	// VMOVLsv4i32
    16384U,	// VMOVLsv8i16
    16384U,	// VMOVLuv2i64
    16384U,	// VMOVLuv4i32
    16384U,	// VMOVLuv8i16
    2U,	// VMOVNv2i32
    16384U,	// VMOVNv4i16
    16384U,	// VMOVNv8i8
    16384U,	// VMOVRH
    0U,	// VMOVRRD
    33554432U,	// VMOVRRS
    16384U,	// VMOVRS
    16384U,	// VMOVS
    16384U,	// VMOVSR
    33554432U,	// VMOVSRR
    4864U,	// VMOVv16i8
    0U,	// VMOVv1i64
    1920U,	// VMOVv2f32
    4864U,	// VMOVv2i32
    0U,	// VMOVv2i64
    1920U,	// VMOVv4f32
    4864U,	// VMOVv4i16
    4864U,	// VMOVv4i32
    4864U,	// VMOVv8i16
    4864U,	// VMOVv8i8
    44U,	// VMRS
    46U,	// VMRS_FPCXTNS
    48U,	// VMRS_FPCXTS
    50U,	// VMRS_FPEXC
    52U,	// VMRS_FPINST
    54U,	// VMRS_FPINST2
    56U,	// VMRS_FPSCR_NZCVQC
    58U,	// VMRS_FPSID
    60U,	// VMRS_MVFR0
    62U,	// VMRS_MVFR1
    64U,	// VMRS_MVFR2
    66U,	// VMRS_P0
    68U,	// VMRS_VPR
    2U,	// VMSR
    2U,	// VMSR_FPCXTNS
    2U,	// VMSR_FPCXTS
    0U,	// VMSR_FPEXC
    0U,	// VMSR_FPINST
    0U,	// VMSR_FPINST2
    2U,	// VMSR_FPSCR_NZCVQC
    0U,	// VMSR_FPSID
    2U,	// VMSR_P0
    2U,	// VMSR_VPR
    2720528U,	// VMULD
    0U,	// VMULH
    17792U,	// VMULLp64
    0U,	// VMULLp8
    167772160U,	// VMULLslsv2i32
    167772160U,	// VMULLslsv4i16
    167772160U,	// VMULLsluv2i32
    167772160U,	// VMULLsluv4i16
    0U,	// VMULLsv2i64
    0U,	// VMULLsv4i32
    0U,	// VMULLsv8i16
    0U,	// VMULLuv2i64
    0U,	// VMULLuv4i32
    0U,	// VMULLuv8i16
    0U,	// VMULS
    0U,	// VMULfd
    0U,	// VMULfq
    0U,	// VMULhd
    0U,	// VMULhq
    0U,	// VMULpd
    0U,	// VMULpq
    167772160U,	// VMULslfd
    167772160U,	// VMULslfq
    167772160U,	// VMULslhd
    167772160U,	// VMULslhq
    167772160U,	// VMULslv2i32
    167772160U,	// VMULslv4i16
    167772160U,	// VMULslv4i32
    167772160U,	// VMULslv8i16
    0U,	// VMULv16i8
    0U,	// VMULv2i32
    0U,	// VMULv4i16
    0U,	// VMULv4i32
    0U,	// VMULv8i16
    0U,	// VMULv8i8
    16384U,	// VMVNd
    16384U,	// VMVNq
    4864U,	// VMVNv2i32
    4864U,	// VMVNv4i16
    4864U,	// VMVNv4i32
    4864U,	// VMVNv8i16
    528U,	// VNEGD
    16384U,	// VNEGH
    16384U,	// VNEGS
    16384U,	// VNEGf32q
    16384U,	// VNEGfd
    16384U,	// VNEGhd
    16384U,	// VNEGhq
    16384U,	// VNEGs16d
    16384U,	// VNEGs16q
    16384U,	// VNEGs32d
    16384U,	// VNEGs32q
    16384U,	// VNEGs8d
    16384U,	// VNEGs8q
    49944U,	// VNMLAD
    3671424U,	// VNMLAH
    3671424U,	// VNMLAS
    49944U,	// VNMLSD
    3671424U,	// VNMLSH
    3671424U,	// VNMLSS
    2720528U,	// VNMULD
    0U,	// VNMULH
    0U,	// VNMULS
    0U,	// VORNd
    0U,	// VORNq
    0U,	// VORRd
    4864U,	// VORRiv2i32
    4864U,	// VORRiv4i16
    4864U,	// VORRiv4i32
    4864U,	// VORRiv8i16
    0U,	// VORRq
    17792U,	// VPADALsv16i8
    17792U,	// VPADALsv2i32
    17792U,	// VPADALsv4i16
    17792U,	// VPADALsv4i32
    17792U,	// VPADALsv8i16
    17792U,	// VPADALsv8i8
    17792U,	// VPADALuv16i8
    17792U,	// VPADALuv2i32
    17792U,	// VPADALuv4i16
    17792U,	// VPADALuv4i32
    17792U,	// VPADALuv8i16
    17792U,	// VPADALuv8i8
    16384U,	// VPADDLsv16i8
    16384U,	// VPADDLsv2i32
    16384U,	// VPADDLsv4i16
    16384U,	// VPADDLsv4i32
    16384U,	// VPADDLsv8i16
    16384U,	// VPADDLsv8i8
    16384U,	// VPADDLuv16i8
    16384U,	// VPADDLuv2i32
    16384U,	// VPADDLuv4i16
    16384U,	// VPADDLuv4i32
    16384U,	// VPADDLuv8i16
    16384U,	// VPADDLuv8i8
    0U,	// VPADDf
    0U,	// VPADDh
    0U,	// VPADDi16
    0U,	// VPADDi32
    0U,	// VPADDi8
    0U,	// VPMAXf
    0U,	// VPMAXh
    0U,	// VPMAXs16
    0U,	// VPMAXs32
    0U,	// VPMAXs8
    0U,	// VPMAXu16
    0U,	// VPMAXu32
    0U,	// VPMAXu8
    0U,	// VPMINf
    0U,	// VPMINh
    0U,	// VPMINs16
    0U,	// VPMINs32
    0U,	// VPMINs8
    0U,	// VPMINu16
    0U,	// VPMINu32
    0U,	// VPMINu8
    16384U,	// VQABSv16i8
    16384U,	// VQABSv2i32
    16384U,	// VQABSv4i16
    16384U,	// VQABSv4i32
    16384U,	// VQABSv8i16
    16384U,	// VQABSv8i8
    0U,	// VQADDsv16i8
    17792U,	// VQADDsv1i64
    0U,	// VQADDsv2i32
    17792U,	// VQADDsv2i64
    0U,	// VQADDsv4i16
    0U,	// VQADDsv4i32
    0U,	// VQADDsv8i16
    0U,	// VQADDsv8i8
    0U,	// VQADDuv16i8
    0U,	// VQADDuv1i64
    0U,	// VQADDuv2i32
    0U,	// VQADDuv2i64
    0U,	// VQADDuv4i16
    0U,	// VQADDuv4i32
    0U,	// VQADDuv8i16
    0U,	// VQADDuv8i8
    473433472U,	// VQDMLALslv2i32
    473433472U,	// VQDMLALslv4i16
    3671424U,	// VQDMLALv2i64
    3671424U,	// VQDMLALv4i32
    473433472U,	// VQDMLSLslv2i32
    473433472U,	// VQDMLSLslv4i16
    3671424U,	// VQDMLSLv2i64
    3671424U,	// VQDMLSLv4i32
    167772160U,	// VQDMULHslv2i32
    167772160U,	// VQDMULHslv4i16
    167772160U,	// VQDMULHslv4i32
    167772160U,	// VQDMULHslv8i16
    0U,	// VQDMULHv2i32
    0U,	// VQDMULHv4i16
    0U,	// VQDMULHv4i32
    0U,	// VQDMULHv8i16
    167772160U,	// VQDMULLslv2i32
    167772160U,	// VQDMULLslv4i16
    0U,	// VQDMULLv2i64
    0U,	// VQDMULLv4i32
    2U,	// VQMOVNsuv2i32
    16384U,	// VQMOVNsuv4i16
    16384U,	// VQMOVNsuv8i8
    2U,	// VQMOVNsv2i32
    16384U,	// VQMOVNsv4i16
    16384U,	// VQMOVNsv8i8
    16384U,	// VQMOVNuv2i32
    16384U,	// VQMOVNuv4i16
    16384U,	// VQMOVNuv8i8
    16384U,	// VQNEGv16i8
    16384U,	// VQNEGv2i32
    16384U,	// VQNEGv4i16
    16384U,	// VQNEGv4i32
    16384U,	// VQNEGv8i16
    16384U,	// VQNEGv8i8
    473433472U,	// VQRDMLAHslv2i32
    473433472U,	// VQRDMLAHslv4i16
    473433472U,	// VQRDMLAHslv4i32
    473433472U,	// VQRDMLAHslv8i16
    3671424U,	// VQRDMLAHv2i32
    3671424U,	// VQRDMLAHv4i16
    3671424U,	// VQRDMLAHv4i32
    3671424U,	// VQRDMLAHv8i16
    473433472U,	// VQRDMLSHslv2i32
    473433472U,	// VQRDMLSHslv4i16
    473433472U,	// VQRDMLSHslv4i32
    473433472U,	// VQRDMLSHslv8i16
    3671424U,	// VQRDMLSHv2i32
    3671424U,	// VQRDMLSHv4i16
    3671424U,	// VQRDMLSHv4i32
    3671424U,	// VQRDMLSHv8i16
    167772160U,	// VQRDMULHslv2i32
    167772160U,	// VQRDMULHslv4i16
    167772160U,	// VQRDMULHslv4i32
    167772160U,	// VQRDMULHslv8i16
    0U,	// VQRDMULHv2i32
    0U,	// VQRDMULHv4i16
    0U,	// VQRDMULHv4i32
    0U,	// VQRDMULHv8i16
    0U,	// VQRSHLsv16i8
    17792U,	// VQRSHLsv1i64
    0U,	// VQRSHLsv2i32
    17792U,	// VQRSHLsv2i64
    0U,	// VQRSHLsv4i16
    0U,	// VQRSHLsv4i32
    0U,	// VQRSHLsv8i16
    0U,	// VQRSHLsv8i8
    0U,	// VQRSHLuv16i8
    0U,	// VQRSHLuv1i64
    0U,	// VQRSHLuv2i32
    0U,	// VQRSHLuv2i64
    0U,	// VQRSHLuv4i16
    0U,	// VQRSHLuv4i32
    0U,	// VQRSHLuv8i16
    0U,	// VQRSHLuv8i8
    17792U,	// VQRSHRNsv2i32
    0U,	// VQRSHRNsv4i16
    0U,	// VQRSHRNsv8i8
    0U,	// VQRSHRNuv2i32
    0U,	// VQRSHRNuv4i16
    0U,	// VQRSHRNuv8i8
    17792U,	// VQRSHRUNv2i32
    0U,	// VQRSHRUNv4i16
    0U,	// VQRSHRUNv8i8
    0U,	// VQSHLsiv16i8
    17792U,	// VQSHLsiv1i64
    0U,	// VQSHLsiv2i32
    17792U,	// VQSHLsiv2i64
    0U,	// VQSHLsiv4i16
    0U,	// VQSHLsiv4i32
    0U,	// VQSHLsiv8i16
    0U,	// VQSHLsiv8i8
    0U,	// VQSHLsuv16i8
    17792U,	// VQSHLsuv1i64
    0U,	// VQSHLsuv2i32
    17792U,	// VQSHLsuv2i64
    0U,	// VQSHLsuv4i16
    0U,	// VQSHLsuv4i32
    0U,	// VQSHLsuv8i16
    0U,	// VQSHLsuv8i8
    0U,	// VQSHLsv16i8
    17792U,	// VQSHLsv1i64
    0U,	// VQSHLsv2i32
    17792U,	// VQSHLsv2i64
    0U,	// VQSHLsv4i16
    0U,	// VQSHLsv4i32
    0U,	// VQSHLsv8i16
    0U,	// VQSHLsv8i8
    0U,	// VQSHLuiv16i8
    0U,	// VQSHLuiv1i64
    0U,	// VQSHLuiv2i32
    0U,	// VQSHLuiv2i64
    0U,	// VQSHLuiv4i16
    0U,	// VQSHLuiv4i32
    0U,	// VQSHLuiv8i16
    0U,	// VQSHLuiv8i8
    0U,	// VQSHLuv16i8
    0U,	// VQSHLuv1i64
    0U,	// VQSHLuv2i32
    0U,	// VQSHLuv2i64
    0U,	// VQSHLuv4i16
    0U,	// VQSHLuv4i32
    0U,	// VQSHLuv8i16
    0U,	// VQSHLuv8i8
    17792U,	// VQSHRNsv2i32
    0U,	// VQSHRNsv4i16
    0U,	// VQSHRNsv8i8
    0U,	// VQSHRNuv2i32
    0U,	// VQSHRNuv4i16
    0U,	// VQSHRNuv8i8
    17792U,	// VQSHRUNv2i32
    0U,	// VQSHRUNv4i16
    0U,	// VQSHRUNv8i8
    0U,	// VQSUBsv16i8
    17792U,	// VQSUBsv1i64
    0U,	// VQSUBsv2i32
    17792U,	// VQSUBsv2i64
    0U,	// VQSUBsv4i16
    0U,	// VQSUBsv4i32
    0U,	// VQSUBsv8i16
    0U,	// VQSUBsv8i8
    0U,	// VQSUBuv16i8
    0U,	// VQSUBuv1i64
    0U,	// VQSUBuv2i32
    0U,	// VQSUBuv2i64
    0U,	// VQSUBuv4i16
    0U,	// VQSUBuv4i32
    0U,	// VQSUBuv8i16
    0U,	// VQSUBuv8i8
    17792U,	// VRADDHNv2i32
    0U,	// VRADDHNv4i16
    0U,	// VRADDHNv8i8
    16384U,	// VRECPEd
    16384U,	// VRECPEfd
    16384U,	// VRECPEfq
    16384U,	// VRECPEhd
    16384U,	// VRECPEhq
    16384U,	// VRECPEq
    0U,	// VRECPSfd
    0U,	// VRECPSfq
    0U,	// VRECPShd
    0U,	// VRECPShq
    16384U,	// VREV16d8
    16384U,	// VREV16q8
    16384U,	// VREV32d16
    16384U,	// VREV32d8
    16384U,	// VREV32q16
    16384U,	// VREV32q8
    16384U,	// VREV64d16
    16384U,	// VREV64d32
    16384U,	// VREV64d8
    16384U,	// VREV64q16
    16384U,	// VREV64q32
    16384U,	// VREV64q8
    0U,	// VRHADDsv16i8
    0U,	// VRHADDsv2i32
    0U,	// VRHADDsv4i16
    0U,	// VRHADDsv4i32
    0U,	// VRHADDsv8i16
    0U,	// VRHADDsv8i8
    0U,	// VRHADDuv16i8
    0U,	// VRHADDuv2i32
    0U,	// VRHADDuv4i16
    0U,	// VRHADDuv4i32
    0U,	// VRHADDuv8i16
    0U,	// VRHADDuv8i8
    2U,	// VRINTAD
    2U,	// VRINTAH
    2U,	// VRINTANDf
    2U,	// VRINTANDh
    2U,	// VRINTANQf
    2U,	// VRINTANQh
    2U,	// VRINTAS
    2U,	// VRINTMD
    2U,	// VRINTMH
    2U,	// VRINTMNDf
    2U,	// VRINTMNDh
    2U,	// VRINTMNQf
    2U,	// VRINTMNQh
    2U,	// VRINTMS
    2U,	// VRINTND
    2U,	// VRINTNH
    2U,	// VRINTNNDf
    2U,	// VRINTNNDh
    2U,	// VRINTNNQf
    2U,	// VRINTNNQh
    2U,	// VRINTNS
    2U,	// VRINTPD
    2U,	// VRINTPH
    2U,	// VRINTPNDf
    2U,	// VRINTPNDh
    2U,	// VRINTPNQf
    2U,	// VRINTPNQh
    2U,	// VRINTPS
    528U,	// VRINTRD
    16384U,	// VRINTRH
    16384U,	// VRINTRS
    528U,	// VRINTXD
    16384U,	// VRINTXH
    2U,	// VRINTXNDf
    2U,	// VRINTXNDh
    2U,	// VRINTXNQf
    2U,	// VRINTXNQh
    16384U,	// VRINTXS
    528U,	// VRINTZD
    16384U,	// VRINTZH
    2U,	// VRINTZNDf
    2U,	// VRINTZNDh
    2U,	// VRINTZNQf
    2U,	// VRINTZNQh
    16384U,	// VRINTZS
    0U,	// VRSHLsv16i8
    17792U,	// VRSHLsv1i64
    0U,	// VRSHLsv2i32
    17792U,	// VRSHLsv2i64
    0U,	// VRSHLsv4i16
    0U,	// VRSHLsv4i32
    0U,	// VRSHLsv8i16
    0U,	// VRSHLsv8i8
    0U,	// VRSHLuv16i8
    0U,	// VRSHLuv1i64
    0U,	// VRSHLuv2i32
    0U,	// VRSHLuv2i64
    0U,	// VRSHLuv4i16
    0U,	// VRSHLuv4i32
    0U,	// VRSHLuv8i16
    0U,	// VRSHLuv8i8
    17792U,	// VRSHRNv2i32
    0U,	// VRSHRNv4i16
    0U,	// VRSHRNv8i8
    0U,	// VRSHRsv16i8
    17792U,	// VRSHRsv1i64
    0U,	// VRSHRsv2i32
    17792U,	// VRSHRsv2i64
    0U,	// VRSHRsv4i16
    0U,	// VRSHRsv4i32
    0U,	// VRSHRsv8i16
    0U,	// VRSHRsv8i8
    0U,	// VRSHRuv16i8
    0U,	// VRSHRuv1i64
    0U,	// VRSHRuv2i32
    0U,	// VRSHRuv2i64
    0U,	// VRSHRuv4i16
    0U,	// VRSHRuv4i32
    0U,	// VRSHRuv8i16
    0U,	// VRSHRuv8i8
    16384U,	// VRSQRTEd
    16384U,	// VRSQRTEfd
    16384U,	// VRSQRTEfq
    16384U,	// VRSQRTEhd
    16384U,	// VRSQRTEhq
    16384U,	// VRSQRTEq
    0U,	// VRSQRTSfd
    0U,	// VRSQRTSfq
    0U,	// VRSQRTShd
    0U,	// VRSQRTShq
    3671424U,	// VRSRAsv16i8
    16768U,	// VRSRAsv1i64
    3671424U,	// VRSRAsv2i32
    16768U,	// VRSRAsv2i64
    3671424U,	// VRSRAsv4i16
    3671424U,	// VRSRAsv4i32
    3671424U,	// VRSRAsv8i16
    3671424U,	// VRSRAsv8i8
    3671424U,	// VRSRAuv16i8
    3671424U,	// VRSRAuv1i64
    3671424U,	// VRSRAuv2i32
    3671424U,	// VRSRAuv2i64
    3671424U,	// VRSRAuv4i16
    3671424U,	// VRSRAuv4i32
    3671424U,	// VRSRAuv8i16
    3671424U,	// VRSRAuv8i8
    17792U,	// VRSUBHNv2i32
    0U,	// VRSUBHNv4i16
    0U,	// VRSUBHNv8i8
    0U,	// VSCCLRMD
    0U,	// VSCCLRMS
    2U,	// VSDOTD
    520U,	// VSDOTDI
    2U,	// VSDOTQ
    520U,	// VSDOTQI
    17792U,	// VSELEQD
    17792U,	// VSELEQH
    17792U,	// VSELEQS
    17792U,	// VSELGED
    17792U,	// VSELGEH
    17792U,	// VSELGES
    17792U,	// VSELGTD
    17792U,	// VSELGTH
    17792U,	// VSELGTS
    17792U,	// VSELVSD
    17792U,	// VSELVSH
    17792U,	// VSELVSS
    32U,	// VSETLNi16
    32U,	// VSETLNi32
    32U,	// VSETLNi8
    0U,	// VSHLLi16
    0U,	// VSHLLi32
    0U,	// VSHLLi8
    0U,	// VSHLLsv2i64
    0U,	// VSHLLsv4i32
    0U,	// VSHLLsv8i16
    0U,	// VSHLLuv2i64
    0U,	// VSHLLuv4i32
    0U,	// VSHLLuv8i16
    0U,	// VSHLiv16i8
    17792U,	// VSHLiv1i64
    0U,	// VSHLiv2i32
    17792U,	// VSHLiv2i64
    0U,	// VSHLiv4i16
    0U,	// VSHLiv4i32
    0U,	// VSHLiv8i16
    0U,	// VSHLiv8i8
    0U,	// VSHLsv16i8
    17792U,	// VSHLsv1i64
    0U,	// VSHLsv2i32
    17792U,	// VSHLsv2i64
    0U,	// VSHLsv4i16
    0U,	// VSHLsv4i32
    0U,	// VSHLsv8i16
    0U,	// VSHLsv8i8
    0U,	// VSHLuv16i8
    0U,	// VSHLuv1i64
    0U,	// VSHLuv2i32
    0U,	// VSHLuv2i64
    0U,	// VSHLuv4i16
    0U,	// VSHLuv4i32
    0U,	// VSHLuv8i16
    0U,	// VSHLuv8i8
    17792U,	// VSHRNv2i32
    0U,	// VSHRNv4i16
    0U,	// VSHRNv8i8
    0U,	// VSHRsv16i8
    17792U,	// VSHRsv1i64
    0U,	// VSHRsv2i32
    17792U,	// VSHRsv2i64
    0U,	// VSHRsv4i16
    0U,	// VSHRsv4i32
    0U,	// VSHRsv8i16
    0U,	// VSHRsv8i8
    0U,	// VSHRuv16i8
    0U,	// VSHRuv1i64
    0U,	// VSHRuv2i32
    0U,	// VSHRuv2i64
    0U,	// VSHRuv4i16
    0U,	// VSHRuv4i32
    0U,	// VSHRuv8i16
    0U,	// VSHRuv8i8
    0U,	// VSHTOD
    70U,	// VSHTOH
    0U,	// VSHTOS
    0U,	// VSITOD
    0U,	// VSITOH
    0U,	// VSITOS
    3671424U,	// VSLIv16i8
    3671424U,	// VSLIv1i64
    3671424U,	// VSLIv2i32
    3671424U,	// VSLIv2i64
    3671424U,	// VSLIv4i16
    3671424U,	// VSLIv4i32
    3671424U,	// VSLIv8i16
    3671424U,	// VSLIv8i8
    72U,	// VSLTOD
    72U,	// VSLTOH
    72U,	// VSLTOS
    2U,	// VSMMLA
    528U,	// VSQRTD
    16384U,	// VSQRTH
    16384U,	// VSQRTS
    3671424U,	// VSRAsv16i8
    16768U,	// VSRAsv1i64
    3671424U,	// VSRAsv2i32
    16768U,	// VSRAsv2i64
    3671424U,	// VSRAsv4i16
    3671424U,	// VSRAsv4i32
    3671424U,	// VSRAsv8i16
    3671424U,	// VSRAsv8i8
    3671424U,	// VSRAuv16i8
    3671424U,	// VSRAuv1i64
    3671424U,	// VSRAuv2i32
    3671424U,	// VSRAuv2i64
    3671424U,	// VSRAuv4i16
    3671424U,	// VSRAuv4i32
    3671424U,	// VSRAuv8i16
    3671424U,	// VSRAuv8i8
    3671424U,	// VSRIv16i8
    3671424U,	// VSRIv1i64
    3671424U,	// VSRIv2i32
    3671424U,	// VSRIv2i64
    3671424U,	// VSRIv4i16
    3671424U,	// VSRIv4i32
    3671424U,	// VSRIv8i16
    3671424U,	// VSRIv8i8
    6566U,	// VST1LNd16
    516200998U,	// VST1LNd16_UPD
    6566U,	// VST1LNd32
    516200998U,	// VST1LNd32_UPD
    6566U,	// VST1LNd8
    516200998U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    0U,	// VST1d16
    0U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    0U,	// VST1d16Qwb_fixed
    0U,	// VST1d16Qwb_register
    0U,	// VST1d16T
    0U,	// VST1d16TPseudo
    0U,	// VST1d16Twb_fixed
    0U,	// VST1d16Twb_register
    0U,	// VST1d16wb_fixed
    0U,	// VST1d16wb_register
    0U,	// VST1d32
    0U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    0U,	// VST1d32Qwb_fixed
    0U,	// VST1d32Qwb_register
    0U,	// VST1d32T
    0U,	// VST1d32TPseudo
    0U,	// VST1d32Twb_fixed
    0U,	// VST1d32Twb_register
    0U,	// VST1d32wb_fixed
    0U,	// VST1d32wb_register
    0U,	// VST1d64
    0U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    0U,	// VST1d64Qwb_fixed
    0U,	// VST1d64Qwb_register
    0U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    0U,	// VST1d64Twb_fixed
    0U,	// VST1d64Twb_register
    0U,	// VST1d64wb_fixed
    0U,	// VST1d64wb_register
    0U,	// VST1d8
    0U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    0U,	// VST1d8Qwb_fixed
    0U,	// VST1d8Qwb_register
    0U,	// VST1d8T
    0U,	// VST1d8TPseudo
    0U,	// VST1d8Twb_fixed
    0U,	// VST1d8Twb_register
    0U,	// VST1d8wb_fixed
    0U,	// VST1d8wb_register
    0U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    0U,	// VST1q16wb_fixed
    0U,	// VST1q16wb_register
    0U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    0U,	// VST1q32wb_fixed
    0U,	// VST1q32wb_register
    0U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    0U,	// VST1q64wb_fixed
    0U,	// VST1q64wb_register
    0U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    0U,	// VST1q8wb_fixed
    0U,	// VST1q8wb_register
    440194342U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    440718758U,	// VST2LNd16_UPD
    440194342U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    440718758U,	// VST2LNd32_UPD
    440194342U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    440718758U,	// VST2LNd8_UPD
    440194342U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    440718758U,	// VST2LNq16_UPD
    440194342U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    440718758U,	// VST2LNq32_UPD
    0U,	// VST2b16
    0U,	// VST2b16wb_fixed
    0U,	// VST2b16wb_register
    0U,	// VST2b32
    0U,	// VST2b32wb_fixed
    0U,	// VST2b32wb_register
    0U,	// VST2b8
    0U,	// VST2b8wb_fixed
    0U,	// VST2b8wb_register
    0U,	// VST2d16
    0U,	// VST2d16wb_fixed
    0U,	// VST2d16wb_register
    0U,	// VST2d32
    0U,	// VST2d32wb_fixed
    0U,	// VST2d32wb_register
    0U,	// VST2d8
    0U,	// VST2d8wb_fixed
    0U,	// VST2d8wb_register
    0U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    0U,	// VST2q16wb_fixed
    0U,	// VST2q16wb_register
    0U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    0U,	// VST2q32wb_fixed
    0U,	// VST2q32wb_register
    0U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    0U,	// VST2q8wb_fixed
    0U,	// VST2q8wb_register
    440195622U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    6822U,	// VST3LNd16_UPD
    440195622U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    6822U,	// VST3LNd32_UPD
    440195622U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    6822U,	// VST3LNd8_UPD
    440195622U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    6822U,	// VST3LNq16_UPD
    440195622U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    6822U,	// VST3LNq32_UPD
    403177856U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    383744U,	// VST3d16_UPD
    403177856U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    383744U,	// VST3d32_UPD
    403177856U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    383744U,	// VST3d8_UPD
    403177856U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    383744U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    403177856U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    383744U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    403177856U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    383744U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    440194470U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    398886U,	// VST4LNd16_UPD
    440194470U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    398886U,	// VST4LNd32_UPD
    440194470U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    398886U,	// VST4LNd8_UPD
    440194470U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    398886U,	// VST4LNq16_UPD
    440194470U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    398886U,	// VST4LNq32_UPD
    34079104U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    15735552U,	// VST4d16_UPD
    34079104U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    15735552U,	// VST4d32_UPD
    34079104U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    15735552U,	// VST4d8_UPD
    34079104U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    15735552U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    34079104U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    15735552U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    34079104U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    15735552U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    532U,	// VSTMDDB_UPD
    18432U,	// VSTMDIA
    532U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    532U,	// VSTMSDB_UPD
    18432U,	// VSTMSIA
    532U,	// VSTMSIA_UPD
    6272U,	// VSTRD
    6400U,	// VSTRH
    6272U,	// VSTRS
    0U,	// VSTR_FPCXTNS_off
    0U,	// VSTR_FPCXTNS_post
    0U,	// VSTR_FPCXTNS_pre
    0U,	// VSTR_FPCXTS_off
    0U,	// VSTR_FPCXTS_post
    0U,	// VSTR_FPCXTS_pre
    0U,	// VSTR_FPSCR_NZCVQC_off
    0U,	// VSTR_FPSCR_NZCVQC_post
    0U,	// VSTR_FPSCR_NZCVQC_pre
    0U,	// VSTR_FPSCR_off
    0U,	// VSTR_FPSCR_post
    0U,	// VSTR_FPSCR_pre
    0U,	// VSTR_P0_off
    42U,	// VSTR_P0_post
    0U,	// VSTR_P0_pre
    0U,	// VSTR_VPR_off
    0U,	// VSTR_VPR_post
    0U,	// VSTR_VPR_pre
    2720528U,	// VSUBD
    0U,	// VSUBH
    17792U,	// VSUBHNv2i32
    0U,	// VSUBHNv4i16
    0U,	// VSUBHNv8i8
    0U,	// VSUBLsv2i64
    0U,	// VSUBLsv4i32
    0U,	// VSUBLsv8i16
    0U,	// VSUBLuv2i64
    0U,	// VSUBLuv4i32
    0U,	// VSUBLuv8i16
    0U,	// VSUBS
    0U,	// VSUBWsv2i64
    0U,	// VSUBWsv4i32
    0U,	// VSUBWsv8i16
    0U,	// VSUBWuv2i64
    0U,	// VSUBWuv4i32
    0U,	// VSUBWuv8i16
    0U,	// VSUBfd
    0U,	// VSUBfq
    0U,	// VSUBhd
    0U,	// VSUBhq
    0U,	// VSUBv16i8
    17792U,	// VSUBv1i64
    0U,	// VSUBv2i32
    17792U,	// VSUBv2i64
    0U,	// VSUBv4i16
    0U,	// VSUBv4i32
    0U,	// VSUBv8i16
    0U,	// VSUBv8i8
    520U,	// VSUDOTDI
    520U,	// VSUDOTQI
    16384U,	// VSWPd
    16384U,	// VSWPq
    7040U,	// VTBL1
    7168U,	// VTBL2
    7296U,	// VTBL3
    0U,	// VTBL3Pseudo
    7424U,	// VTBL4
    0U,	// VTBL4Pseudo
    7552U,	// VTBX1
    7680U,	// VTBX2
    7808U,	// VTBX3
    0U,	// VTBX3Pseudo
    7936U,	// VTBX4
    0U,	// VTBX4Pseudo
    0U,	// VTOSHD
    70U,	// VTOSHH
    0U,	// VTOSHS
    0U,	// VTOSIRD
    0U,	// VTOSIRH
    0U,	// VTOSIRS
    0U,	// VTOSIZD
    0U,	// VTOSIZH
    0U,	// VTOSIZS
    72U,	// VTOSLD
    72U,	// VTOSLH
    72U,	// VTOSLS
    0U,	// VTOUHD
    70U,	// VTOUHH
    0U,	// VTOUHS
    0U,	// VTOUIRD
    0U,	// VTOUIRH
    0U,	// VTOUIRS
    0U,	// VTOUIZD
    0U,	// VTOUIZH
    0U,	// VTOUIZS
    72U,	// VTOULD
    72U,	// VTOULH
    72U,	// VTOULS
    16384U,	// VTRNd16
    16384U,	// VTRNd32
    16384U,	// VTRNd8
    16384U,	// VTRNq16
    16384U,	// VTRNq32
    16384U,	// VTRNq8
    0U,	// VTSTv16i8
    0U,	// VTSTv2i32
    0U,	// VTSTv4i16
    0U,	// VTSTv4i32
    0U,	// VTSTv8i16
    0U,	// VTSTv8i8
    2U,	// VUDOTD
    520U,	// VUDOTDI
    2U,	// VUDOTQ
    520U,	// VUDOTQI
    0U,	// VUHTOD
    70U,	// VUHTOH
    0U,	// VUHTOS
    0U,	// VUITOD
    0U,	// VUITOH
    0U,	// VUITOS
    72U,	// VULTOD
    72U,	// VULTOH
    72U,	// VULTOS
    2U,	// VUMMLA
    2U,	// VUSDOTD
    520U,	// VUSDOTDI
    2U,	// VUSDOTQ
    520U,	// VUSDOTQI
    2U,	// VUSMMLA
    16384U,	// VUZPd16
    16384U,	// VUZPd8
    16384U,	// VUZPq16
    16384U,	// VUZPq32
    16384U,	// VUZPq8
    16384U,	// VZIPd16
    16384U,	// VZIPd8
    16384U,	// VZIPq16
    16384U,	// VZIPq32
    16384U,	// VZIPq8
    411648U,	// sysLDMDA
    8084U,	// sysLDMDA_UPD
    411648U,	// sysLDMDB
    8084U,	// sysLDMDB_UPD
    411648U,	// sysLDMIA
    8084U,	// sysLDMIA_UPD
    411648U,	// sysLDMIB
    8084U,	// sysLDMIB_UPD
    411648U,	// sysSTMDA
    8084U,	// sysSTMDA_UPD
    411648U,	// sysSTMDB
    8084U,	// sysSTMDB_UPD
    411648U,	// sysSTMIA
    8084U,	// sysSTMIA_UPD
    411648U,	// sysSTMIB
    8084U,	// sysSTMIB_UPD
    0U,	// t2ADCri
    0U,	// t2ADCrr
    16252928U,	// t2ADCrs
    0U,	// t2ADDri
    0U,	// t2ADDri12
    0U,	// t2ADDrr
    16252928U,	// t2ADDrs
    0U,	// t2ADDspImm
    0U,	// t2ADDspImm12
    1152U,	// t2ADR
    0U,	// t2ANDri
    0U,	// t2ANDrr
    16252928U,	// t2ANDrs
    16777216U,	// t2ASRri
    0U,	// t2ASRrr
    2U,	// t2B
    1280U,	// t2BFC
    2098560U,	// t2BFI
    8192U,	// t2BFLi
    16384U,	// t2BFLr
    8192U,	// t2BFi
    17306496U,	// t2BFic
    16384U,	// t2BFr
    0U,	// t2BICri
    0U,	// t2BICrr
    16252928U,	// t2BICrs
    2U,	// t2BXJ
    2U,	// t2Bcc
    82704U,	// t2CDP
    82704U,	// t2CDP2
    0U,	// t2CLREX
    0U,	// t2CLRM
    16384U,	// t2CLZ
    16384U,	// t2CMNri
    16384U,	// t2CMNzrr
    896U,	// t2CMNzrs
    16384U,	// t2CMPri
    16384U,	// t2CMPrr
    896U,	// t2CMPrs
    0U,	// t2CPS1p
    2U,	// t2CPS2p
    17792U,	// t2CPS3p
    17792U,	// t2CRC32B
    17792U,	// t2CRC32CB
    17792U,	// t2CRC32CH
    17792U,	// t2CRC32CW
    17792U,	// t2CRC32H
    17792U,	// t2CRC32W
    17302912U,	// t2CSEL
    17302912U,	// t2CSINC
    17302912U,	// t2CSINV
    17302912U,	// t2CSNEG
    2U,	// t2DBG
    0U,	// t2DCPS1
    0U,	// t2DCPS2
    0U,	// t2DCPS3
    2U,	// t2DLS
    0U,	// t2DMB
    0U,	// t2DSB
    0U,	// t2EORri
    0U,	// t2EORrr
    16252928U,	// t2EORrs
    2U,	// t2HINT
    0U,	// t2HVC
    0U,	// t2ISB
    0U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    128U,	// t2LDA
    128U,	// t2LDAB
    128U,	// t2LDAEX
    128U,	// t2LDAEXB
    11010048U,	// t2LDAEXD
    128U,	// t2LDAEXH
    128U,	// t2LDAH
    2454U,	// t2LDC2L_OFFSET
    4721174U,	// t2LDC2L_OPTION
    5245462U,	// t2LDC2L_POST
    2710U,	// t2LDC2L_PRE
    2454U,	// t2LDC2_OFFSET
    4721174U,	// t2LDC2_OPTION
    5245462U,	// t2LDC2_POST
    2710U,	// t2LDC2_PRE
    2454U,	// t2LDCL_OFFSET
    4721174U,	// t2LDCL_OPTION
    5245462U,	// t2LDCL_POST
    2710U,	// t2LDCL_PRE
    2454U,	// t2LDC_OFFSET
    4721174U,	// t2LDC_OPTION
    5245462U,	// t2LDC_POST
    2710U,	// t2LDC_PRE
    18432U,	// t2LDMDB
    532U,	// t2LDMDB_UPD
    18432U,	// t2LDMIA
    532U,	// t2LDMIA_UPD
    3968U,	// t2LDRBT
    133632U,	// t2LDRB_POST
    4352U,	// t2LDRB_PRE
    3072U,	// t2LDRBi12
    3968U,	// t2LDRBi8
    8320U,	// t2LDRBpci
    8448U,	// t2LDRBs
    543686656U,	// t2LDRD_POST
    17825792U,	// t2LDRD_PRE
    18350080U,	// t2LDRDi8
    8576U,	// t2LDREX
    128U,	// t2LDREXB
    11010048U,	// t2LDREXD
    128U,	// t2LDREXH
    3968U,	// t2LDRHT
    133632U,	// t2LDRH_POST
    4352U,	// t2LDRH_PRE
    3072U,	// t2LDRHi12
    3968U,	// t2LDRHi8
    8320U,	// t2LDRHpci
    8448U,	// t2LDRHs
    3968U,	// t2LDRSBT
    133632U,	// t2LDRSB_POST
    4352U,	// t2LDRSB_PRE
    3072U,	// t2LDRSBi12
    3968U,	// t2LDRSBi8
    8320U,	// t2LDRSBpci
    8448U,	// t2LDRSBs
    3968U,	// t2LDRSHT
    133632U,	// t2LDRSH_POST
    4352U,	// t2LDRSH_PRE
    3072U,	// t2LDRSHi12
    3968U,	// t2LDRSHi8
    8320U,	// t2LDRSHpci
    8448U,	// t2LDRSHs
    3968U,	// t2LDRT
    133632U,	// t2LDR_POST
    4352U,	// t2LDR_PRE
    3072U,	// t2LDRi12
    3968U,	// t2LDRi8
    8320U,	// t2LDRpci
    8448U,	// t2LDRs
    0U,	// t2LE
    0U,	// t2LEUpdate
    0U,	// t2LSLri
    0U,	// t2LSLrr
    16777216U,	// t2LSRri
    0U,	// t2LSRrr
    103908112U,	// t2MCR
    103908112U,	// t2MCR2
    137462544U,	// t2MCRR
    137462544U,	// t2MCRR2
    33554432U,	// t2MLA
    33554432U,	// t2MLS
    17792U,	// t2MOVTi16
    16384U,	// t2MOVi
    16384U,	// t2MOVi16
    16384U,	// t2MOVr
    425984U,	// t2MOVsra_flag
    425984U,	// t2MOVsrl_flag
    115480U,	// t2MRC
    115480U,	// t2MRC2
    0U,	// t2MRRC
    0U,	// t2MRRC2
    26U,	// t2MRS_AR
    8704U,	// t2MRS_M
    3712U,	// t2MRSbanked
    28U,	// t2MRSsys_AR
    528U,	// t2MSR_AR
    528U,	// t2MSR_M
    0U,	// t2MSRbanked
    0U,	// t2MUL
    16384U,	// t2MVNi
    16384U,	// t2MVNr
    896U,	// t2MVNs
    0U,	// t2ORNri
    0U,	// t2ORNrr
    16252928U,	// t2ORNrs
    0U,	// t2ORRri
    0U,	// t2ORRrr
    16252928U,	// t2ORRrs
    201326592U,	// t2PKHBT
    234881024U,	// t2PKHTB
    0U,	// t2PLDWi12
    0U,	// t2PLDWi8
    0U,	// t2PLDWs
    0U,	// t2PLDi12
    0U,	// t2PLDi8
    1U,	// t2PLDpci
    0U,	// t2PLDs
    0U,	// t2PLIi12
    0U,	// t2PLIi8
    1U,	// t2PLIpci
    0U,	// t2PLIs
    0U,	// t2QADD
    0U,	// t2QADD16
    0U,	// t2QADD8
    0U,	// t2QASX
    0U,	// t2QDADD
    0U,	// t2QDSUB
    0U,	// t2QSAX
    0U,	// t2QSUB
    0U,	// t2QSUB16
    0U,	// t2QSUB8
    16384U,	// t2RBIT
    16384U,	// t2REV
    16384U,	// t2REV16
    16384U,	// t2REVSH
    2U,	// t2RFEDB
    4U,	// t2RFEDBW
    2U,	// t2RFEIA
    4U,	// t2RFEIAW
    0U,	// t2RORri
    0U,	// t2RORrr
    16384U,	// t2RRX
    0U,	// t2RSBri
    0U,	// t2RSBrr
    16252928U,	// t2RSBrs
    0U,	// t2SADD16
    0U,	// t2SADD8
    0U,	// t2SASX
    0U,	// t2SB
    0U,	// t2SBCri
    0U,	// t2SBCrr
    16252928U,	// t2SBCrs
    33554432U,	// t2SBFX
    0U,	// t2SDIV
    0U,	// t2SEL
    0U,	// t2SETPAN
    0U,	// t2SG
    0U,	// t2SHADD16
    0U,	// t2SHADD8
    0U,	// t2SHASX
    0U,	// t2SHSAX
    0U,	// t2SHSUB16
    0U,	// t2SHSUB8
    2U,	// t2SMC
    33554432U,	// t2SMLABB
    33554432U,	// t2SMLABT
    33554432U,	// t2SMLAD
    33554432U,	// t2SMLADX
    33554432U,	// t2SMLAL
    33554432U,	// t2SMLALBB
    33554432U,	// t2SMLALBT
    33554432U,	// t2SMLALD
    33554432U,	// t2SMLALDX
    33554432U,	// t2SMLALTB
    33554432U,	// t2SMLALTT
    33554432U,	// t2SMLATB
    33554432U,	// t2SMLATT
    33554432U,	// t2SMLAWB
    33554432U,	// t2SMLAWT
    33554432U,	// t2SMLSD
    33554432U,	// t2SMLSDX
    33554432U,	// t2SMLSLD
    33554432U,	// t2SMLSLDX
    33554432U,	// t2SMMLA
    33554432U,	// t2SMMLAR
    33554432U,	// t2SMMLS
    33554432U,	// t2SMMLSR
    0U,	// t2SMMUL
    0U,	// t2SMMULR
    0U,	// t2SMUAD
    0U,	// t2SMUADX
    0U,	// t2SMULBB
    0U,	// t2SMULBT
    33554432U,	// t2SMULL
    0U,	// t2SMULTB
    0U,	// t2SMULTT
    0U,	// t2SMULWB
    0U,	// t2SMULWT
    0U,	// t2SMUSD
    0U,	// t2SMUSDX
    0U,	// t2SRSDB
    0U,	// t2SRSDB_UPD
    0U,	// t2SRSIA
    0U,	// t2SRSIA_UPD
    218112U,	// t2SSAT
    21504U,	// t2SSAT16
    0U,	// t2SSAX
    0U,	// t2SSUB16
    0U,	// t2SSUB8
    2454U,	// t2STC2L_OFFSET
    4721174U,	// t2STC2L_OPTION
    5245462U,	// t2STC2L_POST
    2710U,	// t2STC2L_PRE
    2454U,	// t2STC2_OFFSET
    4721174U,	// t2STC2_OPTION
    5245462U,	// t2STC2_POST
    2710U,	// t2STC2_PRE
    2454U,	// t2STCL_OFFSET
    4721174U,	// t2STCL_OPTION
    5245462U,	// t2STCL_POST
    2710U,	// t2STCL_PRE
    2454U,	// t2STC_OFFSET
    4721174U,	// t2STC_OPTION
    5245462U,	// t2STC_POST
    2710U,	// t2STC_PRE
    128U,	// t2STL
    128U,	// t2STLB
    11010048U,	// t2STLEX
    11010048U,	// t2STLEXB
    33554432U,	// t2STLEXD
    11010048U,	// t2STLEXH
    128U,	// t2STLH
    18432U,	// t2STMDB
    532U,	// t2STMDB_UPD
    18432U,	// t2STMIA
    532U,	// t2STMIA_UPD
    3968U,	// t2STRBT
    133632U,	// t2STRB_POST
    4352U,	// t2STRB_PRE
    3072U,	// t2STRBi12
    3968U,	// t2STRBi8
    8448U,	// t2STRBs
    543688064U,	// t2STRD_POST
    17827200U,	// t2STRD_PRE
    18350080U,	// t2STRDi8
    18874368U,	// t2STREX
    11010048U,	// t2STREXB
    33554432U,	// t2STREXD
    11010048U,	// t2STREXH
    3968U,	// t2STRHT
    133632U,	// t2STRH_POST
    4352U,	// t2STRH_PRE
    3072U,	// t2STRHi12
    3968U,	// t2STRHi8
    8448U,	// t2STRHs
    3968U,	// t2STRT
    133632U,	// t2STR_POST
    4352U,	// t2STR_PRE
    3072U,	// t2STRi12
    3968U,	// t2STRi8
    8448U,	// t2STRs
    0U,	// t2SUBS_PC_LR
    0U,	// t2SUBri
    0U,	// t2SUBri12
    0U,	// t2SUBrr
    16252928U,	// t2SUBrs
    0U,	// t2SUBspImm
    0U,	// t2SUBspImm12
    268435456U,	// t2SXTAB
    268435456U,	// t2SXTAB16
    268435456U,	// t2SXTAH
    229376U,	// t2SXTB
    229376U,	// t2SXTB16
    229376U,	// t2SXTH
    1U,	// t2TBB
    1U,	// t2TBH
    16384U,	// t2TEQri
    16384U,	// t2TEQrr
    896U,	// t2TEQrs
    1U,	// t2TSB
    16384U,	// t2TSTri
    16384U,	// t2TSTrr
    896U,	// t2TSTrs
    16384U,	// t2TT
    16384U,	// t2TTA
    16384U,	// t2TTAT
    16384U,	// t2TTT
    0U,	// t2UADD16
    0U,	// t2UADD8
    0U,	// t2UASX
    33554432U,	// t2UBFX
    0U,	// t2UDF
    0U,	// t2UDIV
    0U,	// t2UHADD16
    0U,	// t2UHADD8
    0U,	// t2UHASX
    0U,	// t2UHSAX
    0U,	// t2UHSUB16
    0U,	// t2UHSUB8
    33554432U,	// t2UMAAL
    33554432U,	// t2UMLAL
    33554432U,	// t2UMULL
    0U,	// t2UQADD16
    0U,	// t2UQADD8
    0U,	// t2UQASX
    0U,	// t2UQSAX
    0U,	// t2UQSUB16
    0U,	// t2UQSUB8
    0U,	// t2USAD8
    33554432U,	// t2USADA8
    301989888U,	// t2USAT
    0U,	// t2USAT16
    0U,	// t2USAX
    0U,	// t2USUB16
    0U,	// t2USUB8
    268435456U,	// t2UXTAB
    268435456U,	// t2UXTAB16
    268435456U,	// t2UXTAH
    229376U,	// t2UXTB
    229376U,	// t2UXTB16
    229376U,	// t2UXTH
    21376U,	// t2WLS
    2U,	// tADC
    17792U,	// tADDhirr
    16768U,	// tADDi3
    2U,	// tADDi8
    0U,	// tADDrSP
    19398656U,	// tADDrSPi
    16768U,	// tADDrr
    8832U,	// tADDspi
    17792U,	// tADDspr
    8960U,	// tADR
    2U,	// tAND
    9088U,	// tASRri
    2U,	// tASRrr
    2U,	// tB
    2U,	// tBIC
    0U,	// tBKPT
    1U,	// tBL
    2U,	// tBLXNSr
    1U,	// tBLXi
    2U,	// tBLXr
    2U,	// tBX
    2U,	// tBXNS
    2U,	// tBcc
    2U,	// tCBNZ
    2U,	// tCBZ
    16384U,	// tCMNz
    16384U,	// tCMPhir
    16384U,	// tCMPi8
    16384U,	// tCMPr
    2U,	// tCPS
    2U,	// tEOR
    2U,	// tHINT
    0U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    18432U,	// tLDMIA
    9216U,	// tLDRBi
    9344U,	// tLDRBr
    9472U,	// tLDRHi
    9344U,	// tLDRHr
    9344U,	// tLDRSB
    9344U,	// tLDRSH
    9600U,	// tLDRi
    9728U,	// tLDRpci
    9344U,	// tLDRr
    9856U,	// tLDRspi
    16768U,	// tLSLri
    2U,	// tLSLrr
    9088U,	// tLSRri
    2U,	// tLSRrr
    2U,	// tMOVSr
    0U,	// tMOVi8
    16384U,	// tMOVr
    16768U,	// tMUL
    0U,	// tMVN
    2U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPUSH
    16384U,	// tREV
    16384U,	// tREV16
    16384U,	// tREVSH
    2U,	// tROR
    0U,	// tRSB
    2U,	// tSBC
    0U,	// tSETEND
    532U,	// tSTMIA_UPD
    9216U,	// tSTRBi
    9344U,	// tSTRBr
    9472U,	// tSTRHi
    9344U,	// tSTRHr
    9600U,	// tSTRi
    9344U,	// tSTRr
    9856U,	// tSTRspi
    16768U,	// tSUBi3
    2U,	// tSUBi8
    16768U,	// tSUBrr
    8832U,	// tSUBspi
    2U,	// tSVC
    16384U,	// tSXTB
    16384U,	// tSXTH
    0U,	// tTRAP
    16384U,	// tTST
    0U,	// tUDF
    16384U,	// tUXTB
    16384U,	// tUXTH
    0U,	// t__brkdiv0
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 6 bits for 43 unique commands.
  switch ((Bits >> 13) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCri, ADCrr, ADDri, A...
    printSBitModifierOperand(MI, 5, STI, O);
    printPredicateOperand(MI, 3, STI, O);
    break;
  case 2:
    // ITasm, t2IT
    printThumbITMask(MI, 1, STI, O);
    break;
  case 3:
    // LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHTii, LDRT_POST, STRB...
    printPredicateOperand(MI, 2, STI, O);
    break;
  case 4:
    // RRXi, MOVi, MOVr, MOVr_TC, MVNi, MVNr, t2MOVi, t2MOVr, t2MVNi, t2MVNr,...
    printSBitModifierOperand(MI, 4, STI, O);
    printPredicateOperand(MI, 2, STI, O);
    break;
  case 5:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printPredicateOperand(MI, 4, STI, O);
    break;
  case 6:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printPredicateOperand(MI, 5, STI, O);
    break;
  case 7:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printPredicateOperand(MI, 3, STI, O);
    break;
  case 8:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, MLA, MOVsr, MVNsr, ORRrsi, RSB...
    printSBitModifierOperand(MI, 6, STI, O);
    printPredicateOperand(MI, 4, STI, O);
    break;
  case 9:
    // ADCrsr, ADDrsr, ANDrsr, BICrsr, EORrsr, ORRrsr, RSBrsr, RSCrsr, SBCrsr...
    printSBitModifierOperand(MI, 7, STI, O);
    printPredicateOperand(MI, 5, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printSORegRegOperand(MI, 2, STI, O);
    return;
    break;
  case 10:
    // AESD, AESE, AESIMC, AESMC, BKPT, BLX, BX, CPS1p, CRC32B, CRC32CB, CRC3...
    printOperand(MI, 0, STI, O);
    break;
  case 11:
    // BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, BF16VDOTS_VDOTD, BF16VDOTS_VDOTQ, MV...
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  case 12:
    // BL, BLXi, t2BFic, t2LE
    printOperand(MI, Address, 0, STI, O);
    break;
  case 13:
    // BLX_pred, BL_pred, BXJ, BX_pred, Bcc, DBG, FLDMXIA, FSTMXIA, HINT, LDM...
    printPredicateOperand(MI, 1, STI, O);
    break;
  case 14:
    // BX_RET, ERET, FMSTAT, MOVPCLR, MVE_LCTP, VSCCLRMD, VSCCLRMS, t2CLREX, ...
    printPredicateOperand(MI, 0, STI, O);
    break;
  case 15:
    // CDE_CX1, CDE_CX1D, CDE_CX2, CDE_CX2D, CDE_CX3, CDE_CX3D, CDE_VCX1A_fpd...
    printPImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 16:
    // CDE_CX3A, CDE_CX3DA, CDP, LDRD_POST, LDRD_PRE, MCR, MRC, MVE_SQRSHRL, ...
    printPredicateOperand(MI, 6, STI, O);
    break;
  case 17:
    // CDE_VCX1A_vec, CDE_VCX2_vec, MVE_VABAVs16, MVE_VABAVs32, MVE_VABAVs8, ...
    printVPTPredicateOperand(MI, 4, STI, O);
    break;
  case 18:
    // CDE_VCX1_vec, MVE_VABDf16, MVE_VABDf32, MVE_VABDs16, MVE_VABDs32, MVE_...
    printVPTPredicateOperand(MI, 3, STI, O);
    break;
  case 19:
    // CDE_VCX2A_vec, CDE_VCX3_vec, MVE_VADC, MVE_VADDLVs32acc, MVE_VADDLVu32...
    printVPTPredicateOperand(MI, 5, STI, O);
    break;
  case 20:
    // CDE_VCX3A_vec, MVE_VMLALDAVas16, MVE_VMLALDAVas32, MVE_VMLALDAVau16, M...
    printVPTPredicateOperand(MI, 6, STI, O);
    break;
  case 21:
    // CDP2, LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, ...
    printPImmediate(MI, 0, STI, O);
    O << ", ";
    break;
  case 22:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIMod(MI, 0, STI, O);
    break;
  case 23:
    // DMB, DSB
    printMemBOption(MI, 0, STI, O);
    return;
    break;
  case 24:
    // ISB
    printInstSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 25:
    // MRRC2
    printPImmediate(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 26:
    // MVE_VABSf16, MVE_VABSf32, MVE_VABSs16, MVE_VABSs32, MVE_VABSs8, MVE_VA...
    printVPTPredicateOperand(MI, 2, STI, O);
    break;
  case 27:
    // MVE_VLD20_16, MVE_VLD20_16_wb, MVE_VLD20_32, MVE_VLD20_32_wb, MVE_VLD2...
    printMVEVectorList<2>(MI, 0, STI, O);
    O << ", ";
    break;
  case 28:
    // MVE_VLD40_16, MVE_VLD40_16_wb, MVE_VLD40_32, MVE_VLD40_32_wb, MVE_VLD4...
    printMVEVectorList<4>(MI, 0, STI, O);
    O << ", ";
    break;
  case 29:
    // MVE_VPST, MVE_VPTv16i8, MVE_VPTv16i8r, MVE_VPTv16s8, MVE_VPTv16s8r, MV...
    printVPTMask(MI, 0, STI, O);
    break;
  case 30:
    // MVE_VST20_16_wb, MVE_VST20_32_wb, MVE_VST20_8_wb, MVE_VST21_16_wb, MVE...
    printMVEVectorList<2>(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 31:
    // MVE_VST40_16_wb, MVE_VST40_32_wb, MVE_VST40_8_wb, MVE_VST41_16_wb, MVE...
    printMVEVectorList<4>(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 32:
    // PLDWi12, PLDi12, PLIi12
    printAddrModeImm12Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 33:
    // PLDWrs, PLDrs, PLIrs
    printAddrMode2Operand(MI, 0, STI, O);
    return;
    break;
  case 34:
    // SETEND, tSETEND
    printSetendOperand(MI, 0, STI, O);
    return;
    break;
  case 35:
    // SMLAL, UMLAL
    printSBitModifierOperand(MI, 8, STI, O);
    printPredicateOperand(MI, 6, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 36:
    // TSB
    printTraceSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 37:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printPredicateOperand(MI, 7, STI, O);
    break;
  case 38:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printPredicateOperand(MI, 9, STI, O);
    break;
  case 39:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printPredicateOperand(MI, 11, STI, O);
    break;
  case 40:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printPredicateOperand(MI, 8, STI, O);
    break;
  case 41:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printPredicateOperand(MI, 13, STI, O);
    break;
  case 42:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printSBitModifierOperand(MI, 1, STI, O);
    break;
  }


  // Fragment 1 encoded into 7 bits for 87 unique commands.
  switch ((Bits >> 19) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, ITasm, LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHT...
    O << ' ';
    break;
  case 1:
    // VLD1LNdAsm_16, VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_register_Asm_16, VLD2...
    O << ".16\t";
    break;
  case 2:
    // VLD1LNdAsm_32, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_register_Asm_32, VLD2...
    O << ".32\t";
    break;
  case 3:
    // VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_8, VLD1LNdWB_register_Asm_8, VLD2LNd...
    O << ".8\t";
    break;
  case 4:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    O << "\t";
    break;
  case 5:
    // AESD, AESE, AESIMC, AESMC, BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, BF16VDOTS...
    O << ", ";
    break;
  case 6:
    // BF16_VCVT, BF16_VCVTB, BF16_VCVTT
    O << ".bf16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 7:
    // BKPT, BL, BLX, BLXi, BX, CPS1p, ERET, HLT, HVC, MVE_LETP, RFEDA, RFEDB...
    return;
    break;
  case 8:
    // BX_RET
    O << "\tlr";
    return;
    break;
  case 9:
    // CDE_CX1, CDE_CX2, CDE_CX3, CDE_VCX1A_fpdp, CDE_VCX1A_fpsp, CDE_VCX1_fp...
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 10:
    // CDE_CX1D, CDE_CX2D, CDE_CX3D
    printGPRPairOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  case 11:
    // CDP2, MCR2, MCRR2
    printOperand(MI, 1, STI, O);
    O << ", ";
    break;
  case 12:
    // FCONSTD, VABSD, VADDD, VCMPD, VCMPED, VCMPEZD, VCMPZD, VDIVD, VFMAD, V...
    O << ".f64\t";
    printOperand(MI, 0, STI, O);
    break;
  case 13:
    // FCONSTH, MVE_VABDf16, MVE_VABSf16, MVE_VADD_qr_f16, MVE_VADDf16, MVE_V...
    O << ".f16\t";
    break;
  case 14:
    // FCONSTS, MVE_VABDf32, MVE_VABSf32, MVE_VADD_qr_f32, MVE_VADDf32, MVE_V...
    O << ".f32\t";
    break;
  case 15:
    // FMSTAT
    O << "\tAPSR_nzcv, fpscr";
    return;
    break;
  case 16:
    // LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, LDC2_O...
    printCImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 17:
    // MOVPCLR
    O << "\tpc, lr";
    return;
    break;
  case 18:
    // MRC2
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 19:
    // MVE_VABAVs16, MVE_VABDs16, MVE_VABSs16, MVE_VADDVs16acc, MVE_VADDVs16n...
    O << ".s16\t";
    break;
  case 20:
    // MVE_VABAVs32, MVE_VABDs32, MVE_VABSs32, MVE_VADDLVs32acc, MVE_VADDLVs3...
    O << ".s32\t";
    break;
  case 21:
    // MVE_VABAVs8, MVE_VABDs8, MVE_VABSs8, MVE_VADDVs8acc, MVE_VADDVs8no_acc...
    O << ".s8\t";
    break;
  case 22:
    // MVE_VABAVu16, MVE_VABDu16, MVE_VADDVu16acc, MVE_VADDVu16no_acc, MVE_VC...
    O << ".u16\t";
    break;
  case 23:
    // MVE_VABAVu32, MVE_VABDu32, MVE_VADDLVu32acc, MVE_VADDLVu32no_acc, MVE_...
    O << ".u32\t";
    break;
  case 24:
    // MVE_VABAVu8, MVE_VABDu8, MVE_VADDVu8acc, MVE_VADDVu8no_acc, MVE_VCMPu8...
    O << ".u8\t";
    break;
  case 25:
    // MVE_VADC, MVE_VADCI, MVE_VADD_qr_i32, MVE_VADDi32, MVE_VBICimmi32, MVE...
    O << ".i32\t";
    break;
  case 26:
    // MVE_VADD_qr_i16, MVE_VADDi16, MVE_VBICimmi16, MVE_VCADDi16, MVE_VCLZs1...
    O << ".i16\t";
    break;
  case 27:
    // MVE_VADD_qr_i8, MVE_VADDi8, MVE_VCADDi8, MVE_VCLZs8, MVE_VCMPi8, MVE_V...
    O << ".i8\t";
    break;
  case 28:
    // MVE_VCTP64, MVE_VSTRD64_qi, MVE_VSTRD64_qi_pre, MVE_VSTRD64_rq, MVE_VS...
    O << ".64\t";
    break;
  case 29:
    // MVE_VCVTf16f32bh, MVE_VCVTf16f32th, VCVTBSH, VCVTTSH, VCVTf2h
    O << ".f16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 30:
    // MVE_VCVTf16s16_fix, MVE_VCVTf16s16n, VCVTs2hd, VCVTs2hq, VCVTxs2hd, VC...
    O << ".f16.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 31:
    // MVE_VCVTf16u16_fix, MVE_VCVTf16u16n, VCVTu2hd, VCVTu2hq, VCVTxu2hd, VC...
    O << ".f16.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 32:
    // MVE_VCVTf32f16bh, MVE_VCVTf32f16th, VCVTBHS, VCVTTHS, VCVTh2f
    O << ".f32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 33:
    // MVE_VCVTf32s32_fix, MVE_VCVTf32s32n, VCVTs2fd, VCVTs2fq, VCVTxs2fd, VC...
    O << ".f32.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 34:
    // MVE_VCVTf32u32_fix, MVE_VCVTf32u32n, VCVTu2fd, VCVTu2fq, VCVTxu2fd, VC...
    O << ".f32.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 35:
    // MVE_VCVTs16f16_fix, MVE_VCVTs16f16a, MVE_VCVTs16f16m, MVE_VCVTs16f16n,...
    O << ".s16.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 36:
    // MVE_VCVTs32f32_fix, MVE_VCVTs32f32a, MVE_VCVTs32f32m, MVE_VCVTs32f32n,...
    O << ".s32.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 37:
    // MVE_VCVTu16f16_fix, MVE_VCVTu16f16a, MVE_VCVTu16f16m, MVE_VCVTu16f16n,...
    O << ".u16.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 38:
    // MVE_VCVTu32f32_fix, MVE_VCVTu32f32a, MVE_VCVTu32f32m, MVE_VCVTu32f32n,...
    O << ".u32.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 39:
    // MVE_VLD20_16, MVE_VLD20_32, MVE_VLD20_8, MVE_VLD21_16, MVE_VLD21_32, M...
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 40:
    // MVE_VLD20_16_wb, MVE_VLD20_32_wb, MVE_VLD20_8_wb, MVE_VLD21_16_wb, MVE...
    printAddrMode7Operand(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 41:
    // MVE_VLDRDU64_qi, MVE_VLDRDU64_qi_pre, MVE_VLDRDU64_rq, MVE_VLDRDU64_rq...
    O << ".u64\t";
    break;
  case 42:
    // MVE_VMOVimmi64, VADDHNv2i32, VADDv1i64, VADDv2i64, VMOVNv2i32, VMOVv1i...
    O << ".i64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 43:
    // MVE_VMULLBp16, MVE_VMULLTp16
    O << ".p16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 44:
    // MVE_VMULLBp8, MVE_VMULLTp8, VMULLp8, VMULpd, VMULpq
    O << ".p8\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 45:
    // MVE_VST20_16, MVE_VST20_32, MVE_VST20_8, MVE_VST21_16, MVE_VST21_32, M...
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 46:
    // RFEDA_UPD, RFEDB_UPD, RFEIA_UPD, RFEIB_UPD
    O << '!';
    return;
    break;
  case 47:
    // VCVTBDH, VCVTTDH
    O << ".f16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 48:
    // VCVTBHD, VCVTTHD
    O << ".f64.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 49:
    // VCVTDS
    O << ".f64.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 50:
    // VCVTSD
    O << ".f32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 51:
    // VJCVT, VTOSIRD, VTOSIZD, VTOSLD
    O << ".s32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 52:
    // VLD1LNd16, VLD1LNd16_UPD, VLD2LNd16, VLD2LNd16_UPD, VLD2LNq16, VLD2LNq...
    O << ".16\t{";
    break;
  case 53:
    // VLD1LNd32, VLD1LNd32_UPD, VLD2LNd32, VLD2LNd32_UPD, VLD2LNq32, VLD2LNq...
    O << ".32\t{";
    break;
  case 54:
    // VLD1LNd8, VLD1LNd8_UPD, VLD2LNd8, VLD2LNd8_UPD, VLD3DUPd8, VLD3DUPd8_U...
    O << ".8\t{";
    break;
  case 55:
    // VLDR_FPCXTNS_off, VLDR_FPCXTNS_post, VLDR_FPCXTNS_pre, VMSR_FPCXTNS, V...
    O << "\tfpcxtns, ";
    break;
  case 56:
    // VLDR_FPCXTS_off, VLDR_FPCXTS_post, VLDR_FPCXTS_pre, VMSR_FPCXTS, VSTR_...
    O << "\tfpcxts, ";
    break;
  case 57:
    // VLDR_FPSCR_NZCVQC_off, VLDR_FPSCR_NZCVQC_post, VLDR_FPSCR_NZCVQC_pre, ...
    O << "\tfpscr_nzcvqc, ";
    break;
  case 58:
    // VLDR_FPSCR_off, VLDR_FPSCR_post, VLDR_FPSCR_pre, VMSR, VSTR_FPSCR_off,...
    O << "\tfpscr, ";
    break;
  case 59:
    // VLDR_P0_off, VLDR_P0_post, VLDR_P0_pre, VMSR_P0, VSTR_P0_off, VSTR_P0_...
    O << "\tp0, ";
    break;
  case 60:
    // VLDR_VPR_off, VLDR_VPR_post, VLDR_VPR_pre, VMSR_VPR, VSTR_VPR_off, VST...
    O << "\tvpr, ";
    break;
  case 61:
    // VMSR_FPEXC
    O << "\tfpexc, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 62:
    // VMSR_FPINST
    O << "\tfpinst, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 63:
    // VMSR_FPINST2
    O << "\tfpinst2, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 64:
    // VMSR_FPSID
    O << "\tfpsid, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 65:
    // VQADDsv1i64, VQADDsv2i64, VQMOVNsuv2i32, VQMOVNsv2i32, VQRSHLsv1i64, V...
    O << ".s64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 66:
    // VSHTOD
    O << ".f64.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 67:
    // VSHTOS
    O << ".f32.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 68:
    // VSITOD, VSLTOD
    O << ".f64.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 69:
    // VSITOH, VSLTOH
    O << ".f16.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 70:
    // VTOSHD
    O << ".s16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 71:
    // VTOSHS
    O << ".s16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 72:
    // VTOSIRH, VTOSIZH, VTOSLH
    O << ".s32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 73:
    // VTOUHD
    O << ".u16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 74:
    // VTOUHS
    O << ".u16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 75:
    // VTOUIRD, VTOUIZD, VTOULD
    O << ".u32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 76:
    // VTOUIRH, VTOUIZH, VTOULH
    O << ".u32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 77:
    // VUHTOD
    O << ".f64.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 78:
    // VUHTOS
    O << ".f32.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 79:
    // VUITOD, VULTOD
    O << ".f64.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 80:
    // VUITOH, VULTOH
    O << ".f16.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 81:
    // t2ADCrr, t2ADCrs, t2ADDri, t2ADDrr, t2ADDrs, t2ADDspImm, t2ADR, t2ANDr...
    O << ".w\t";
    break;
  case 82:
    // t2SRSDB, t2SRSIA
    O << "\tsp, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 83:
    // t2SRSDB_UPD, t2SRSIA_UPD
    O << "\tsp!, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 84:
    // t2SUBS_PC_LR
    O << "\tpc, lr, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 85:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printPredicateOperand(MI, 4, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 86:
    // tMOVi8, tMVN, tRSB
    printPredicateOperand(MI, 3, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  }


  // Fragment 2 encoded into 7 bits for 69 unique commands.
  switch ((Bits >> 26) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHTii, LDR...
    printOperand(MI, 0, STI, O);
    break;
  case 1:
    // ITasm, t2IT
    printMandatoryPredicateOperand(MI, 0, STI, O);
    return;
    break;
  case 2:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printVectorListThreeAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 3:
    // VLD3DUPqAsm_16, VLD3DUPqAsm_32, VLD3DUPqAsm_8, VLD3DUPqWB_fixed_Asm_16...
    printVectorListThreeSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printVectorListThree(MI, 0, STI, O);
    O << ", ";
    break;
  case 5:
    // VLD3qAsm_16, VLD3qAsm_32, VLD3qAsm_8, VLD3qWB_fixed_Asm_16, VLD3qWB_fi...
    printVectorListThreeSpaced(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 6:
    // VLD4DUPdAsm_16, VLD4DUPdAsm_32, VLD4DUPdAsm_8, VLD4DUPdWB_fixed_Asm_16...
    printVectorListFourAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 7:
    // VLD4DUPqAsm_16, VLD4DUPqAsm_32, VLD4DUPqAsm_8, VLD4DUPqWB_fixed_Asm_16...
    printVectorListFourSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 8:
    // VLD4dAsm_16, VLD4dAsm_32, VLD4dAsm_8, VLD4dWB_fixed_Asm_16, VLD4dWB_fi...
    printVectorListFour(MI, 0, STI, O);
    O << ", ";
    break;
  case 9:
    // VLD4qAsm_16, VLD4qAsm_32, VLD4qAsm_8, VLD4qWB_fixed_Asm_16, VLD4qWB_fi...
    printVectorListFourSpaced(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 10:
    // AESD, AESE, BF16_VCVTB, BF16_VCVTT, CDE_CX1, CDE_CX2, CDE_CX3, CDE_VCX...
    printOperand(MI, 2, STI, O);
    break;
  case 11:
    // AESIMC, AESMC, BF16_VCVT, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, C...
    printOperand(MI, 1, STI, O);
    break;
  case 12:
    // BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, BF16VDOTS_VDOTD, BF16VDOTS_VDOTQ, CD...
    printOperand(MI, 3, STI, O);
    break;
  case 13:
    // BL_pred, Bcc, t2B, t2BFLi, t2BFLr, t2BFi, t2BFr, t2Bcc, tB, tBcc
    printOperand(MI, Address, 0, STI, O);
    break;
  case 14:
    // CDE_CX1A, CDE_CX1DA, CDE_CX2A, CDE_CX2DA, CDE_CX3A, CDE_CX3DA, CDE_VCX...
    printPImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 15:
    // CDE_CX1D, MVE_LCTP, MVE_VCVTf16s16n, MVE_VCVTf16u16n, MVE_VCVTf32s32n,...
    return;
    break;
  case 16:
    // CDE_CX2D, CDE_CX3D, FCONSTD, MVE_VCVTf16s16_fix, MVE_VCVTf16u16_fix, M...
    O << ", ";
    break;
  case 17:
    // CDP, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OP...
    printPImmediate(MI, 0, STI, O);
    O << ", ";
    break;
  case 18:
    // CDP2
    printCImmediate(MI, 2, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 19:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIFlag(MI, 1, STI, O);
    break;
  case 20:
    // LDAEXD, LDREXD
    printGPRPairOperand(MI, 0, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 21:
    // LDC2L_OFFSET, LDC2_OFFSET, STC2L_OFFSET, STC2_OFFSET
    printAddrMode5Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 22:
    // LDC2L_OPTION, LDC2L_POST, LDC2_OPTION, LDC2_POST, STC2L_OPTION, STC2L_...
    printAddrMode7Operand(MI, 2, STI, O);
    break;
  case 23:
    // LDC2L_PRE, LDC2_PRE, STC2L_PRE, STC2_PRE
    printAddrMode5Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 24:
    // MRRC, t2MRRC, t2MRRC2
    printPImmediate(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 25:
    // MSR, MSRi, t2MSR_AR, t2MSR_M
    printMSRMaskOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 26:
    // MSRbanked, t2MSRbanked
    printBankedRegOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 27:
    // MVE_VCMPf16, MVE_VCMPf16r, MVE_VCMPf32, MVE_VCMPf32r, MVE_VCMPi16, MVE...
    printMandatoryRestrictedPredicateOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 28:
    // MVE_VMOVimmi64, VMOVv1i64, VMOVv2i64
    printVMOVModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 29:
    // VCMPEZD, VCMPZD, tRSB
    O << ", #0";
    return;
    break;
  case 30:
    // VLD1DUPd16, VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32, VLD...
    printVectorListOneAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 31:
    // VLD1DUPq16, VLD1DUPq16wb_fixed, VLD1DUPq16wb_register, VLD1DUPq32, VLD...
    printVectorListTwoAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 32:
    // VLD1d16, VLD1d16wb_fixed, VLD1d16wb_register, VLD1d32, VLD1d32wb_fixed...
    printVectorListOne(MI, 0, STI, O);
    O << ", ";
    break;
  case 33:
    // VLD1q16, VLD1q16wb_fixed, VLD1q16wb_register, VLD1q32, VLD1q32wb_fixed...
    printVectorListTwo(MI, 0, STI, O);
    O << ", ";
    break;
  case 34:
    // VLD2DUPd16x2, VLD2DUPd16x2wb_fixed, VLD2DUPd16x2wb_register, VLD2DUPd3...
    printVectorListTwoSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 35:
    // VLD2b16, VLD2b16wb_fixed, VLD2b16wb_register, VLD2b32, VLD2b32wb_fixed...
    printVectorListTwoSpaced(MI, 0, STI, O);
    O << ", ";
    break;
  case 36:
    // VLDR_FPCXTNS_off, VLDR_FPCXTS_off, VLDR_FPSCR_NZCVQC_off, VLDR_FPSCR_o...
    printT2AddrModeImm8s4Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 37:
    // VLDR_FPCXTNS_post, VLDR_FPCXTS_post, VLDR_FPSCR_NZCVQC_post, VLDR_FPSC...
    printAddrMode7Operand(MI, 1, STI, O);
    printT2AddrModeImm8s4OffsetOperand(MI, 2, STI, O);
    return;
    break;
  case 38:
    // VLDR_FPCXTNS_pre, VLDR_FPCXTS_pre, VLDR_FPSCR_NZCVQC_pre, VLDR_FPSCR_p...
    printT2AddrModeImm8s4Operand<true>(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 39:
    // VLDR_P0_off, VSTR_P0_off
    printT2AddrModeImm8s4Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 40:
    // VLDR_P0_pre, VSTR_P0_pre
    printT2AddrModeImm8s4Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 41:
    // VSCCLRMD, VSCCLRMS, t2CLRM, tPOP, tPUSH
    printRegisterList(MI, 2, STI, O);
    return;
    break;
  case 42:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST2LNd16_UPD, VST2LNd32_U...
    printOperand(MI, 4, STI, O);
    break;
  case 43:
    // VST1d16, VST1d32, VST1d64, VST1d8
    printVectorListOne(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 44:
    // VST1d16Q, VST1d32Q, VST1d64Q, VST1d8Q, VST2q16, VST2q32, VST2q8
    printVectorListFour(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 45:
    // VST1d16Qwb_fixed, VST1d32Qwb_fixed, VST1d64Qwb_fixed, VST1d8Qwb_fixed,...
    printVectorListFour(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 46:
    // VST1d16Qwb_register, VST1d32Qwb_register, VST1d64Qwb_register, VST1d8Q...
    printVectorListFour(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 47:
    // VST1d16T, VST1d32T, VST1d64T, VST1d8T
    printVectorListThree(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 48:
    // VST1d16Twb_fixed, VST1d32Twb_fixed, VST1d64Twb_fixed, VST1d8Twb_fixed
    printVectorListThree(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 49:
    // VST1d16Twb_register, VST1d32Twb_register, VST1d64Twb_register, VST1d8T...
    printVectorListThree(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 50:
    // VST1d16wb_fixed, VST1d32wb_fixed, VST1d64wb_fixed, VST1d8wb_fixed
    printVectorListOne(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 51:
    // VST1d16wb_register, VST1d32wb_register, VST1d64wb_register, VST1d8wb_r...
    printVectorListOne(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 52:
    // VST1q16, VST1q32, VST1q64, VST1q8, VST2d16, VST2d32, VST2d8
    printVectorListTwo(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 53:
    // VST1q16wb_fixed, VST1q32wb_fixed, VST1q64wb_fixed, VST1q8wb_fixed, VST...
    printVectorListTwo(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 54:
    // VST1q16wb_register, VST1q32wb_register, VST1q64wb_register, VST1q8wb_r...
    printVectorListTwo(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 55:
    // VST2b16, VST2b32, VST2b8
    printVectorListTwoSpaced(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 56:
    // VST2b16wb_fixed, VST2b32wb_fixed, VST2b8wb_fixed
    printVectorListTwoSpaced(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 57:
    // VST2b16wb_register, VST2b32wb_register, VST2b8wb_register
    printVectorListTwoSpaced(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 58:
    // t2BFic, tCBNZ, tCBZ
    printOperand(MI, Address, 1, STI, O);
    break;
  case 59:
    // t2DMB, t2DSB
    printMemBOption(MI, 0, STI, O);
    return;
    break;
  case 60:
    // t2ISB
    printInstSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 61:
    // t2PLDWi12, t2PLDi12, t2PLIi12
    printAddrModeImm12Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 62:
    // t2PLDWi8, t2PLDi8, t2PLIi8
    printT2AddrModeImm8Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 63:
    // t2PLDWs, t2PLDs, t2PLIs
    printT2AddrModeSoRegOperand(MI, 0, STI, O);
    return;
    break;
  case 64:
    // t2PLDpci, t2PLIpci
    printThumbLdrLabelOperand(MI, 0, STI, O);
    return;
    break;
  case 65:
    // t2TBB
    printAddrModeTBB(MI, 0, STI, O);
    return;
    break;
  case 66:
    // t2TBH
    printAddrModeTBH(MI, 0, STI, O);
    return;
    break;
  case 67:
    // t2TSB
    printTraceSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 68:
    // tBL, tBLXi
    printOperand(MI, Address, 2, STI, O);
    return;
    break;
  }


  // Fragment 3 encoded into 6 bits for 37 unique commands.
  switch ((Bits >> 33) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRHTii, LDRSBTii, LDRSHTii, LDR...
    O << ", ";
    break;
  case 1:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPqAsm_16, VLD3DUP...
    return;
    break;
  case 2:
    // VLD3DUPdWB_fixed_Asm_16, VLD3DUPdWB_fixed_Asm_32, VLD3DUPdWB_fixed_Asm...
    O << '!';
    return;
    break;
  case 3:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 4:
    // BF16VDOTI_VDOTD, BF16VDOTI_VDOTQ, MVE_VMOV_q_rr, VBF16MALBQI, VBF16MAL...
    printVectorIndex(MI, 4, STI, O);
    break;
  case 5:
    // CDE_CX1A, CDE_CX2A, CDE_CX3A, CDE_VCX1A_vec, CDE_VCX1_vec, CDE_VCX2A_v...
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 6:
    // CDE_CX1DA, CDE_CX2DA, CDE_CX3DA
    printGPRPairOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    break;
  case 7:
    // CDE_CX2D, CDE_CX3D
    printOperand(MI, 3, STI, O);
    break;
  case 8:
    // CDP, MCR, MCRR, MSR, VABSD, VADDD, VCMPD, VCMPED, VDIVD, VMOVD, VMULD,...
    printOperand(MI, 1, STI, O);
    break;
  case 9:
    // FCONSTD
    printFPImmOperand(MI, 1, STI, O);
    return;
    break;
  case 10:
    // FLDMXDB_UPD, FLDMXIA_UPD, FSTMXDB_UPD, FSTMXIA_UPD, LDMDA_UPD, LDMDB_U...
    O << "!, ";
    printRegisterList(MI, 4, STI, O);
    break;
  case 11:
    // LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OPTION,...
    printCImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 12:
    // MRC, MVE_VCVTf16s16_fix, MVE_VCVTf16u16_fix, MVE_VCVTf32s32_fix, MVE_V...
    printOperand(MI, 2, STI, O);
    break;
  case 13:
    // MRS, t2MRS_AR
    O << ", apsr";
    return;
    break;
  case 14:
    // MRSsys, t2MRSsys_AR
    O << ", spsr";
    return;
    break;
  case 15:
    // MSRi
    printModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 16:
    // MVE_VMOV_to_lane_16, MVE_VMOV_to_lane_32, MVE_VMOV_to_lane_8, VSETLNi1...
    printVectorIndex(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 17:
    // VCMPEZH, VCMPEZS, VCMPZH, VCMPZS
    O << ", #0";
    return;
    break;
  case 18:
    // VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32wb_fixed, VLD1DUP...
    printAddrMode6Operand(MI, 2, STI, O);
    break;
  case 19:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << '[';
    break;
  case 20:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[], ";
    printOperand(MI, 1, STI, O);
    O << "[], ";
    printOperand(MI, 2, STI, O);
    break;
  case 21:
    // VLDR_P0_post, VSTR_P0_post
    printT2AddrModeImm8s4OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 22:
    // VMRS
    O << ", fpscr";
    return;
    break;
  case 23:
    // VMRS_FPCXTNS
    O << ", fpcxtns";
    return;
    break;
  case 24:
    // VMRS_FPCXTS
    O << ", fpcxts";
    return;
    break;
  case 25:
    // VMRS_FPEXC
    O << ", fpexc";
    return;
    break;
  case 26:
    // VMRS_FPINST
    O << ", fpinst";
    return;
    break;
  case 27:
    // VMRS_FPINST2
    O << ", fpinst2";
    return;
    break;
  case 28:
    // VMRS_FPSCR_NZCVQC
    O << ", fpscr_nzcvqc";
    return;
    break;
  case 29:
    // VMRS_FPSID
    O << ", fpsid";
    return;
    break;
  case 30:
    // VMRS_MVFR0
    O << ", mvfr0";
    return;
    break;
  case 31:
    // VMRS_MVFR1
    O << ", mvfr1";
    return;
    break;
  case 32:
    // VMRS_MVFR2
    O << ", mvfr2";
    return;
    break;
  case 33:
    // VMRS_P0
    O << ", p0";
    return;
    break;
  case 34:
    // VMRS_VPR
    O << ", vpr";
    return;
    break;
  case 35:
    // VSHTOH, VTOSHH, VTOUHH, VUHTOH
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 36:
    // VSLTOD, VSLTOH, VSLTOS, VTOSLD, VTOSLH, VTOSLS, VTOULD, VTOULH, VTOULS...
    printFBits32(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 4 encoded into 7 bits for 78 unique commands.
  switch ((Bits >> 39) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRConstPool, LSLi, LSLr, LSRi, LSRr, RORi, RORr, RRXi, t2...
    printOperand(MI, 1, STI, O);
    break;
  case 1:
    // LDRBT_POST, LDRHTii, LDRSBTii, LDRSHTii, LDRT_POST, STRBT_POST, STRT_P...
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 2:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printAddrMode6Operand(MI, 2, STI, O);
    break;
  case 3:
    // VLD3DUPdWB_register_Asm_16, VLD3DUPdWB_register_Asm_32, VLD3DUPdWB_reg...
    printOperand(MI, 3, STI, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD4dAsm_16, VLD4dAsm_32, VLD4dA...
    return;
    break;
  case 5:
    // VLD3dWB_fixed_Asm_16, VLD3dWB_fixed_Asm_32, VLD3dWB_fixed_Asm_8, VLD4d...
    O << '!';
    return;
    break;
  case 6:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    O << ", ";
    break;
  case 7:
    // t2MOVSsi, t2MOVsi, t2CMNzrs, t2CMPrs, t2MVNs, t2TEQrs, t2TSTrs
    printT2SOOperand(MI, 1, STI, O);
    return;
    break;
  case 8:
    // t2MOVSsr, t2MOVsr, CMNzrsr, CMPrsr, MOVsr, MVNsr, TEQrsr, TSTrsr
    printSORegRegOperand(MI, 1, STI, O);
    return;
    break;
  case 9:
    // ADR, t2ADR
    printAdrLabelOperand<0>(MI, 1, STI, O);
    return;
    break;
  case 10:
    // BFC, t2BFC
    printBitfieldInvMaskImmOperand(MI, 2, STI, O);
    return;
    break;
  case 11:
    // BFI, CDE_VCX1_vec, CDE_VCX2_vec, CDE_VCX3_vec, CPS3p, CRC32B, CRC32CB,...
    printOperand(MI, 2, STI, O);
    break;
  case 12:
    // CDE_VCX2A_fpdp, CDE_VCX2A_fpsp, CDE_VCX3A_fpdp, CDE_VCX3A_fpsp
    printOperand(MI, 4, STI, O);
    break;
  case 13:
    // CMNri, CMPri, MOVi, MVNi, TEQri, TSTri
    printModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 14:
    // CMNzrsi, CMPrsi, MOVsi, MVNsi, TEQrsi, TSTrsi
    printSORegImmOperand(MI, 1, STI, O);
    return;
    break;
  case 15:
    // FCONSTH, FCONSTS, MVE_VMOVimmf32, VMOVv2f32, VMOVv4f32
    printFPImmOperand(MI, 1, STI, O);
    return;
    break;
  case 16:
    // FLDMXIA, FSTMXIA, LDMDA, LDMDB, LDMIA, LDMIB, STMDA, STMDB, STMIA, STM...
    printRegisterList(MI, 3, STI, O);
    break;
  case 17:
    // LDC2L_OPTION, LDC2_OPTION, STC2L_OPTION, STC2_OPTION
    printCoprocOptionImm(MI, 3, STI, O);
    return;
    break;
  case 18:
    // LDC2L_POST, LDC2_POST, STC2L_POST, STC2_POST
    printPostIdxImm8s4Operand(MI, 3, STI, O);
    return;
    break;
  case 19:
    // LDCL_OFFSET, LDC_OFFSET, STCL_OFFSET, STC_OFFSET, t2LDC2L_OFFSET, t2LD...
    printAddrMode5Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 20:
    // LDCL_OPTION, LDCL_POST, LDC_OPTION, LDC_POST, LDRBT_POST_IMM, LDRBT_PO...
    printAddrMode7Operand(MI, 2, STI, O);
    break;
  case 21:
    // LDCL_PRE, LDC_PRE, STCL_PRE, STC_PRE, t2LDC2L_PRE, t2LDC2_PRE, t2LDCL_...
    printAddrMode5Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 22:
    // LDRB_PRE_IMM, LDR_PRE_IMM, STRB_PRE_IMM, STR_PRE_IMM
    printAddrModeImm12Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 23:
    // LDRB_PRE_REG, LDR_PRE_REG, STRB_PRE_REG, STR_PRE_REG
    printAddrMode2Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 24:
    // LDRBi12, LDRcp, LDRi12, STRBi12, STRi12, t2LDRBi12, t2LDRHi12, t2LDRSB...
    printAddrModeImm12Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 25:
    // LDRBrs, LDRrs, STRBrs, STRrs
    printAddrMode2Operand(MI, 1, STI, O);
    return;
    break;
  case 26:
    // LDRH, LDRSB, LDRSH, STRH
    printAddrMode3Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 27:
    // LDRH_PRE, LDRSB_PRE, LDRSH_PRE, STRH_PRE
    printAddrMode3Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 28:
    // MCR2
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 29:
    // MRSbanked, t2MRSbanked
    printBankedRegOperand(MI, 1, STI, O);
    return;
    break;
  case 30:
    // MVE_VBICimmi16, MVE_VBICimmi32, MVE_VORRimmi16, MVE_VORRimmi32
    printVMOVModImmOperand(MI, 2, STI, O);
    return;
    break;
  case 31:
    // MVE_VLDRBS16, MVE_VLDRBS32, MVE_VLDRBU16, MVE_VLDRBU32, MVE_VLDRBU8, M...
    printT2AddrModeImm8Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 32:
    // MVE_VLDRBS16_pre, MVE_VLDRBS32_pre, MVE_VLDRBU16_pre, MVE_VLDRBU32_pre...
    printT2AddrModeImm8Operand<false>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 33:
    // MVE_VLDRBS16_rq, MVE_VLDRBS32_rq, MVE_VLDRBU16_rq, MVE_VLDRBU32_rq, MV...
    printMveAddrModeRQOperand<0>(MI, 1, STI, O);
    return;
    break;
  case 34:
    // MVE_VLDRBU8_pre, MVE_VLDRHU16_pre, MVE_VLDRWU32_pre, MVE_VSTRBU8_pre, ...
    printT2AddrModeImm8Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 35:
    // MVE_VLDRDU64_rq, MVE_VSTRD64_rq
    printMveAddrModeRQOperand<3>(MI, 1, STI, O);
    return;
    break;
  case 36:
    // MVE_VLDRHS32_rq, MVE_VLDRHU16_rq, MVE_VLDRHU32_rq, MVE_VSTRH16_rq, MVE...
    printMveAddrModeRQOperand<1>(MI, 1, STI, O);
    return;
    break;
  case 37:
    // MVE_VLDRWU32_rq, MVE_VSTRW32_rq
    printMveAddrModeRQOperand<2>(MI, 1, STI, O);
    return;
    break;
  case 38:
    // MVE_VMOVimmi16, MVE_VMOVimmi32, MVE_VMOVimmi8, MVE_VMVNimmi16, MVE_VMV...
    printVMOVModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 39:
    // MVE_WLSTP_16, MVE_WLSTP_32, MVE_WLSTP_64, MVE_WLSTP_8, t2BFic, t2WLS
    printOperand(MI, Address, 2, STI, O);
    break;
  case 40:
    // SSAT, SSAT16, t2SSAT, t2SSAT16
    printImmPlusOneOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  case 41:
    // STLEXD, STREXD
    printGPRPairOperand(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 42:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST2LNd16, VST2LNd32, VST2LNd8, VST2LN...
    printNoHashImmediate(MI, 4, STI, O);
    break;
  case 43:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printNoHashImmediate(MI, 6, STI, O);
    break;
  case 44:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    break;
  case 45:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[]}, ";
    break;
  case 46:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printNoHashImmediate(MI, 10, STI, O);
    O << "], ";
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 10, STI, O);
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 10, STI, O);
    break;
  case 47:
    // VLD4DUPd16, VLD4DUPd16_UPD, VLD4DUPd32, VLD4DUPd32_UPD, VLD4DUPd8, VLD...
    O << "[], ";
    printOperand(MI, 3, STI, O);
    O << "[]}, ";
    break;
  case 48:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 3, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case 49:
    // VLDRD, VLDRS, VSTRD, VSTRS
    printAddrMode5Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 50:
    // VLDRH, VSTRH
    printAddrMode5FP16Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 51:
    // VST1LNd16, VST1LNd32, VST1LNd8
    printNoHashImmediate(MI, 3, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 52:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST3LNd16, VST3LNd32, VST3...
    printNoHashImmediate(MI, 5, STI, O);
    break;
  case 53:
    // VST3LNd16_UPD, VST3LNd32_UPD, VST3LNd8_UPD, VST3LNq16_UPD, VST3LNq32_U...
    printNoHashImmediate(MI, 7, STI, O);
    O << "], ";
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 7, STI, O);
    O << "], ";
    printOperand(MI, 6, STI, O);
    O << '[';
    printNoHashImmediate(MI, 7, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 54:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    printOperand(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 6, STI, O);
    break;
  case 55:
    // VTBL1
    printVectorListOne(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 56:
    // VTBL2
    printVectorListTwo(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 57:
    // VTBL3
    printVectorListThree(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 58:
    // VTBL4
    printVectorListFour(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 59:
    // VTBX1
    printVectorListOne(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 60:
    // VTBX2
    printVectorListTwo(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 61:
    // VTBX3
    printVectorListThree(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 62:
    // VTBX4
    printVectorListFour(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 63:
    // sysLDMDA_UPD, sysLDMDB_UPD, sysLDMIA_UPD, sysLDMIB_UPD, sysSTMDA_UPD, ...
    O << " ^";
    return;
    break;
  case 64:
    // t2BFLi, t2BFi
    printOperand(MI, Address, 1, STI, O);
    return;
    break;
  case 65:
    // t2LDRBpci, t2LDRHpci, t2LDRSBpci, t2LDRSHpci, t2LDRpci
    printThumbLdrLabelOperand(MI, 1, STI, O);
    return;
    break;
  case 66:
    // t2LDRBs, t2LDRHs, t2LDRSBs, t2LDRSHs, t2LDRs, t2STRBs, t2STRHs, t2STRs
    printT2AddrModeSoRegOperand(MI, 1, STI, O);
    return;
    break;
  case 67:
    // t2LDREX
    printT2AddrModeImm0_1020s4Operand(MI, 1, STI, O);
    return;
    break;
  case 68:
    // t2MRS_M
    printMSRMaskOperand(MI, 1, STI, O);
    return;
    break;
  case 69:
    // tADDspi, tSUBspi
    printThumbS4ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 70:
    // tADR
    printAdrLabelOperand<2>(MI, Address, 1, STI, O);
    return;
    break;
  case 71:
    // tASRri, tLSRri
    printThumbSRImm(MI, 3, STI, O);
    return;
    break;
  case 72:
    // tLDRBi, tSTRBi
    printThumbAddrModeImm5S1Operand(MI, 1, STI, O);
    return;
    break;
  case 73:
    // tLDRBr, tLDRHr, tLDRSB, tLDRSH, tLDRr, tSTRBr, tSTRHr, tSTRr
    printThumbAddrModeRROperand(MI, 1, STI, O);
    return;
    break;
  case 74:
    // tLDRHi, tSTRHi
    printThumbAddrModeImm5S2Operand(MI, 1, STI, O);
    return;
    break;
  case 75:
    // tLDRi, tSTRi
    printThumbAddrModeImm5S4Operand(MI, 1, STI, O);
    return;
    break;
  case 76:
    // tLDRpci
    printThumbLdrLabelOperand(MI, Address, 1, STI, O);
    return;
    break;
  case 77:
    // tLDRspi, tSTRspi
    printThumbAddrModeSPOperand(MI, 1, STI, O);
    return;
    break;
  }


  // Fragment 5 encoded into 5 bits for 27 unique commands.
  switch ((Bits >> 46) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    O << ", ";
    break;
  case 1:
    // LDRConstPool, RRXi, VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD2LN...
    return;
    break;
  case 2:
    // VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_fixed_Asm_8,...
    O << '!';
    return;
    break;
  case 3:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 4:
    // CDE_CX2DA, CDE_CX3D, CDE_CX3DA, VLD1DUPd16wb_register, VLD1DUPd32wb_re...
    printOperand(MI, 4, STI, O);
    break;
  case 5:
    // CDP, t2CDP, t2CDP2
    printCImmediate(MI, 2, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 6:
    // MCR, MCRR, VADDD, VDIVD, VMULD, VNMULD, VSUBD, t2MCR, t2MCR2, t2MCRR, ...
    printOperand(MI, 2, STI, O);
    break;
  case 7:
    // MRC, t2MRC, t2MRC2
    printOperand(MI, 0, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 8:
    // MVE_VLDRBS16_post, MVE_VLDRBS32_post, MVE_VLDRBU16_post, MVE_VLDRBU32_...
    printT2AddrModeImm8OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 9:
    // MVE_VMOV_from_lane_32, MVE_VMOV_from_lane_s16, MVE_VMOV_from_lane_s8, ...
    printVectorIndex(MI, 2, STI, O);
    return;
    break;
  case 10:
    // MVE_VMOV_q_rr, VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_U...
    printOperand(MI, 1, STI, O);
    break;
  case 11:
    // MVE_VSHLL_lws16bh, MVE_VSHLL_lws16th, MVE_VSHLL_lwu16bh, MVE_VSHLL_lwu...
    O << ", #16";
    return;
    break;
  case 12:
    // MVE_VSHLL_lws8bh, MVE_VSHLL_lws8th, MVE_VSHLL_lwu8bh, MVE_VSHLL_lwu8th
    O << ", #8";
    return;
    break;
  case 13:
    // SSAT, t2SSAT
    printShiftImmOperand(MI, 3, STI, O);
    return;
    break;
  case 14:
    // SXTB, SXTB16, SXTH, UXTB, UXTB16, UXTH, t2SXTB, t2SXTB16, t2SXTH, t2UX...
    printRotImmOperand(MI, 2, STI, O);
    return;
    break;
  case 15:
    // VCEQzv16i8, VCEQzv2f32, VCEQzv2i32, VCEQzv4f16, VCEQzv4f32, VCEQzv4i16...
    O << ", #0";
    return;
    break;
  case 16:
    // VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f32_indexed, VCMLAv8f16...
    printVectorIndex(MI, 4, STI, O);
    O << ", ";
    printComplexRotationOp<90, 0>(MI, 5, STI, O);
    return;
    break;
  case 17:
    // VFMALDI, VFMALQI, VFMSLDI, VFMSLQI
    printVectorIndex(MI, 3, STI, O);
    return;
    break;
  case 18:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << "]}, ";
    break;
  case 19:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32, VLD4LNd16, VLD4L...
    O << "], ";
    break;
  case 20:
    // VLD3DUPd16, VLD3DUPd32, VLD3DUPd8, VLD3DUPq16, VLD3DUPq32, VLD3DUPq8
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 21:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6Operand(MI, 4, STI, O);
    break;
  case 22:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case 23:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    O << "}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 24:
    // VST4LNd16_UPD, VST4LNd32_UPD, VST4LNd8_UPD, VST4LNq16_UPD, VST4LNq32_U...
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    printOperand(MI, 6, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    printOperand(MI, 7, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 25:
    // sysLDMDA, sysLDMDB, sysLDMIA, sysLDMIB, sysSTMDA, sysSTMDB, sysSTMIA, ...
    O << " ^";
    return;
    break;
  case 26:
    // t2MOVsra_flag, t2MOVsrl_flag
    O << ", #1";
    return;
    break;
  }


  // Fragment 6 encoded into 6 bits for 38 unique commands.
  switch ((Bits >> 51) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCrr, ADDrr, ANDrr, B...
    printOperand(MI, 2, STI, O);
    break;
  case 1:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printOperand(MI, 4, STI, O);
    break;
  case 2:
    // ADCri, ADDri, ANDri, BICri, EORri, ORRri, RSBri, RSCri, SBCri, SUBri
    printModImmOperand(MI, 2, STI, O);
    return;
    break;
  case 3:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, ORRrsi, RSBrsi, RSCrsi, SBCrsi...
    printSORegImmOperand(MI, 2, STI, O);
    return;
    break;
  case 4:
    // BFI, t2BFI
    printBitfieldInvMaskImmOperand(MI, 3, STI, O);
    return;
    break;
  case 5:
    // CDE_CX2DA, CDE_CX3D, VADDD, VDIVD, VLD1DUPd16wb_register, VLD1DUPd32wb...
    return;
    break;
  case 6:
    // CDE_CX3DA, MCR, MCRR, t2MCR, t2MCR2, t2MCRR, t2MCRR2
    O << ", ";
    break;
  case 7:
    // CDE_VCX2_vec, CDE_VCX3_vec, MVE_VABAVs16, MVE_VABAVs32, MVE_VABAVs8, M...
    printOperand(MI, 3, STI, O);
    break;
  case 8:
    // CDE_VCX3A_fpdp, CDE_VCX3A_fpsp, VST2LNd16_UPD, VST2LNd32_UPD, VST2LNd8...
    printOperand(MI, 5, STI, O);
    break;
  case 9:
    // LDCL_OPTION, LDC_OPTION, STCL_OPTION, STC_OPTION, t2LDC2L_OPTION, t2LD...
    printCoprocOptionImm(MI, 3, STI, O);
    return;
    break;
  case 10:
    // LDCL_POST, LDC_POST, STCL_POST, STC_POST, t2LDC2L_POST, t2LDC2_POST, t...
    printPostIdxImm8s4Operand(MI, 3, STI, O);
    return;
    break;
  case 11:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRT_POS...
    printAddrMode2OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 12:
    // LDRD, STRD
    printAddrMode3Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 13:
    // LDRD_POST, STRD_POST, t2LDRD_POST, t2STRD_POST
    printAddrMode7Operand(MI, 3, STI, O);
    break;
  case 14:
    // LDRD_PRE, STRD_PRE
    printAddrMode3Operand<true>(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 15:
    // LDRHTi, LDRSBTi, LDRSHTi, STRHTi
    printPostIdxImm8Operand(MI, 3, STI, O);
    return;
    break;
  case 16:
    // LDRHTr, LDRSBTr, LDRSHTr, STRHTr
    printPostIdxRegOperand(MI, 3, STI, O);
    return;
    break;
  case 17:
    // LDRH_POST, LDRSB_POST, LDRSH_POST, STRH_POST
    printAddrMode3OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 18:
    // MCRR2
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 19:
    // MVE_SQRSHRL, MVE_UQRSHLL
    printMveSaturateOp(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 4, STI, O);
    return;
    break;
  case 20:
    // MVE_VMOV_q_rr
    printVectorIndex(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 21:
    // STLEX, STLEXB, STLEXH, STREX, STREXB, STREXH, SWP, SWPB, t2LDAEXD, t2L...
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 22:
    // VCADDv2f32, VCADDv4f16, VCADDv4f32, VCADDv8f16
    printComplexRotationOp<180, 90>(MI, 3, STI, O);
    return;
    break;
  case 23:
    // VCMLAv2f32, VCMLAv4f16, VCMLAv4f32, VCMLAv8f16
    printComplexRotationOp<90, 0>(MI, 4, STI, O);
    return;
    break;
  case 24:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8...
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 25:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD
    printAddrMode6Operand(MI, 2, STI, O);
    printAddrMode6OffsetOperand(MI, 4, STI, O);
    return;
    break;
  case 26:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 2, STI, O);
    return;
    break;
  case 27:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    break;
  case 28:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 29:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printAddrMode6Operand(MI, 4, STI, O);
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 30:
    // VST4d16_UPD, VST4d32_UPD, VST4d8_UPD, VST4q16_UPD, VST4q32_UPD, VST4q8...
    printOperand(MI, 7, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 31:
    // t2ADCrs, t2ADDrs, t2ANDrs, t2BICrs, t2EORrs, t2ORNrs, t2ORRrs, t2RSBrs...
    printT2SOOperand(MI, 2, STI, O);
    return;
    break;
  case 32:
    // t2ASRri, t2LSRri
    printThumbSRImm(MI, 2, STI, O);
    return;
    break;
  case 33:
    // t2BFic, t2CSEL, t2CSINC, t2CSINV, t2CSNEG
    printMandatoryPredicateOperand(MI, 3, STI, O);
    return;
    break;
  case 34:
    // t2LDRD_PRE, t2STRD_PRE
    printT2AddrModeImm8s4Operand<true>(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 35:
    // t2LDRDi8, t2STRDi8
    printT2AddrModeImm8s4Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 36:
    // t2STREX
    printT2AddrModeImm0_1020s4Operand(MI, 2, STI, O);
    return;
    break;
  case 37:
    // tADDrSPi
    printThumbS4ImmOperand(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 7 encoded into 5 bits for 17 unique commands.
  switch ((Bits >> 57) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    return;
    break;
  case 1:
    // CDE_CX3A, CDE_VCX3A_vec, CDE_VCX3_vec, LDRD_POST, MLA, MLS, MVE_VCADDf...
    O << ", ";
    break;
  case 2:
    // CDE_CX3DA
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 3:
    // MCR, t2MCR, t2MCR2
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 4:
    // MCRR, t2MCRR, t2MCRR2
    printOperand(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 5:
    // MVE_VMOV_rr_q, VMULLslsv2i32, VMULLslsv4i16, VMULLsluv2i32, VMULLsluv4...
    printVectorIndex(MI, 3, STI, O);
    break;
  case 6:
    // PKHBT, t2PKHBT
    printPKHLSLShiftImm(MI, 3, STI, O);
    return;
    break;
  case 7:
    // PKHTB, t2PKHTB
    printPKHASRShiftImm(MI, 3, STI, O);
    return;
    break;
  case 8:
    // SXTAB, SXTAB16, SXTAH, UXTAB, UXTAB16, UXTAH, t2SXTAB, t2SXTAB16, t2SX...
    printRotImmOperand(MI, 3, STI, O);
    return;
    break;
  case 9:
    // USAT, t2USAT
    printShiftImmOperand(MI, 3, STI, O);
    return;
    break;
  case 10:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    O << "]}, ";
    printAddrMode6Operand(MI, 3, STI, O);
    printAddrMode6OffsetOperand(MI, 5, STI, O);
    return;
    break;
  case 11:
    // VLD3LNd16, VLD3LNd32, VLD3LNd8, VLD3LNq16, VLD3LNq32
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 12:
    // VLD3d16, VLD3d16_UPD, VLD3d32, VLD3d32_UPD, VLD3d8, VLD3d8_UPD, VLD3q1...
    O << "}, ";
    break;
  case 13:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32, VST2LNd16, VST2L...
    O << '[';
    break;
  case 14:
    // VMLALslsv2i32, VMLALslsv4i16, VMLALsluv2i32, VMLALsluv4i16, VMLAslfd, ...
    printVectorIndex(MI, 4, STI, O);
    return;
    break;
  case 15:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 16:
    // t2LDRD_POST, t2STRD_POST
    printT2AddrModeImm8s4OffsetOperand(MI, 4, STI, O);
    return;
    break;
  }

  switch (MI->getOpcode()) {
  default: llvm_unreachable("Unexpected opcode.");
  case ARM::CDE_CX3A:
  case ARM::CDE_VCX3A_vec:
  case ARM::CDE_VCX3_vec:
  case ARM::LDRD_POST:
  case ARM::MLA:
  case ARM::MLS:
  case ARM::MVE_VCADDf16:
  case ARM::MVE_VCADDf32:
  case ARM::MVE_VCADDi16:
  case ARM::MVE_VCADDi32:
  case ARM::MVE_VCADDi8:
  case ARM::MVE_VCMLAf16:
  case ARM::MVE_VCMLAf32:
  case ARM::MVE_VCMULf16:
  case ARM::MVE_VCMULf32:
  case ARM::MVE_VDWDUPu16:
  case ARM::MVE_VDWDUPu32:
  case ARM::MVE_VDWDUPu8:
  case ARM::MVE_VHCADDs16:
  case ARM::MVE_VHCADDs32:
  case ARM::MVE_VHCADDs8:
  case ARM::MVE_VIWDUPu16:
  case ARM::MVE_VIWDUPu32:
  case ARM::MVE_VIWDUPu8:
  case ARM::MVE_VMLALDAVas16:
  case ARM::MVE_VMLALDAVas32:
  case ARM::MVE_VMLALDAVau16:
  case ARM::MVE_VMLALDAVau32:
  case ARM::MVE_VMLALDAVaxs16:
  case ARM::MVE_VMLALDAVaxs32:
  case ARM::MVE_VMLALDAVs16:
  case ARM::MVE_VMLALDAVs32:
  case ARM::MVE_VMLALDAVu16:
  case ARM::MVE_VMLALDAVu32:
  case ARM::MVE_VMLALDAVxs16:
  case ARM::MVE_VMLALDAVxs32:
  case ARM::MVE_VMLSLDAVas16:
  case ARM::MVE_VMLSLDAVas32:
  case ARM::MVE_VMLSLDAVaxs16:
  case ARM::MVE_VMLSLDAVaxs32:
  case ARM::MVE_VMLSLDAVs16:
  case ARM::MVE_VMLSLDAVs32:
  case ARM::MVE_VMLSLDAVxs16:
  case ARM::MVE_VMLSLDAVxs32:
  case ARM::MVE_VRMLALDAVHas32:
  case ARM::MVE_VRMLALDAVHau32:
  case ARM::MVE_VRMLALDAVHaxs32:
  case ARM::MVE_VRMLALDAVHs32:
  case ARM::MVE_VRMLALDAVHu32:
  case ARM::MVE_VRMLALDAVHxs32:
  case ARM::MVE_VRMLSLDAVHas32:
  case ARM::MVE_VRMLSLDAVHaxs32:
  case ARM::MVE_VRMLSLDAVHs32:
  case ARM::MVE_VRMLSLDAVHxs32:
  case ARM::SBFX:
  case ARM::SMLABB:
  case ARM::SMLABT:
  case ARM::SMLAD:
  case ARM::SMLADX:
  case ARM::SMLALBB:
  case ARM::SMLALBT:
  case ARM::SMLALD:
  case ARM::SMLALDX:
  case ARM::SMLALTB:
  case ARM::SMLALTT:
  case ARM::SMLATB:
  case ARM::SMLATT:
  case ARM::SMLAWB:
  case ARM::SMLAWT:
  case ARM::SMLSD:
  case ARM::SMLSDX:
  case ARM::SMLSLD:
  case ARM::SMLSLDX:
  case ARM::SMMLA:
  case ARM::SMMLAR:
  case ARM::SMMLS:
  case ARM::SMMLSR:
  case ARM::SMULL:
  case ARM::STRD_POST:
  case ARM::UBFX:
  case ARM::UMAAL:
  case ARM::UMULL:
  case ARM::USADA8:
  case ARM::VEXTd16:
  case ARM::VEXTd32:
  case ARM::VEXTd8:
  case ARM::VEXTq16:
  case ARM::VEXTq32:
  case ARM::VEXTq64:
  case ARM::VEXTq8:
  case ARM::VLD3d16:
  case ARM::VLD3d32:
  case ARM::VLD3d8:
  case ARM::VLD3q16:
  case ARM::VLD3q32:
  case ARM::VLD3q8:
  case ARM::VMOVRRS:
  case ARM::VMOVSRR:
  case ARM::VST3d16:
  case ARM::VST3d32:
  case ARM::VST3d8:
  case ARM::VST3q16:
  case ARM::VST3q32:
  case ARM::VST3q8:
  case ARM::t2MLA:
  case ARM::t2MLS:
  case ARM::t2SBFX:
  case ARM::t2SMLABB:
  case ARM::t2SMLABT:
  case ARM::t2SMLAD:
  case ARM::t2SMLADX:
  case ARM::t2SMLAL:
  case ARM::t2SMLALBB:
  case ARM::t2SMLALBT:
  case ARM::t2SMLALD:
  case ARM::t2SMLALDX:
  case ARM::t2SMLALTB:
  case ARM::t2SMLALTT:
  case ARM::t2SMLATB:
  case ARM::t2SMLATT:
  case ARM::t2SMLAWB:
  case ARM::t2SMLAWT:
  case ARM::t2SMLSD:
  case ARM::t2SMLSDX:
  case ARM::t2SMLSLD:
  case ARM::t2SMLSLDX:
  case ARM::t2SMMLA:
  case ARM::t2SMMLAR:
  case ARM::t2SMMLS:
  case ARM::t2SMMLSR:
  case ARM::t2SMULL:
  case ARM::t2STLEXD:
  case ARM::t2STREXD:
  case ARM::t2UBFX:
  case ARM::t2UMAAL:
  case ARM::t2UMLAL:
  case ARM::t2UMULL:
  case ARM::t2USADA8:
    switch (MI->getOpcode()) {
    default: llvm_unreachable("Unexpected opcode.");
    case ARM::CDE_CX3A:
    case ARM::CDE_VCX3A_vec:
    case ARM::MVE_VMLALDAVas16:
    case ARM::MVE_VMLALDAVas32:
    case ARM::MVE_VMLALDAVau16:
    case ARM::MVE_VMLALDAVau32:
    case ARM::MVE_VMLALDAVaxs16:
    case ARM::MVE_VMLALDAVaxs32:
    case ARM::MVE_VMLSLDAVas16:
    case ARM::MVE_VMLSLDAVas32:
    case ARM::MVE_VMLSLDAVaxs16:
    case ARM::MVE_VMLSLDAVaxs32:
    case ARM::MVE_VRMLALDAVHas32:
    case ARM::MVE_VRMLALDAVHau32:
    case ARM::MVE_VRMLALDAVHaxs32:
    case ARM::MVE_VRMLSLDAVHas32:
    case ARM::MVE_VRMLSLDAVHaxs32:
      printOperand(MI, 5, STI, O);
      break;
    case ARM::CDE_VCX3_vec:
    case ARM::MVE_VDWDUPu16:
    case ARM::MVE_VDWDUPu32:
    case ARM::MVE_VDWDUPu8:
    case ARM::MVE_VIWDUPu16:
    case ARM::MVE_VIWDUPu32:
    case ARM::MVE_VIWDUPu8:
      printOperand(MI, 4, STI, O);
      break;
    case ARM::LDRD_POST:
    case ARM::STRD_POST:
      printAddrMode3OffsetOperand(MI, 4, STI, O);
      break;
    case ARM::MLA:
    case ARM::MLS:
    case ARM::MVE_VMLALDAVs16:
    case ARM::MVE_VMLALDAVs32:
    case ARM::MVE_VMLALDAVu16:
    case ARM::MVE_VMLALDAVu32:
    case ARM::MVE_VMLALDAVxs16:
    case ARM::MVE_VMLALDAVxs32:
    case ARM::MVE_VMLSLDAVs16:
    case ARM::MVE_VMLSLDAVs32:
    case ARM::MVE_VMLSLDAVxs16:
    case ARM::MVE_VMLSLDAVxs32:
    case ARM::MVE_VRMLALDAVHs32:
    case ARM::MVE_VRMLALDAVHu32:
    case ARM::MVE_VRMLALDAVHxs32:
    case ARM::MVE_VRMLSLDAVHs32:
    case ARM::MVE_VRMLSLDAVHxs32:
    case ARM::SMLABB:
    case ARM::SMLABT:
    case ARM::SMLAD:
    case ARM::SMLADX:
    case ARM::SMLALBB:
    case ARM::SMLALBT:
    case ARM::SMLALD:
    case ARM::SMLALDX:
    case ARM::SMLALTB:
    case ARM::SMLALTT:
    case ARM::SMLATB:
    case ARM::SMLATT:
    case ARM::SMLAWB:
    case ARM::SMLAWT:
    case ARM::SMLSD:
    case ARM::SMLSDX:
    case ARM::SMLSLD:
    case ARM::SMLSLDX:
    case ARM::SMMLA:
    case ARM::SMMLAR:
    case ARM::SMMLS:
    case ARM::SMMLSR:
    case ARM::SMULL:
    case ARM::UMAAL:
    case ARM::UMULL:
    case ARM::USADA8:
    case ARM::VEXTd16:
    case ARM::VEXTd32:
    case ARM::VEXTd8:
    case ARM::VEXTq16:
    case ARM::VEXTq32:
    case ARM::VEXTq64:
    case ARM::VEXTq8:
    case ARM::VMOVRRS:
    case ARM::VMOVSRR:
    case ARM::t2MLA:
    case ARM::t2MLS:
    case ARM::t2SMLABB:
    case ARM::t2SMLABT:
    case ARM::t2SMLAD:
    case ARM::t2SMLADX:
    case ARM::t2SMLAL:
    case ARM::t2SMLALBB:
    case ARM::t2SMLALBT:
    case ARM::t2SMLALD:
    case ARM::t2SMLALDX:
    case ARM::t2SMLALTB:
    case ARM::t2SMLALTT:
    case ARM::t2SMLATB:
    case ARM::t2SMLATT:
    case ARM::t2SMLAWB:
    case ARM::t2SMLAWT:
    case ARM::t2SMLSD:
    case ARM::t2SMLSDX:
    case ARM::t2SMLSLD:
    case ARM::t2SMLSLDX:
    case ARM::t2SMMLA:
    case ARM::t2SMMLAR:
    case ARM::t2SMMLS:
    case ARM::t2SMMLSR:
    case ARM::t2SMULL:
    case ARM::t2UMAAL:
    case ARM::t2UMLAL:
    case ARM::t2UMULL:
    case ARM::t2USADA8:
      printOperand(MI, 3, STI, O);
      break;
    case ARM::MVE_VCADDf16:
    case ARM::MVE_VCADDf32:
    case ARM::MVE_VCADDi16:
    case ARM::MVE_VCADDi32:
    case ARM::MVE_VCADDi8:
    case ARM::MVE_VHCADDs16:
    case ARM::MVE_VHCADDs32:
    case ARM::MVE_VHCADDs8:
      printComplexRotationOp<180, 90>(MI, 3, STI, O);
      break;
    case ARM::MVE_VCMLAf16:
    case ARM::MVE_VCMLAf32:
      printComplexRotationOp<90, 0>(MI, 4, STI, O);
      break;
    case ARM::MVE_VCMULf16:
    case ARM::MVE_VCMULf32:
      printComplexRotationOp<90, 0>(MI, 3, STI, O);
      break;
    case ARM::SBFX:
    case ARM::UBFX:
    case ARM::t2SBFX:
    case ARM::t2UBFX:
      printImmPlusOneOperand(MI, 3, STI, O);
      break;
    case ARM::VLD3d16:
    case ARM::VLD3d32:
    case ARM::VLD3d8:
    case ARM::VLD3q16:
    case ARM::VLD3q32:
    case ARM::VLD3q8:
      printAddrMode6Operand(MI, 3, STI, O);
      break;
    case ARM::VST3d16:
    case ARM::VST3d32:
    case ARM::VST3d8:
    case ARM::VST3q16:
    case ARM::VST3q32:
    case ARM::VST3q8:
      printAddrMode6Operand(MI, 0, STI, O);
      break;
    case ARM::t2STLEXD:
    case ARM::t2STREXD:
      printAddrMode7Operand(MI, 3, STI, O);
      break;
    }
    return;
    break;
  case ARM::MVE_VMOV_rr_q:
    O << ", ";
    printOperand(MI, 2, STI, O);
    printVectorIndex(MI, 4, STI, O);
    return;
    break;
  case ARM::VLD3d16_UPD:
  case ARM::VLD3d32_UPD:
  case ARM::VLD3d8_UPD:
  case ARM::VLD3q16_UPD:
  case ARM::VLD3q32_UPD:
  case ARM::VLD3q8_UPD:
    printAddrMode6Operand(MI, 4, STI, O);
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case ARM::VLD4LNd16:
  case ARM::VLD4LNd32:
  case ARM::VLD4LNd8:
  case ARM::VLD4LNq16:
  case ARM::VLD4LNq32:
    printNoHashImmediate(MI, 10, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 4, STI, O);
    return;
    break;
  case ARM::VLD4d16:
  case ARM::VLD4d32:
  case ARM::VLD4d8:
  case ARM::VLD4q16:
  case ARM::VLD4q32:
  case ARM::VLD4q8:
    printOperand(MI, 3, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 4, STI, O);
    return;
    break;
  case ARM::VLD4d16_UPD:
  case ARM::VLD4d32_UPD:
  case ARM::VLD4d8_UPD:
  case ARM::VLD4q16_UPD:
  case ARM::VLD4q32_UPD:
  case ARM::VLD4q8_UPD:
    printOperand(MI, 3, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case ARM::VMULLslsv2i32:
  case ARM::VMULLslsv4i16:
  case ARM::VMULLsluv2i32:
  case ARM::VMULLsluv4i16:
  case ARM::VMULslfd:
  case ARM::VMULslfq:
  case ARM::VMULslhd:
  case ARM::VMULslhq:
  case ARM::VMULslv2i32:
  case ARM::VMULslv4i16:
  case ARM::VMULslv4i32:
  case ARM::VMULslv8i16:
  case ARM::VQDMULHslv2i32:
  case ARM::VQDMULHslv4i16:
  case ARM::VQDMULHslv4i32:
  case ARM::VQDMULHslv8i16:
  case ARM::VQDMULLslv2i32:
  case ARM::VQDMULLslv4i16:
  case ARM::VQRDMULHslv2i32:
  case ARM::VQRDMULHslv4i16:
  case ARM::VQRDMULHslv4i32:
  case ARM::VQRDMULHslv8i16:
    return;
    break;
  case ARM::VST2LNd16:
  case ARM::VST2LNd32:
  case ARM::VST2LNd8:
  case ARM::VST2LNq16:
  case ARM::VST2LNq32:
    printNoHashImmediate(MI, 4, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case ARM::VST2LNd16_UPD:
  case ARM::VST2LNd32_UPD:
  case ARM::VST2LNd8_UPD:
  case ARM::VST2LNq16_UPD:
  case ARM::VST2LNq32_UPD:
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case ARM::VST3LNd16:
  case ARM::VST3LNd32:
  case ARM::VST3LNd8:
  case ARM::VST3LNq16:
  case ARM::VST3LNq32:
    printNoHashImmediate(MI, 5, STI, O);
    O << "], ";
    printOperand(MI, 4, STI, O);
    O << '[';
    printNoHashImmediate(MI, 5, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case ARM::VST4LNd16:
  case ARM::VST4LNd32:
  case ARM::VST4LNd8:
  case ARM::VST4LNq16:
  case ARM::VST4LNq32:
    printNoHashImmediate(MI, 6, STI, O);
    O << "], ";
    printOperand(MI, 4, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "], ";
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case ARM::VST4d16:
  case ARM::VST4d32:
  case ARM::VST4d8:
  case ARM::VST4q16:
  case ARM::VST4q32:
  case ARM::VST4q8:
    printOperand(MI, 5, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  }
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *ARMInstPrinter::
getRegisterName(unsigned RegNo, unsigned AltIdx) {
  assert(RegNo && RegNo < 295 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrsNoRegAltName[] = {
  /* 0 */ "D4_D6_D8_D10\0"
  /* 13 */ "D7_D8_D9_D10\0"
  /* 26 */ "Q7_Q8_Q9_Q10\0"
  /* 39 */ "d10\0"
  /* 43 */ "q10\0"
  /* 47 */ "r10\0"
  /* 51 */ "s10\0"
  /* 55 */ "D14_D16_D18_D20\0"
  /* 71 */ "D17_D18_D19_D20\0"
  /* 87 */ "d20\0"
  /* 91 */ "s20\0"
  /* 95 */ "D24_D26_D28_D30\0"
  /* 111 */ "D27_D28_D29_D30\0"
  /* 127 */ "d30\0"
  /* 131 */ "s30\0"
  /* 135 */ "d0\0"
  /* 138 */ "p0\0"
  /* 141 */ "q0\0"
  /* 144 */ "mvfr0\0"
  /* 150 */ "s0\0"
  /* 153 */ "D9_D10_D11\0"
  /* 164 */ "D5_D7_D9_D11\0"
  /* 177 */ "Q8_Q9_Q10_Q11\0"
  /* 191 */ "R10_R11\0"
  /* 199 */ "d11\0"
  /* 203 */ "q11\0"
  /* 207 */ "r11\0"
  /* 211 */ "s11\0"
  /* 215 */ "D19_D20_D21\0"
  /* 227 */ "D15_D17_D19_D21\0"
  /* 243 */ "d21\0"
  /* 247 */ "s21\0"
  /* 251 */ "D29_D30_D31\0"
  /* 263 */ "D25_D27_D29_D31\0"
  /* 279 */ "d31\0"
  /* 283 */ "s31\0"
  /* 287 */ "Q0_Q1\0"
  /* 293 */ "R0_R1\0"
  /* 299 */ "d1\0"
  /* 302 */ "q1\0"
  /* 305 */ "mvfr1\0"
  /* 311 */ "s1\0"
  /* 314 */ "D6_D8_D10_D12\0"
  /* 328 */ "D9_D10_D11_D12\0"
  /* 343 */ "Q9_Q10_Q11_Q12\0"
  /* 358 */ "d12\0"
  /* 362 */ "q12\0"
  /* 366 */ "r12\0"
  /* 370 */ "s12\0"
  /* 374 */ "D16_D18_D20_D22\0"
  /* 390 */ "D19_D20_D21_D22\0"
  /* 406 */ "d22\0"
  /* 410 */ "s22\0"
  /* 414 */ "D0_D2\0"
  /* 420 */ "D0_D1_D2\0"
  /* 429 */ "Q1_Q2\0"
  /* 435 */ "d2\0"
  /* 438 */ "q2\0"
  /* 441 */ "mvfr2\0"
  /* 447 */ "s2\0"
  /* 450 */ "fpinst2\0"
  /* 458 */ "D7_D9_D11_D13\0"
  /* 472 */ "D11_D12_D13\0"
  /* 484 */ "Q10_Q11_Q12_Q13\0"
  /* 500 */ "d13\0"
  /* 504 */ "q13\0"
  /* 508 */ "s13\0"
  /* 512 */ "D17_D19_D21_D23\0"
  /* 528 */ "D21_D22_D23\0"
  /* 540 */ "d23\0"
  /* 544 */ "s23\0"
  /* 548 */ "D1_D3\0"
  /* 554 */ "D1_D2_D3\0"
  /* 563 */ "Q0_Q1_Q2_Q3\0"
  /* 575 */ "R2_R3\0"
  /* 581 */ "d3\0"
  /* 584 */ "q3\0"
  /* 587 */ "r3\0"
  /* 590 */ "s3\0"
  /* 593 */ "D8_D10_D12_D14\0"
  /* 608 */ "D11_D12_D13_D14\0"
  /* 624 */ "Q11_Q12_Q13_Q14\0"
  /* 640 */ "d14\0"
  /* 644 */ "q14\0"
  /* 648 */ "s14\0"
  /* 652 */ "D18_D20_D22_D24\0"
  /* 668 */ "D21_D22_D23_D24\0"
  /* 684 */ "d24\0"
  /* 688 */ "s24\0"
  /* 692 */ "D0_D2_D4\0"
  /* 701 */ "D1_D2_D3_D4\0"
  /* 713 */ "Q1_Q2_Q3_Q4\0"
  /* 725 */ "d4\0"
  /* 728 */ "q4\0"
  /* 731 */ "r4\0"
  /* 734 */ "s4\0"
  /* 737 */ "D9_D11_D13_D15\0"
  /* 752 */ "D13_D14_D15\0"
  /* 764 */ "Q12_Q13_Q14_Q15\0"
  /* 780 */ "d15\0"
  /* 784 */ "q15\0"
  /* 788 */ "s15\0"
  /* 792 */ "D19_D21_D23_D25\0"
  /* 808 */ "D23_D24_D25\0"
  /* 820 */ "d25\0"
  /* 824 */ "s25\0"
  /* 828 */ "D1_D3_D5\0"
  /* 837 */ "D3_D4_D5\0"
  /* 846 */ "Q2_Q3_Q4_Q5\0"
  /* 858 */ "R4_R5\0"
  /* 864 */ "d5\0"
  /* 867 */ "q5\0"
  /* 870 */ "r5\0"
  /* 873 */ "s5\0"
  /* 876 */ "D10_D12_D14_D16\0"
  /* 892 */ "D13_D14_D15_D16\0"
  /* 908 */ "d16\0"
  /* 912 */ "s16\0"
  /* 916 */ "D20_D22_D24_D26\0"
  /* 932 */ "D23_D24_D25_D26\0"
  /* 948 */ "d26\0"
  /* 952 */ "s26\0"
  /* 956 */ "D0_D2_D4_D6\0"
  /* 968 */ "D3_D4_D5_D6\0"
  /* 980 */ "Q3_Q4_Q5_Q6\0"
  /* 992 */ "d6\0"
  /* 995 */ "q6\0"
  /* 998 */ "r6\0"
  /* 1001 */ "s6\0"
  /* 1004 */ "D11_D13_D15_D17\0"
  /* 1020 */ "D15_D16_D17\0"
  /* 1032 */ "d17\0"
  /* 1036 */ "s17\0"
  /* 1040 */ "D21_D23_D25_D27\0"
  /* 1056 */ "D25_D26_D27\0"
  /* 1068 */ "d27\0"
  /* 1072 */ "s27\0"
  /* 1076 */ "D1_D3_D5_D7\0"
  /* 1088 */ "D5_D6_D7\0"
  /* 1097 */ "Q4_Q5_Q6_Q7\0"
  /* 1109 */ "R6_R7\0"
  /* 1115 */ "d7\0"
  /* 1118 */ "q7\0"
  /* 1121 */ "r7\0"
  /* 1124 */ "s7\0"
  /* 1127 */ "D12_D14_D16_D18\0"
  /* 1143 */ "D15_D16_D17_D18\0"
  /* 1159 */ "d18\0"
  /* 1163 */ "s18\0"
  /* 1167 */ "D22_D24_D26_D28\0"
  /* 1183 */ "D25_D26_D27_D28\0"
  /* 1199 */ "d28\0"
  /* 1203 */ "s28\0"
  /* 1207 */ "D2_D4_D6_D8\0"
  /* 1219 */ "D5_D6_D7_D8\0"
  /* 1231 */ "Q5_Q6_Q7_Q8\0"
  /* 1243 */ "d8\0"
  /* 1246 */ "q8\0"
  /* 1249 */ "r8\0"
  /* 1252 */ "s8\0"
  /* 1255 */ "D13_D15_D17_D19\0"
  /* 1271 */ "D17_D18_D19\0"
  /* 1283 */ "d19\0"
  /* 1287 */ "s19\0"
  /* 1291 */ "D23_D25_D27_D29\0"
  /* 1307 */ "D27_D28_D29\0"
  /* 1319 */ "d29\0"
  /* 1323 */ "s29\0"
  /* 1327 */ "D3_D5_D7_D9\0"
  /* 1339 */ "D7_D8_D9\0"
  /* 1348 */ "Q6_Q7_Q8_Q9\0"
  /* 1360 */ "R8_R9\0"
  /* 1366 */ "d9\0"
  /* 1369 */ "q9\0"
  /* 1372 */ "r9\0"
  /* 1375 */ "s9\0"
  /* 1378 */ "R12_SP\0"
  /* 1385 */ "pc\0"
  /* 1388 */ "fpscr_nzcvqc\0"
  /* 1401 */ "fpexc\0"
  /* 1407 */ "fpsid\0"
  /* 1413 */ "itstate\0"
  /* 1421 */ "sp\0"
  /* 1424 */ "fpscr\0"
  /* 1430 */ "lr\0"
  /* 1433 */ "vpr\0"
  /* 1437 */ "apsr\0"
  /* 1442 */ "cpsr\0"
  /* 1447 */ "spsr\0"
  /* 1452 */ "zr\0"
  /* 1455 */ "fpcxtns\0"
  /* 1463 */ "fpcxts\0"
  /* 1470 */ "fpinst\0"
  /* 1477 */ "fpscr_nzcv\0"
  /* 1488 */ "apsr_nzcv\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint16_t RegAsmOffsetNoRegAltName[] = {
    1437, 1488, 1442, 1455, 1463, 1401, 1470, 1424, 1477, 1388, 1407, 1413, 1430, 1385, 
    1421, 1447, 1433, 1452, 135, 299, 435, 581, 725, 864, 992, 1115, 1243, 1366, 
    39, 199, 358, 500, 640, 780, 908, 1032, 1159, 1283, 87, 243, 406, 540, 
    684, 820, 948, 1068, 1199, 1319, 127, 279, 450, 144, 305, 441, 138, 141, 
    302, 438, 584, 728, 867, 995, 1118, 1246, 1369, 43, 203, 362, 504, 644, 
    784, 147, 308, 444, 587, 731, 870, 998, 1121, 1249, 1372, 47, 207, 366, 
    150, 311, 447, 590, 734, 873, 1001, 1124, 1252, 1375, 51, 211, 370, 508, 
    648, 788, 912, 1036, 1163, 1287, 91, 247, 410, 544, 688, 824, 952, 1072, 
    1203, 1323, 131, 283, 414, 548, 695, 831, 962, 1082, 1213, 1333, 6, 170, 
    320, 464, 600, 744, 884, 1012, 1135, 1263, 63, 235, 382, 520, 660, 800, 
    924, 1048, 1175, 1299, 103, 271, 287, 429, 569, 719, 852, 986, 1103, 1237, 
    1354, 32, 183, 350, 492, 632, 772, 563, 713, 846, 980, 1097, 1231, 1348, 
    26, 177, 343, 484, 624, 764, 293, 575, 858, 1109, 1360, 191, 1378, 420, 
    554, 704, 837, 971, 1088, 1222, 1339, 16, 153, 331, 472, 612, 752, 896, 
    1020, 1147, 1271, 75, 215, 394, 528, 672, 808, 936, 1056, 1187, 1307, 115, 
    251, 692, 828, 959, 1079, 1210, 1330, 3, 167, 317, 461, 596, 740, 880, 
    1008, 1131, 1259, 59, 231, 378, 516, 656, 796, 920, 1044, 1171, 1295, 99, 
    267, 956, 1076, 1207, 1327, 0, 164, 314, 458, 593, 737, 876, 1004, 1127, 
    1255, 55, 227, 374, 512, 652, 792, 916, 1040, 1167, 1291, 95, 263, 423, 
    707, 974, 1225, 19, 335, 616, 900, 1151, 79, 398, 676, 940, 1191, 119, 
    701, 968, 1219, 13, 328, 608, 892, 1143, 71, 390, 668, 932, 1183, 111, 
  };


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrsRegNamesRaw[] = {
  /* 0 */ "r13\0"
  /* 4 */ "r14\0"
  /* 8 */ "r15\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint8_t RegAsmOffsetRegNamesRaw[] = {
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 8, 
    0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
  };

  switch(AltIdx) {
  default: llvm_unreachable("Invalid register alt name index!");
  case ARM::NoRegAltName:
    assert(*(AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1]) &&
           "Invalid alt name index for register!");
    return AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1];
  case ARM::RegNamesRaw:
    if (!*(AsmStrsRegNamesRaw+RegAsmOffsetRegNamesRaw[RegNo-1]))
      return getRegisterName(RegNo, ARM::NoRegAltName);
    return AsmStrsRegNamesRaw+RegAsmOffsetRegNamesRaw[RegNo-1];
  }
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool ARMInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {ARM::DSB, 0, 3 },
    {ARM::HINT, 3, 8 },
    {ARM::MVE_VMLADAVas16, 11, 1 },
    {ARM::MVE_VMLADAVas32, 12, 1 },
    {ARM::MVE_VMLADAVas8, 13, 1 },
    {ARM::MVE_VMLADAVau16, 14, 1 },
    {ARM::MVE_VMLADAVau32, 15, 1 },
    {ARM::MVE_VMLADAVau8, 16, 1 },
    {ARM::MVE_VMLADAVs16, 17, 1 },
    {ARM::MVE_VMLADAVs32, 18, 1 },
    {ARM::MVE_VMLADAVs8, 19, 1 },
    {ARM::MVE_VMLADAVu16, 20, 1 },
    {ARM::MVE_VMLADAVu32, 21, 1 },
    {ARM::MVE_VMLADAVu8, 22, 1 },
    {ARM::MVE_VMLALDAVas16, 23, 1 },
    {ARM::MVE_VMLALDAVas32, 24, 1 },
    {ARM::MVE_VMLALDAVau16, 25, 1 },
    {ARM::MVE_VMLALDAVau32, 26, 1 },
    {ARM::MVE_VMLALDAVs16, 27, 1 },
    {ARM::MVE_VMLALDAVs32, 28, 1 },
    {ARM::MVE_VMLALDAVu16, 29, 1 },
    {ARM::MVE_VMLALDAVu32, 30, 1 },
    {ARM::MVE_VORR, 31, 1 },
    {ARM::MVE_VRMLALDAVHas32, 32, 1 },
    {ARM::MVE_VRMLALDAVHau32, 33, 1 },
    {ARM::MVE_VRMLALDAVHs32, 34, 1 },
    {ARM::MVE_VRMLALDAVHu32, 35, 1 },
    {ARM::t2CSINC, 36, 2 },
    {ARM::t2CSINV, 38, 2 },
    {ARM::t2CSNEG, 40, 1 },
    {ARM::t2DSB, 41, 3 },
    {ARM::t2HINT, 44, 8 },
    {ARM::t2SUBS_PC_LR, 52, 1 },
    {ARM::tHINT, 53, 6 },
  };

  static const AliasPattern Patterns[] = {
    // ARM::DSB - 0
    {0, 0, 1, 3 },
    {5, 3, 1, 3 },
    {11, 6, 1, 3 },
    // ARM::HINT - 3
    {15, 9, 3, 3 },
    {23, 12, 3, 3 },
    {33, 15, 3, 3 },
    {41, 18, 3, 3 },
    {49, 21, 3, 3 },
    {57, 24, 3, 3 },
    {66, 27, 3, 3 },
    {74, 30, 3, 3 },
    // ARM::MVE_VMLADAVas16 - 11
    {83, 33, 6, 6 },
    // ARM::MVE_VMLADAVas32 - 12
    {109, 39, 6, 6 },
    // ARM::MVE_VMLADAVas8 - 13
    {135, 45, 6, 6 },
    // ARM::MVE_VMLADAVau16 - 14
    {160, 51, 6, 6 },
    // ARM::MVE_VMLADAVau32 - 15
    {186, 57, 6, 6 },
    // ARM::MVE_VMLADAVau8 - 16
    {212, 63, 6, 6 },
    // ARM::MVE_VMLADAVs16 - 17
    {237, 69, 5, 5 },
    // ARM::MVE_VMLADAVs32 - 18
    {262, 74, 5, 5 },
    // ARM::MVE_VMLADAVs8 - 19
    {287, 79, 5, 5 },
    // ARM::MVE_VMLADAVu16 - 20
    {311, 84, 5, 5 },
    // ARM::MVE_VMLADAVu32 - 21
    {336, 89, 5, 5 },
    // ARM::MVE_VMLADAVu8 - 22
    {361, 94, 5, 5 },
    // ARM::MVE_VMLALDAVas16 - 23
    {385, 99, 8, 8 },
    // ARM::MVE_VMLALDAVas32 - 24
    {416, 107, 8, 8 },
    // ARM::MVE_VMLALDAVau16 - 25
    {447, 115, 8, 8 },
    // ARM::MVE_VMLALDAVau32 - 26
    {478, 123, 8, 8 },
    // ARM::MVE_VMLALDAVs16 - 27
    {509, 131, 6, 6 },
    // ARM::MVE_VMLALDAVs32 - 28
    {539, 137, 6, 6 },
    // ARM::MVE_VMLALDAVu16 - 29
    {569, 143, 6, 6 },
    // ARM::MVE_VMLALDAVu32 - 30
    {599, 149, 6, 6 },
    // ARM::MVE_VORR - 31
    {629, 155, 6, 5 },
    // ARM::MVE_VRMLALDAVHas32 - 32
    {645, 160, 8, 8 },
    // ARM::MVE_VRMLALDAVHau32 - 33
    {678, 168, 8, 8 },
    // ARM::MVE_VRMLALDAVHs32 - 34
    {711, 176, 6, 6 },
    // ARM::MVE_VRMLALDAVHu32 - 35
    {743, 182, 6, 6 },
    // ARM::t2CSINC - 36
    {775, 188, 4, 4 },
    {789, 192, 4, 4 },
    // ARM::t2CSINV - 38
    {807, 196, 4, 4 },
    {822, 200, 4, 4 },
    // ARM::t2CSNEG - 40
    {840, 204, 4, 4 },
    // ARM::t2DSB - 41
    {0, 208, 3, 6 },
    {5, 214, 3, 6 },
    {858, 220, 3, 2 },
    // ARM::t2HINT - 44
    {866, 222, 3, 3 },
    {876, 225, 3, 3 },
    {888, 228, 3, 3 },
    {898, 231, 3, 3 },
    {908, 234, 3, 3 },
    {918, 237, 3, 4 },
    {929, 241, 3, 4 },
    {74, 245, 3, 3 },
    // ARM::t2SUBS_PC_LR - 52
    {939, 248, 3, 4 },
    // ARM::tHINT - 53
    {15, 252, 3, 3 },
    {23, 255, 3, 3 },
    {33, 258, 3, 3 },
    {41, 261, 3, 3 },
    {49, 264, 3, 3 },
    {57, 267, 3, 4 },
  };

  static const AliasPatternCond Conds[] = {
    // (DSB 0) - 0
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    // (DSB 4) - 3
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    // (DSB 12) - 6
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureDFB},
    // (HINT 0, pred:$p) - 9
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 1, pred:$p) - 12
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 2, pred:$p) - 15
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 3, pred:$p) - 18
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 4, pred:$p) - 21
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 5, pred:$p) - 24
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV8Ops},
    // (HINT 16, pred:$p) - 27
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureRAS},
    // (HINT 20, pred:$p) - 30
    {AliasPatternCond::K_Imm, uint32_t(20)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (MVE_VMLADAVas16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 33
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVas32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 39
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVas8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 45
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVau16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 51
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVau32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 57
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVau8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 63
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVs16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 69
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVs32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 74
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVs8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 79
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVu16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 84
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVu32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 89
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVu8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 94
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVas16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 99
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVas32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 107
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVau16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 115
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVau32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 123
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVs16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 131
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVs32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 137
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVu16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 143
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVu32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 149
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VORR MQPR:$Qd, MQPR:$Qm, MQPR:$Qm, vpred_r:$vp) - 155
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHas32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 160
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHau32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 168
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHs32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 176
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHu32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 182
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (t2CSINC rGPR:$Rd, ZR, ZR, pred_noal_inv:$fcond) - 188
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSINC rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 192
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::GPRwithZRnospRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSINV rGPR:$Rd, ZR, ZR, pred_noal_inv:$fcond) - 196
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSINV rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 200
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::GPRwithZRnospRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSNEG rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 204
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::GPRwithZRnospRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2DSB 0, 14, 0) - 208
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2DSB 4, 14, 0) - 214
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2DSB 12, pred:$p) - 220
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Feature, ARM::FeatureDFB},
    // (t2HINT 0, pred:$p) - 222
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 1, pred:$p) - 225
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 2, pred:$p) - 228
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 3, pred:$p) - 231
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 4, pred:$p) - 234
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 5, pred:$p) - 237
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::HasV8Ops},
    // (t2HINT 16, pred:$p) - 241
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::FeatureRAS},
    // (t2HINT 20, pred:$p) - 245
    {AliasPatternCond::K_Imm, uint32_t(20)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2SUBS_PC_LR 0, pred:$p) - 248
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::FeatureVirtualization},
    // (tHINT 0, pred:$p) - 252
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 1, pred:$p) - 255
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 2, pred:$p) - 258
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 3, pred:$p) - 261
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 4, pred:$p) - 264
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 5, pred:$p) - 267
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::HasV8Ops},
  };

  static const char AsmStrings[] =
    /* 0 */ "ssbb\0"
    /* 5 */ "pssbb\0"
    /* 11 */ "dfb\0"
    /* 15 */ "nop$\xFF\x02\x01\0"
    /* 23 */ "yield$\xFF\x02\x01\0"
    /* 33 */ "wfe$\xFF\x02\x01\0"
    /* 41 */ "wfi$\xFF\x02\x01\0"
    /* 49 */ "sev$\xFF\x02\x01\0"
    /* 57 */ "sevl$\xFF\x02\x01\0"
    /* 66 */ "esb$\xFF\x02\x01\0"
    /* 74 */ "csdb$\xFF\x02\x01\0"
    /* 83 */ "vmlava$\xFF\x05\x02.s16	$\x01, $\x03, $\x04\0"
    /* 109 */ "vmlava$\xFF\x05\x02.s32	$\x01, $\x03, $\x04\0"
    /* 135 */ "vmlava$\xFF\x05\x02.s8	$\x01, $\x03, $\x04\0"
    /* 160 */ "vmlava$\xFF\x05\x02.u16	$\x01, $\x03, $\x04\0"
    /* 186 */ "vmlava$\xFF\x05\x02.u32	$\x01, $\x03, $\x04\0"
    /* 212 */ "vmlava$\xFF\x05\x02.u8	$\x01, $\x03, $\x04\0"
    /* 237 */ "vmlav$\xFF\x04\x02.s16	$\x01, $\x02, $\x03\0"
    /* 262 */ "vmlav$\xFF\x04\x02.s32	$\x01, $\x02, $\x03\0"
    /* 287 */ "vmlav$\xFF\x04\x02.s8	$\x01, $\x02, $\x03\0"
    /* 311 */ "vmlav$\xFF\x04\x02.u16	$\x01, $\x02, $\x03\0"
    /* 336 */ "vmlav$\xFF\x04\x02.u32	$\x01, $\x02, $\x03\0"
    /* 361 */ "vmlav$\xFF\x04\x02.u8	$\x01, $\x02, $\x03\0"
    /* 385 */ "vmlalva$\xFF\x07\x02.s16	$\x01, $\x02, $\x05, $\x06\0"
    /* 416 */ "vmlalva$\xFF\x07\x02.s32	$\x01, $\x02, $\x05, $\x06\0"
    /* 447 */ "vmlalva$\xFF\x07\x02.u16	$\x01, $\x02, $\x05, $\x06\0"
    /* 478 */ "vmlalva$\xFF\x07\x02.u32	$\x01, $\x02, $\x05, $\x06\0"
    /* 509 */ "vmlalv$\xFF\x05\x02.s16	$\x01, $\x02, $\x03, $\x04\0"
    /* 539 */ "vmlalv$\xFF\x05\x02.s32	$\x01, $\x02, $\x03, $\x04\0"
    /* 569 */ "vmlalv$\xFF\x05\x02.u16	$\x01, $\x02, $\x03, $\x04\0"
    /* 599 */ "vmlalv$\xFF\x05\x02.u32	$\x01, $\x02, $\x03, $\x04\0"
    /* 629 */ "vmov$\xFF\x04\x02	$\x01, $\x02\0"
    /* 645 */ "vrmlalvha$\xFF\x07\x02.s32	$\x01, $\x02, $\x05, $\x06\0"
    /* 678 */ "vrmlalvha$\xFF\x07\x02.u32	$\x01, $\x02, $\x05, $\x06\0"
    /* 711 */ "vrmlalvh$\xFF\x05\x02.s32	$\x01, $\x02, $\x03, $\x04\0"
    /* 743 */ "vrmlalvh$\xFF\x05\x02.u32	$\x01, $\x02, $\x03, $\x04\0"
    /* 775 */ "cset	$\x01, $\xFF\x04\x03\0"
    /* 789 */ "cinc	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 807 */ "csetm	$\x01, $\xFF\x04\x03\0"
    /* 822 */ "cinv	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 840 */ "cneg	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 858 */ "dfb$\xFF\x02\x01\0"
    /* 866 */ "nop$\xFF\x02\x01.w\0"
    /* 876 */ "yield$\xFF\x02\x01.w\0"
    /* 888 */ "wfe$\xFF\x02\x01.w\0"
    /* 898 */ "wfi$\xFF\x02\x01.w\0"
    /* 908 */ "sev$\xFF\x02\x01.w\0"
    /* 918 */ "sevl$\xFF\x02\x01.w\0"
    /* 929 */ "esb$\xFF\x02\x01.w\0"
    /* 939 */ "eret$\xFF\x02\x01\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, &STI, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, STI, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, STI, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void ARMInstPrinter::printCustomAliasOperand(
         const MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         const MCSubtargetInfo &STI,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printPredicateOperand(MI, OpIdx, STI, OS);
    break;
  case 1:
    printVPTPredicateOperand(MI, OpIdx, STI, OS);
    break;
  case 2:
    printMandatoryInvertedPredicateOperand(MI, OpIdx, STI, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR

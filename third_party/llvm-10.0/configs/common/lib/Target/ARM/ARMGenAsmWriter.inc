/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void ARMInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &O) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrs[] = {
  /* 0 */ "vld20.32\t\0"
  /* 10 */ "vst20.32\t\0"
  /* 20 */ "vld40.32\t\0"
  /* 30 */ "vst40.32\t\0"
  /* 40 */ "sha1su0.32\t\0"
  /* 52 */ "sha256su0.32\t\0"
  /* 66 */ "vld21.32\t\0"
  /* 76 */ "vst21.32\t\0"
  /* 86 */ "vld41.32\t\0"
  /* 96 */ "vst41.32\t\0"
  /* 106 */ "sha1su1.32\t\0"
  /* 118 */ "sha256su1.32\t\0"
  /* 132 */ "vld42.32\t\0"
  /* 142 */ "vst42.32\t\0"
  /* 152 */ "sha256h2.32\t\0"
  /* 165 */ "vld43.32\t\0"
  /* 175 */ "vst43.32\t\0"
  /* 185 */ "sha1c.32\t\0"
  /* 195 */ "sha1h.32\t\0"
  /* 205 */ "sha256h.32\t\0"
  /* 217 */ "sha1m.32\t\0"
  /* 227 */ "sha1p.32\t\0"
  /* 237 */ "dlstp.32\t\0"
  /* 247 */ "wlstp.32\t\0"
  /* 257 */ "vcvta.s32.f32\t\0"
  /* 272 */ "vcvtm.s32.f32\t\0"
  /* 287 */ "vcvtn.s32.f32\t\0"
  /* 302 */ "vcvtp.s32.f32\t\0"
  /* 317 */ "vcvta.u32.f32\t\0"
  /* 332 */ "vcvtm.u32.f32\t\0"
  /* 347 */ "vcvtn.u32.f32\t\0"
  /* 362 */ "vcvtp.u32.f32\t\0"
  /* 377 */ "vcmla.f32\t\0"
  /* 388 */ "vrinta.f32\t\0"
  /* 400 */ "vcadd.f32\t\0"
  /* 411 */ "vselge.f32\t\0"
  /* 423 */ "vminnm.f32\t\0"
  /* 435 */ "vmaxnm.f32\t\0"
  /* 447 */ "vrintm.f32\t\0"
  /* 459 */ "vrintn.f32\t\0"
  /* 471 */ "vrintp.f32\t\0"
  /* 483 */ "vseleq.f32\t\0"
  /* 495 */ "vselvs.f32\t\0"
  /* 507 */ "vselgt.f32\t\0"
  /* 519 */ "vrintx.f32\t\0"
  /* 531 */ "vrintz.f32\t\0"
  /* 543 */ "ldc2\t\0"
  /* 549 */ "mrc2\t\0"
  /* 555 */ "mrrc2\t\0"
  /* 562 */ "stc2\t\0"
  /* 568 */ "cdp2\t\0"
  /* 574 */ "mcr2\t\0"
  /* 580 */ "mcrr2\t\0"
  /* 587 */ "dlstp.64\t\0"
  /* 597 */ "wlstp.64\t\0"
  /* 607 */ "vcvta.s32.f64\t\0"
  /* 622 */ "vcvtm.s32.f64\t\0"
  /* 637 */ "vcvtn.s32.f64\t\0"
  /* 652 */ "vcvtp.s32.f64\t\0"
  /* 667 */ "vcvta.u32.f64\t\0"
  /* 682 */ "vcvtm.u32.f64\t\0"
  /* 697 */ "vcvtn.u32.f64\t\0"
  /* 712 */ "vcvtp.u32.f64\t\0"
  /* 727 */ "vrinta.f64\t\0"
  /* 739 */ "vselge.f64\t\0"
  /* 751 */ "vminnm.f64\t\0"
  /* 763 */ "vmaxnm.f64\t\0"
  /* 775 */ "vrintm.f64\t\0"
  /* 787 */ "vrintn.f64\t\0"
  /* 799 */ "vrintp.f64\t\0"
  /* 811 */ "vseleq.f64\t\0"
  /* 823 */ "vselvs.f64\t\0"
  /* 835 */ "vselgt.f64\t\0"
  /* 847 */ "vmull.p64\t\0"
  /* 858 */ "vld20.16\t\0"
  /* 868 */ "vst20.16\t\0"
  /* 878 */ "vld40.16\t\0"
  /* 888 */ "vst40.16\t\0"
  /* 898 */ "vld21.16\t\0"
  /* 908 */ "vst21.16\t\0"
  /* 918 */ "vld41.16\t\0"
  /* 928 */ "vst41.16\t\0"
  /* 938 */ "vld42.16\t\0"
  /* 948 */ "vst42.16\t\0"
  /* 958 */ "vld43.16\t\0"
  /* 968 */ "vst43.16\t\0"
  /* 978 */ "dlstp.16\t\0"
  /* 988 */ "wlstp.16\t\0"
  /* 998 */ "vcvta.s32.f16\t\0"
  /* 1013 */ "vcvtm.s32.f16\t\0"
  /* 1028 */ "vcvtn.s32.f16\t\0"
  /* 1043 */ "vcvtp.s32.f16\t\0"
  /* 1058 */ "vcvta.u32.f16\t\0"
  /* 1073 */ "vcvtm.u32.f16\t\0"
  /* 1088 */ "vcvtn.u32.f16\t\0"
  /* 1103 */ "vcvtp.u32.f16\t\0"
  /* 1118 */ "vcvta.s16.f16\t\0"
  /* 1133 */ "vcvtm.s16.f16\t\0"
  /* 1148 */ "vcvtn.s16.f16\t\0"
  /* 1163 */ "vcvtp.s16.f16\t\0"
  /* 1178 */ "vcvta.u16.f16\t\0"
  /* 1193 */ "vcvtm.u16.f16\t\0"
  /* 1208 */ "vcvtn.u16.f16\t\0"
  /* 1223 */ "vcvtp.u16.f16\t\0"
  /* 1238 */ "vcmla.f16\t\0"
  /* 1249 */ "vrinta.f16\t\0"
  /* 1261 */ "vcadd.f16\t\0"
  /* 1272 */ "vselge.f16\t\0"
  /* 1284 */ "vfmal.f16\t\0"
  /* 1295 */ "vfmsl.f16\t\0"
  /* 1306 */ "vminnm.f16\t\0"
  /* 1318 */ "vmaxnm.f16\t\0"
  /* 1330 */ "vrintm.f16\t\0"
  /* 1342 */ "vrintn.f16\t\0"
  /* 1354 */ "vrintp.f16\t\0"
  /* 1366 */ "vseleq.f16\t\0"
  /* 1378 */ "vins.f16\t\0"
  /* 1388 */ "vselvs.f16\t\0"
  /* 1400 */ "vselgt.f16\t\0"
  /* 1412 */ "vrintx.f16\t\0"
  /* 1424 */ "vmovx.f16\t\0"
  /* 1435 */ "vrintz.f16\t\0"
  /* 1447 */ "vld20.8\t\0"
  /* 1456 */ "vst20.8\t\0"
  /* 1465 */ "vld40.8\t\0"
  /* 1474 */ "vst40.8\t\0"
  /* 1483 */ "vld21.8\t\0"
  /* 1492 */ "vst21.8\t\0"
  /* 1501 */ "vld41.8\t\0"
  /* 1510 */ "vst41.8\t\0"
  /* 1519 */ "vld42.8\t\0"
  /* 1528 */ "vst42.8\t\0"
  /* 1537 */ "vld43.8\t\0"
  /* 1546 */ "vst43.8\t\0"
  /* 1555 */ "aesimc.8\t\0"
  /* 1565 */ "aesmc.8\t\0"
  /* 1574 */ "aesd.8\t\0"
  /* 1582 */ "aese.8\t\0"
  /* 1590 */ "dlstp.8\t\0"
  /* 1599 */ "wlstp.8\t\0"
  /* 1608 */ "vsdot.s8\t\0"
  /* 1618 */ "vudot.u8\t\0"
  /* 1628 */ "rfeda\t\0"
  /* 1635 */ "rfeia\t\0"
  /* 1642 */ "crc32b\t\0"
  /* 1650 */ "crc32cb\t\0"
  /* 1659 */ "rfedb\t\0"
  /* 1666 */ "rfeib\t\0"
  /* 1673 */ "dmb\t\0"
  /* 1678 */ "dsb\t\0"
  /* 1683 */ "isb\t\0"
  /* 1688 */ "tsb\t\0"
  /* 1693 */ "csinc\t\0"
  /* 1700 */ "hvc\t\0"
  /* 1705 */ "pld\t\0"
  /* 1710 */ "setend\t\0"
  /* 1718 */ "le\t\0"
  /* 1722 */ "udf\t\0"
  /* 1727 */ "csneg\t\0"
  /* 1734 */ "crc32h\t\0"
  /* 1742 */ "crc32ch\t\0"
  /* 1751 */ "pli\t\0"
  /* 1756 */ "ldc2l\t\0"
  /* 1763 */ "stc2l\t\0"
  /* 1770 */ "bl\t\0"
  /* 1774 */ "bfcsel\t\0"
  /* 1782 */ "setpan\t\0"
  /* 1790 */ "letp\t\0"
  /* 1796 */ "dls\t\0"
  /* 1801 */ "wls\t\0"
  /* 1806 */ "cps\t\0"
  /* 1811 */ "movs\t\0"
  /* 1817 */ "hlt\t\0"
  /* 1822 */ "bkpt\t\0"
  /* 1828 */ "csinv\t\0"
  /* 1835 */ "hvc.w\t\0"
  /* 1842 */ "udf.w\t\0"
  /* 1849 */ "crc32w\t\0"
  /* 1857 */ "crc32cw\t\0"
  /* 1866 */ "pldw\t\0"
  /* 1872 */ "bx\t\0"
  /* 1876 */ "blx\t\0"
  /* 1881 */ "cbz\t\0"
  /* 1886 */ "cbnz\t\0"
  /* 1892 */ "srsda\tsp!, \0"
  /* 1904 */ "srsia\tsp!, \0"
  /* 1916 */ "srsdb\tsp!, \0"
  /* 1928 */ "srsib\tsp!, \0"
  /* 1940 */ "srsda\tsp, \0"
  /* 1951 */ "srsia\tsp, \0"
  /* 1962 */ "srsdb\tsp, \0"
  /* 1973 */ "srsib\tsp, \0"
  /* 1984 */ "# XRay Function Patchable RET.\0"
  /* 2015 */ "# XRay Typed Event Log.\0"
  /* 2039 */ "# XRay Custom Event Log.\0"
  /* 2064 */ "# XRay Function Enter.\0"
  /* 2087 */ "# XRay Tail Call Exit.\0"
  /* 2110 */ "# XRay Function Exit.\0"
  /* 2132 */ "__brkdiv0\0"
  /* 2142 */ "vld1\0"
  /* 2147 */ "dcps1\0"
  /* 2153 */ "vst1\0"
  /* 2158 */ "vrev32\0"
  /* 2165 */ "ldc2\0"
  /* 2170 */ "mrc2\0"
  /* 2175 */ "mrrc2\0"
  /* 2181 */ "stc2\0"
  /* 2186 */ "vld2\0"
  /* 2191 */ "cdp2\0"
  /* 2196 */ "mcr2\0"
  /* 2201 */ "mcrr2\0"
  /* 2207 */ "dcps2\0"
  /* 2213 */ "vst2\0"
  /* 2218 */ "vld3\0"
  /* 2223 */ "dcps3\0"
  /* 2229 */ "vst3\0"
  /* 2234 */ "vrev64\0"
  /* 2241 */ "vld4\0"
  /* 2246 */ "vst4\0"
  /* 2251 */ "sxtab16\0"
  /* 2259 */ "uxtab16\0"
  /* 2267 */ "sxtb16\0"
  /* 2274 */ "uxtb16\0"
  /* 2281 */ "shsub16\0"
  /* 2289 */ "uhsub16\0"
  /* 2297 */ "uqsub16\0"
  /* 2305 */ "ssub16\0"
  /* 2312 */ "usub16\0"
  /* 2319 */ "shadd16\0"
  /* 2327 */ "uhadd16\0"
  /* 2335 */ "uqadd16\0"
  /* 2343 */ "sadd16\0"
  /* 2350 */ "uadd16\0"
  /* 2357 */ "ssat16\0"
  /* 2364 */ "usat16\0"
  /* 2371 */ "vrev16\0"
  /* 2378 */ "usada8\0"
  /* 2385 */ "shsub8\0"
  /* 2392 */ "uhsub8\0"
  /* 2399 */ "uqsub8\0"
  /* 2406 */ "ssub8\0"
  /* 2412 */ "usub8\0"
  /* 2418 */ "usad8\0"
  /* 2424 */ "shadd8\0"
  /* 2431 */ "uhadd8\0"
  /* 2438 */ "uqadd8\0"
  /* 2445 */ "sadd8\0"
  /* 2451 */ "uadd8\0"
  /* 2457 */ "LIFETIME_END\0"
  /* 2470 */ "BUNDLE\0"
  /* 2477 */ "DBG_VALUE\0"
  /* 2487 */ "DBG_LABEL\0"
  /* 2497 */ "@ COMPILER BARRIER\0"
  /* 2516 */ "LIFETIME_START\0"
  /* 2531 */ "vaba\0"
  /* 2536 */ "lda\0"
  /* 2540 */ "ldmda\0"
  /* 2546 */ "stmda\0"
  /* 2552 */ "vrmlaldavha\0"
  /* 2564 */ "vrmlsldavha\0"
  /* 2576 */ "rfeia\0"
  /* 2582 */ "vldmia\0"
  /* 2589 */ "vstmia\0"
  /* 2596 */ "srsia\0"
  /* 2602 */ "vcmla\0"
  /* 2608 */ "smmla\0"
  /* 2614 */ "vnmla\0"
  /* 2620 */ "vmla\0"
  /* 2625 */ "vfma\0"
  /* 2630 */ "vfnma\0"
  /* 2636 */ "vminnma\0"
  /* 2644 */ "vmaxnma\0"
  /* 2652 */ "vmina\0"
  /* 2658 */ "vrsra\0"
  /* 2664 */ "vsra\0"
  /* 2669 */ "vrinta\0"
  /* 2676 */ "tta\0"
  /* 2680 */ "vcvta\0"
  /* 2686 */ "vmladava\0"
  /* 2695 */ "vmlaldava\0"
  /* 2705 */ "vmlsldava\0"
  /* 2715 */ "vmlsdava\0"
  /* 2724 */ "vaddva\0"
  /* 2731 */ "vaddlva\0"
  /* 2739 */ "vmaxa\0"
  /* 2745 */ "ldab\0"
  /* 2750 */ "sxtab\0"
  /* 2756 */ "uxtab\0"
  /* 2762 */ "smlabb\0"
  /* 2769 */ "smlalbb\0"
  /* 2777 */ "smulbb\0"
  /* 2784 */ "tbb\0"
  /* 2788 */ "rfedb\0"
  /* 2794 */ "vldmdb\0"
  /* 2801 */ "vstmdb\0"
  /* 2808 */ "srsdb\0"
  /* 2814 */ "ldmib\0"
  /* 2820 */ "stmib\0"
  /* 2826 */ "vshllb\0"
  /* 2833 */ "vqdmullb\0"
  /* 2842 */ "vmullb\0"
  /* 2849 */ "stlb\0"
  /* 2854 */ "vmovlb\0"
  /* 2861 */ "dmb\0"
  /* 2865 */ "vqshrnb\0"
  /* 2873 */ "vqrshrnb\0"
  /* 2882 */ "vrshrnb\0"
  /* 2890 */ "vshrnb\0"
  /* 2897 */ "vqshrunb\0"
  /* 2906 */ "vqrshrunb\0"
  /* 2916 */ "vqmovunb\0"
  /* 2925 */ "vqmovnb\0"
  /* 2933 */ "vmovnb\0"
  /* 2940 */ "swpb\0"
  /* 2945 */ "vldrb\0"
  /* 2951 */ "vstrb\0"
  /* 2957 */ "dsb\0"
  /* 2961 */ "isb\0"
  /* 2965 */ "ldrsb\0"
  /* 2971 */ "tsb\0"
  /* 2975 */ "smlatb\0"
  /* 2982 */ "pkhtb\0"
  /* 2988 */ "smlaltb\0"
  /* 2996 */ "smultb\0"
  /* 3003 */ "vcvtb\0"
  /* 3009 */ "sxtb\0"
  /* 3014 */ "uxtb\0"
  /* 3019 */ "qdsub\0"
  /* 3025 */ "vhsub\0"
  /* 3031 */ "vqsub\0"
  /* 3037 */ "vsub\0"
  /* 3042 */ "smlawb\0"
  /* 3049 */ "smulwb\0"
  /* 3056 */ "ldaexb\0"
  /* 3063 */ "stlexb\0"
  /* 3070 */ "ldrexb\0"
  /* 3077 */ "strexb\0"
  /* 3084 */ "vsbc\0"
  /* 3089 */ "vadc\0"
  /* 3094 */ "ldc\0"
  /* 3098 */ "bfc\0"
  /* 3102 */ "vbic\0"
  /* 3107 */ "vshlc\0"
  /* 3113 */ "smc\0"
  /* 3117 */ "mrc\0"
  /* 3121 */ "mrrc\0"
  /* 3126 */ "rsc\0"
  /* 3130 */ "stc\0"
  /* 3134 */ "svc\0"
  /* 3138 */ "smlad\0"
  /* 3144 */ "smuad\0"
  /* 3150 */ "vabd\0"
  /* 3155 */ "vhcadd\0"
  /* 3162 */ "vcadd\0"
  /* 3168 */ "qdadd\0"
  /* 3174 */ "vrhadd\0"
  /* 3181 */ "vhadd\0"
  /* 3187 */ "vpadd\0"
  /* 3193 */ "vqadd\0"
  /* 3199 */ "vadd\0"
  /* 3204 */ "smlald\0"
  /* 3211 */ "pld\0"
  /* 3215 */ "smlsld\0"
  /* 3222 */ "vand\0"
  /* 3227 */ "vldrd\0"
  /* 3233 */ "vstrd\0"
  /* 3239 */ "smlsd\0"
  /* 3245 */ "smusd\0"
  /* 3251 */ "ldaexd\0"
  /* 3258 */ "stlexd\0"
  /* 3265 */ "ldrexd\0"
  /* 3272 */ "strexd\0"
  /* 3279 */ "vacge\0"
  /* 3285 */ "vcge\0"
  /* 3290 */ "vcle\0"
  /* 3295 */ "vrecpe\0"
  /* 3302 */ "vcmpe\0"
  /* 3308 */ "vrsqrte\0"
  /* 3316 */ "bf\0"
  /* 3319 */ "vbif\0"
  /* 3324 */ "dbg\0"
  /* 3328 */ "vqneg\0"
  /* 3334 */ "vneg\0"
  /* 3339 */ "sg\0"
  /* 3342 */ "ldah\0"
  /* 3347 */ "vqdmlah\0"
  /* 3355 */ "vqrdmlah\0"
  /* 3364 */ "sxtah\0"
  /* 3370 */ "uxtah\0"
  /* 3376 */ "tbh\0"
  /* 3380 */ "vqdmladh\0"
  /* 3389 */ "vqrdmladh\0"
  /* 3399 */ "vqdmlsdh\0"
  /* 3408 */ "vqrdmlsdh\0"
  /* 3418 */ "stlh\0"
  /* 3423 */ "vqdmulh\0"
  /* 3431 */ "vqrdmulh\0"
  /* 3440 */ "vrmulh\0"
  /* 3447 */ "vmulh\0"
  /* 3453 */ "vldrh\0"
  /* 3459 */ "vstrh\0"
  /* 3465 */ "vqdmlash\0"
  /* 3474 */ "vqrdmlash\0"
  /* 3484 */ "vqrdmlsh\0"
  /* 3493 */ "ldrsh\0"
  /* 3499 */ "push\0"
  /* 3504 */ "revsh\0"
  /* 3510 */ "sxth\0"
  /* 3515 */ "uxth\0"
  /* 3520 */ "vrmlaldavh\0"
  /* 3531 */ "vrmlsldavh\0"
  /* 3542 */ "ldaexh\0"
  /* 3549 */ "stlexh\0"
  /* 3556 */ "ldrexh\0"
  /* 3563 */ "strexh\0"
  /* 3570 */ "vsbci\0"
  /* 3576 */ "vadci\0"
  /* 3582 */ "bfi\0"
  /* 3586 */ "pli\0"
  /* 3590 */ "vsli\0"
  /* 3595 */ "vsri\0"
  /* 3600 */ "bxj\0"
  /* 3604 */ "ldc2l\0"
  /* 3610 */ "stc2l\0"
  /* 3616 */ "umaal\0"
  /* 3622 */ "vabal\0"
  /* 3628 */ "vpadal\0"
  /* 3635 */ "vqdmlal\0"
  /* 3643 */ "smlal\0"
  /* 3649 */ "umlal\0"
  /* 3655 */ "vmlal\0"
  /* 3661 */ "vtbl\0"
  /* 3666 */ "vsubl\0"
  /* 3672 */ "ldcl\0"
  /* 3677 */ "stcl\0"
  /* 3682 */ "vabdl\0"
  /* 3688 */ "vpaddl\0"
  /* 3695 */ "vaddl\0"
  /* 3701 */ "vpsel\0"
  /* 3707 */ "bfl\0"
  /* 3711 */ "sqshl\0"
  /* 3717 */ "uqshl\0"
  /* 3723 */ "vqshl\0"
  /* 3729 */ "uqrshl\0"
  /* 3736 */ "vqrshl\0"
  /* 3743 */ "vrshl\0"
  /* 3749 */ "vshl\0"
  /* 3754 */ "# FEntry call\0"
  /* 3768 */ "sqshll\0"
  /* 3775 */ "uqshll\0"
  /* 3782 */ "uqrshll\0"
  /* 3790 */ "vshll\0"
  /* 3796 */ "lsll\0"
  /* 3801 */ "vqdmull\0"
  /* 3809 */ "smull\0"
  /* 3815 */ "umull\0"
  /* 3821 */ "vmull\0"
  /* 3827 */ "sqrshrl\0"
  /* 3835 */ "srshrl\0"
  /* 3842 */ "urshrl\0"
  /* 3849 */ "asrl\0"
  /* 3854 */ "lsrl\0"
  /* 3859 */ "vbsl\0"
  /* 3864 */ "vqdmlsl\0"
  /* 3872 */ "vmlsl\0"
  /* 3878 */ "stl\0"
  /* 3882 */ "vcmul\0"
  /* 3888 */ "smmul\0"
  /* 3894 */ "vnmul\0"
  /* 3900 */ "vmul\0"
  /* 3905 */ "vmovl\0"
  /* 3911 */ "vlldm\0"
  /* 3917 */ "vminnm\0"
  /* 3924 */ "vmaxnm\0"
  /* 3931 */ "vscclrm\0"
  /* 3939 */ "vrintm\0"
  /* 3946 */ "vlstm\0"
  /* 3952 */ "vcvtm\0"
  /* 3958 */ "vrsubhn\0"
  /* 3966 */ "vsubhn\0"
  /* 3973 */ "vraddhn\0"
  /* 3981 */ "vaddhn\0"
  /* 3988 */ "vpmin\0"
  /* 3994 */ "vmin\0"
  /* 3999 */ "cmn\0"
  /* 4003 */ "vqshrn\0"
  /* 4010 */ "vqrshrn\0"
  /* 4018 */ "vrshrn\0"
  /* 4025 */ "vshrn\0"
  /* 4031 */ "vorn\0"
  /* 4036 */ "vtrn\0"
  /* 4041 */ "vrintn\0"
  /* 4048 */ "vcvtn\0"
  /* 4054 */ "vqshrun\0"
  /* 4062 */ "vqrshrun\0"
  /* 4071 */ "vqmovun\0"
  /* 4079 */ "vmvn\0"
  /* 4084 */ "vqmovn\0"
  /* 4091 */ "vmovn\0"
  /* 4097 */ "trap\0"
  /* 4102 */ "cdp\0"
  /* 4106 */ "vzip\0"
  /* 4111 */ "vcmp\0"
  /* 4116 */ "pop\0"
  /* 4120 */ "lctp\0"
  /* 4125 */ "vctp\0"
  /* 4130 */ "vrintp\0"
  /* 4137 */ "vcvtp\0"
  /* 4143 */ "vddup\0"
  /* 4149 */ "vidup\0"
  /* 4155 */ "vdup\0"
  /* 4160 */ "vdwdup\0"
  /* 4167 */ "viwdup\0"
  /* 4174 */ "vswp\0"
  /* 4179 */ "vuzp\0"
  /* 4184 */ "vceq\0"
  /* 4189 */ "teq\0"
  /* 4193 */ "smmlar\0"
  /* 4200 */ "mcr\0"
  /* 4204 */ "adr\0"
  /* 4208 */ "vldr\0"
  /* 4213 */ "sqrshr\0"
  /* 4220 */ "srshr\0"
  /* 4226 */ "urshr\0"
  /* 4232 */ "vrshr\0"
  /* 4238 */ "vshr\0"
  /* 4243 */ "smmulr\0"
  /* 4250 */ "veor\0"
  /* 4255 */ "ror\0"
  /* 4259 */ "mcrr\0"
  /* 4264 */ "vorr\0"
  /* 4269 */ "asr\0"
  /* 4273 */ "smmlsr\0"
  /* 4280 */ "vmsr\0"
  /* 4285 */ "vbrsr\0"
  /* 4291 */ "vrintr\0"
  /* 4298 */ "vstr\0"
  /* 4303 */ "vcvtr\0"
  /* 4309 */ "vmlas\0"
  /* 4315 */ "vfmas\0"
  /* 4321 */ "vqabs\0"
  /* 4327 */ "vabs\0"
  /* 4332 */ "subs\0"
  /* 4337 */ "vcls\0"
  /* 4342 */ "smmls\0"
  /* 4348 */ "vnmls\0"
  /* 4354 */ "vmls\0"
  /* 4359 */ "vfms\0"
  /* 4364 */ "vfnms\0"
  /* 4370 */ "bxns\0"
  /* 4375 */ "blxns\0"
  /* 4381 */ "vrecps\0"
  /* 4388 */ "vmrs\0"
  /* 4393 */ "asrs\0"
  /* 4398 */ "lsrs\0"
  /* 4403 */ "vrsqrts\0"
  /* 4411 */ "movs\0"
  /* 4416 */ "ssat\0"
  /* 4421 */ "usat\0"
  /* 4426 */ "ttat\0"
  /* 4431 */ "smlabt\0"
  /* 4438 */ "pkhbt\0"
  /* 4444 */ "smlalbt\0"
  /* 4452 */ "smulbt\0"
  /* 4459 */ "ldrbt\0"
  /* 4465 */ "strbt\0"
  /* 4471 */ "ldrsbt\0"
  /* 4478 */ "eret\0"
  /* 4483 */ "vacgt\0"
  /* 4489 */ "vcgt\0"
  /* 4494 */ "ldrht\0"
  /* 4500 */ "strht\0"
  /* 4506 */ "ldrsht\0"
  /* 4513 */ "rbit\0"
  /* 4518 */ "vbit\0"
  /* 4523 */ "vclt\0"
  /* 4528 */ "vshllt\0"
  /* 4535 */ "vqdmullt\0"
  /* 4544 */ "vmullt\0"
  /* 4551 */ "vmovlt\0"
  /* 4558 */ "vcnt\0"
  /* 4563 */ "hint\0"
  /* 4568 */ "vqshrnt\0"
  /* 4576 */ "vqrshrnt\0"
  /* 4585 */ "vrshrnt\0"
  /* 4593 */ "vshrnt\0"
  /* 4600 */ "vqshrunt\0"
  /* 4609 */ "vqrshrunt\0"
  /* 4619 */ "vqmovunt\0"
  /* 4628 */ "vqmovnt\0"
  /* 4636 */ "vmovnt\0"
  /* 4643 */ "vpnot\0"
  /* 4649 */ "vpt\0"
  /* 4653 */ "ldrt\0"
  /* 4658 */ "vsqrt\0"
  /* 4664 */ "strt\0"
  /* 4669 */ "vpst\0"
  /* 4674 */ "vtst\0"
  /* 4679 */ "smlatt\0"
  /* 4686 */ "smlaltt\0"
  /* 4694 */ "smultt\0"
  /* 4701 */ "ttt\0"
  /* 4705 */ "vcvtt\0"
  /* 4711 */ "vjcvt\0"
  /* 4717 */ "vcvt\0"
  /* 4722 */ "movt\0"
  /* 4727 */ "smlawt\0"
  /* 4734 */ "smulwt\0"
  /* 4741 */ "vext\0"
  /* 4746 */ "vqshlu\0"
  /* 4753 */ "vabav\0"
  /* 4759 */ "vmladav\0"
  /* 4767 */ "vmlaldav\0"
  /* 4776 */ "vmlsldav\0"
  /* 4785 */ "vmlsdav\0"
  /* 4793 */ "vminnmav\0"
  /* 4802 */ "vmaxnmav\0"
  /* 4811 */ "vminav\0"
  /* 4818 */ "vmaxav\0"
  /* 4825 */ "vaddv\0"
  /* 4831 */ "rev\0"
  /* 4835 */ "sdiv\0"
  /* 4840 */ "udiv\0"
  /* 4845 */ "vdiv\0"
  /* 4850 */ "vaddlv\0"
  /* 4857 */ "vminnmv\0"
  /* 4865 */ "vmaxnmv\0"
  /* 4873 */ "vminv\0"
  /* 4879 */ "vmov\0"
  /* 4884 */ "vmaxv\0"
  /* 4890 */ "vsubw\0"
  /* 4896 */ "vaddw\0"
  /* 4902 */ "pldw\0"
  /* 4907 */ "vldrw\0"
  /* 4913 */ "vstrw\0"
  /* 4919 */ "movw\0"
  /* 4924 */ "vrmlaldavhax\0"
  /* 4937 */ "vrmlsldavhax\0"
  /* 4950 */ "fldmiax\0"
  /* 4958 */ "fstmiax\0"
  /* 4966 */ "vpmax\0"
  /* 4972 */ "vmax\0"
  /* 4977 */ "shsax\0"
  /* 4983 */ "uhsax\0"
  /* 4989 */ "uqsax\0"
  /* 4995 */ "ssax\0"
  /* 5000 */ "usax\0"
  /* 5005 */ "vmladavax\0"
  /* 5015 */ "vmlaldavax\0"
  /* 5026 */ "vmlsldavax\0"
  /* 5037 */ "vmlsdavax\0"
  /* 5047 */ "fldmdbx\0"
  /* 5055 */ "fstmdbx\0"
  /* 5063 */ "vtbx\0"
  /* 5068 */ "smladx\0"
  /* 5075 */ "smuadx\0"
  /* 5082 */ "smlaldx\0"
  /* 5090 */ "smlsldx\0"
  /* 5098 */ "smlsdx\0"
  /* 5105 */ "smusdx\0"
  /* 5112 */ "ldaex\0"
  /* 5118 */ "stlex\0"
  /* 5124 */ "ldrex\0"
  /* 5130 */ "clrex\0"
  /* 5136 */ "strex\0"
  /* 5142 */ "sbfx\0"
  /* 5147 */ "ubfx\0"
  /* 5152 */ "vqdmladhx\0"
  /* 5162 */ "vqrdmladhx\0"
  /* 5173 */ "vqdmlsdhx\0"
  /* 5183 */ "vqrdmlsdhx\0"
  /* 5194 */ "vrmlaldavhx\0"
  /* 5206 */ "vrmlsldavhx\0"
  /* 5218 */ "blx\0"
  /* 5222 */ "bflx\0"
  /* 5227 */ "rrx\0"
  /* 5231 */ "shasx\0"
  /* 5237 */ "uhasx\0"
  /* 5243 */ "uqasx\0"
  /* 5249 */ "sasx\0"
  /* 5254 */ "uasx\0"
  /* 5259 */ "vrintx\0"
  /* 5266 */ "vmladavx\0"
  /* 5275 */ "vmlaldavx\0"
  /* 5285 */ "vmlsldavx\0"
  /* 5295 */ "vmlsdavx\0"
  /* 5304 */ "vclz\0"
  /* 5309 */ "vrintz\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    2478U,	// DBG_VALUE
    2488U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    2471U,	// BUNDLE
    2517U,	// LIFETIME_START
    2458U,	// LIFETIME_END
    0U,	// STACKMAP
    3755U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    2065U,	// PATCHABLE_FUNCTION_ENTER
    1985U,	// PATCHABLE_RET
    2111U,	// PATCHABLE_FUNCTION_EXIT
    2088U,	// PATCHABLE_TAIL_CALL
    2040U,	// PATCHABLE_EVENT_CALL
    2016U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    12462U,	// ASRi
    12462U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BL_PUSHLR
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    2498U,	// CompilerBarrier
    67129764U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    29036U,	// LDRBT_POST
    28786U,	// LDRConstPool
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    29230U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    12061U,	// LSLi
    12061U,	// LSLr
    12469U,	// LSRi
    12469U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MULv5
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    12448U,	// RORi
    12448U,	// RORr
    0U,	// RRX
    37996U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    29042U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    29241U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    567391U,	// VLD1LNdAsm_16
    1091679U,	// VLD1LNdAsm_32
    1615967U,	// VLD1LNdAsm_8
    567391U,	// VLD1LNdWB_fixed_Asm_16
    1091679U,	// VLD1LNdWB_fixed_Asm_32
    1615967U,	// VLD1LNdWB_fixed_Asm_8
    575583U,	// VLD1LNdWB_register_Asm_16
    1099871U,	// VLD1LNdWB_register_Asm_32
    1624159U,	// VLD1LNdWB_register_Asm_8
    567435U,	// VLD2LNdAsm_16
    1091723U,	// VLD2LNdAsm_32
    1616011U,	// VLD2LNdAsm_8
    567435U,	// VLD2LNdWB_fixed_Asm_16
    1091723U,	// VLD2LNdWB_fixed_Asm_32
    1616011U,	// VLD2LNdWB_fixed_Asm_8
    575627U,	// VLD2LNdWB_register_Asm_16
    1099915U,	// VLD2LNdWB_register_Asm_32
    1624203U,	// VLD2LNdWB_register_Asm_8
    567435U,	// VLD2LNqAsm_16
    1091723U,	// VLD2LNqAsm_32
    567435U,	// VLD2LNqWB_fixed_Asm_16
    1091723U,	// VLD2LNqWB_fixed_Asm_32
    575627U,	// VLD2LNqWB_register_Asm_16
    1099915U,	// VLD2LNqWB_register_Asm_32
    134801579U,	// VLD3DUPdAsm_16
    135325867U,	// VLD3DUPdAsm_32
    135850155U,	// VLD3DUPdAsm_8
    134801579U,	// VLD3DUPdWB_fixed_Asm_16
    135325867U,	// VLD3DUPdWB_fixed_Asm_32
    135850155U,	// VLD3DUPdWB_fixed_Asm_8
    134785195U,	// VLD3DUPdWB_register_Asm_16
    135309483U,	// VLD3DUPdWB_register_Asm_32
    135833771U,	// VLD3DUPdWB_register_Asm_8
    201910443U,	// VLD3DUPqAsm_16
    202434731U,	// VLD3DUPqAsm_32
    202959019U,	// VLD3DUPqAsm_8
    201910443U,	// VLD3DUPqWB_fixed_Asm_16
    202434731U,	// VLD3DUPqWB_fixed_Asm_32
    202959019U,	// VLD3DUPqWB_fixed_Asm_8
    201894059U,	// VLD3DUPqWB_register_Asm_16
    202418347U,	// VLD3DUPqWB_register_Asm_32
    202942635U,	// VLD3DUPqWB_register_Asm_8
    567467U,	// VLD3LNdAsm_16
    1091755U,	// VLD3LNdAsm_32
    1616043U,	// VLD3LNdAsm_8
    567467U,	// VLD3LNdWB_fixed_Asm_16
    1091755U,	// VLD3LNdWB_fixed_Asm_32
    1616043U,	// VLD3LNdWB_fixed_Asm_8
    575659U,	// VLD3LNdWB_register_Asm_16
    1099947U,	// VLD3LNdWB_register_Asm_32
    1624235U,	// VLD3LNdWB_register_Asm_8
    567467U,	// VLD3LNqAsm_16
    1091755U,	// VLD3LNqAsm_32
    567467U,	// VLD3LNqWB_fixed_Asm_16
    1091755U,	// VLD3LNqWB_fixed_Asm_32
    575659U,	// VLD3LNqWB_register_Asm_16
    1099947U,	// VLD3LNqWB_register_Asm_32
    269019307U,	// VLD3dAsm_16
    269543595U,	// VLD3dAsm_32
    270067883U,	// VLD3dAsm_8
    269019307U,	// VLD3dWB_fixed_Asm_16
    269543595U,	// VLD3dWB_fixed_Asm_32
    270067883U,	// VLD3dWB_fixed_Asm_8
    269002923U,	// VLD3dWB_register_Asm_16
    269527211U,	// VLD3dWB_register_Asm_32
    270051499U,	// VLD3dWB_register_Asm_8
    336128171U,	// VLD3qAsm_16
    336652459U,	// VLD3qAsm_32
    337176747U,	// VLD3qAsm_8
    336128171U,	// VLD3qWB_fixed_Asm_16
    336652459U,	// VLD3qWB_fixed_Asm_32
    337176747U,	// VLD3qWB_fixed_Asm_8
    336111787U,	// VLD3qWB_register_Asm_16
    336636075U,	// VLD3qWB_register_Asm_32
    337160363U,	// VLD3qWB_register_Asm_8
    403237058U,	// VLD4DUPdAsm_16
    403761346U,	// VLD4DUPdAsm_32
    404285634U,	// VLD4DUPdAsm_8
    403237058U,	// VLD4DUPdWB_fixed_Asm_16
    403761346U,	// VLD4DUPdWB_fixed_Asm_32
    404285634U,	// VLD4DUPdWB_fixed_Asm_8
    403220674U,	// VLD4DUPdWB_register_Asm_16
    403744962U,	// VLD4DUPdWB_register_Asm_32
    404269250U,	// VLD4DUPdWB_register_Asm_8
    470345922U,	// VLD4DUPqAsm_16
    470870210U,	// VLD4DUPqAsm_32
    471394498U,	// VLD4DUPqAsm_8
    470345922U,	// VLD4DUPqWB_fixed_Asm_16
    470870210U,	// VLD4DUPqWB_fixed_Asm_32
    471394498U,	// VLD4DUPqWB_fixed_Asm_8
    470329538U,	// VLD4DUPqWB_register_Asm_16
    470853826U,	// VLD4DUPqWB_register_Asm_32
    471378114U,	// VLD4DUPqWB_register_Asm_8
    567490U,	// VLD4LNdAsm_16
    1091778U,	// VLD4LNdAsm_32
    1616066U,	// VLD4LNdAsm_8
    567490U,	// VLD4LNdWB_fixed_Asm_16
    1091778U,	// VLD4LNdWB_fixed_Asm_32
    1616066U,	// VLD4LNdWB_fixed_Asm_8
    575682U,	// VLD4LNdWB_register_Asm_16
    1099970U,	// VLD4LNdWB_register_Asm_32
    1624258U,	// VLD4LNdWB_register_Asm_8
    567490U,	// VLD4LNqAsm_16
    1091778U,	// VLD4LNqAsm_32
    567490U,	// VLD4LNqWB_fixed_Asm_16
    1091778U,	// VLD4LNqWB_fixed_Asm_32
    575682U,	// VLD4LNqWB_register_Asm_16
    1099970U,	// VLD4LNqWB_register_Asm_32
    537454786U,	// VLD4dAsm_16
    537979074U,	// VLD4dAsm_32
    538503362U,	// VLD4dAsm_8
    537454786U,	// VLD4dWB_fixed_Asm_16
    537979074U,	// VLD4dWB_fixed_Asm_32
    538503362U,	// VLD4dWB_fixed_Asm_8
    537438402U,	// VLD4dWB_register_Asm_16
    537962690U,	// VLD4dWB_register_Asm_32
    538486978U,	// VLD4dWB_register_Asm_8
    604563650U,	// VLD4qAsm_16
    605087938U,	// VLD4qAsm_32
    605612226U,	// VLD4qAsm_8
    604563650U,	// VLD4qWB_fixed_Asm_16
    605087938U,	// VLD4qWB_fixed_Asm_32
    605612226U,	// VLD4qWB_fixed_Asm_8
    604547266U,	// VLD4qWB_register_Asm_16
    605071554U,	// VLD4qWB_register_Asm_32
    605595842U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVHcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    567402U,	// VST1LNdAsm_16
    1091690U,	// VST1LNdAsm_32
    1615978U,	// VST1LNdAsm_8
    567402U,	// VST1LNdWB_fixed_Asm_16
    1091690U,	// VST1LNdWB_fixed_Asm_32
    1615978U,	// VST1LNdWB_fixed_Asm_8
    575594U,	// VST1LNdWB_register_Asm_16
    1099882U,	// VST1LNdWB_register_Asm_32
    1624170U,	// VST1LNdWB_register_Asm_8
    567462U,	// VST2LNdAsm_16
    1091750U,	// VST2LNdAsm_32
    1616038U,	// VST2LNdAsm_8
    567462U,	// VST2LNdWB_fixed_Asm_16
    1091750U,	// VST2LNdWB_fixed_Asm_32
    1616038U,	// VST2LNdWB_fixed_Asm_8
    575654U,	// VST2LNdWB_register_Asm_16
    1099942U,	// VST2LNdWB_register_Asm_32
    1624230U,	// VST2LNdWB_register_Asm_8
    567462U,	// VST2LNqAsm_16
    1091750U,	// VST2LNqAsm_32
    567462U,	// VST2LNqWB_fixed_Asm_16
    1091750U,	// VST2LNqWB_fixed_Asm_32
    575654U,	// VST2LNqWB_register_Asm_16
    1099942U,	// VST2LNqWB_register_Asm_32
    567478U,	// VST3LNdAsm_16
    1091766U,	// VST3LNdAsm_32
    1616054U,	// VST3LNdAsm_8
    567478U,	// VST3LNdWB_fixed_Asm_16
    1091766U,	// VST3LNdWB_fixed_Asm_32
    1616054U,	// VST3LNdWB_fixed_Asm_8
    575670U,	// VST3LNdWB_register_Asm_16
    1099958U,	// VST3LNdWB_register_Asm_32
    1624246U,	// VST3LNdWB_register_Asm_8
    567478U,	// VST3LNqAsm_16
    1091766U,	// VST3LNqAsm_32
    567478U,	// VST3LNqWB_fixed_Asm_16
    1091766U,	// VST3LNqWB_fixed_Asm_32
    575670U,	// VST3LNqWB_register_Asm_16
    1099958U,	// VST3LNqWB_register_Asm_32
    269019318U,	// VST3dAsm_16
    269543606U,	// VST3dAsm_32
    270067894U,	// VST3dAsm_8
    269019318U,	// VST3dWB_fixed_Asm_16
    269543606U,	// VST3dWB_fixed_Asm_32
    270067894U,	// VST3dWB_fixed_Asm_8
    269002934U,	// VST3dWB_register_Asm_16
    269527222U,	// VST3dWB_register_Asm_32
    270051510U,	// VST3dWB_register_Asm_8
    336128182U,	// VST3qAsm_16
    336652470U,	// VST3qAsm_32
    337176758U,	// VST3qAsm_8
    336128182U,	// VST3qWB_fixed_Asm_16
    336652470U,	// VST3qWB_fixed_Asm_32
    337176758U,	// VST3qWB_fixed_Asm_8
    336111798U,	// VST3qWB_register_Asm_16
    336636086U,	// VST3qWB_register_Asm_32
    337160374U,	// VST3qWB_register_Asm_8
    567495U,	// VST4LNdAsm_16
    1091783U,	// VST4LNdAsm_32
    1616071U,	// VST4LNdAsm_8
    567495U,	// VST4LNdWB_fixed_Asm_16
    1091783U,	// VST4LNdWB_fixed_Asm_32
    1616071U,	// VST4LNdWB_fixed_Asm_8
    575687U,	// VST4LNdWB_register_Asm_16
    1099975U,	// VST4LNdWB_register_Asm_32
    1624263U,	// VST4LNdWB_register_Asm_8
    567495U,	// VST4LNqAsm_16
    1091783U,	// VST4LNqAsm_32
    567495U,	// VST4LNqWB_fixed_Asm_16
    1091783U,	// VST4LNqWB_fixed_Asm_32
    575687U,	// VST4LNqWB_register_Asm_16
    1099975U,	// VST4LNqWB_register_Asm_32
    537454791U,	// VST4dAsm_16
    537979079U,	// VST4dAsm_32
    538503367U,	// VST4dAsm_8
    537454791U,	// VST4dWB_fixed_Asm_16
    537979079U,	// VST4dWB_fixed_Asm_32
    538503367U,	// VST4dWB_fixed_Asm_8
    537438407U,	// VST4dWB_register_Asm_16
    537962695U,	// VST4dWB_register_Asm_32
    538486983U,	// VST4dWB_register_Asm_8
    604563655U,	// VST4qAsm_16
    605087943U,	// VST4qAsm_32
    605612231U,	// VST4qAsm_8
    604563655U,	// VST4qWB_fixed_Asm_16
    605087943U,	// VST4qWB_fixed_Asm_32
    605612231U,	// VST4qWB_fixed_Asm_8
    604547271U,	// VST4qWB_register_Asm_16
    605071559U,	// VST4qWB_register_Asm_32
    605595847U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BF_LabelPseudo
    0U,	// t2BR_JT
    0U,	// t2DoLoopStart
    0U,	// t2LDMIA_RET
    27523U,	// t2LDRBpcrel
    28786U,	// t2LDRConstPool
    28031U,	// t2LDRHpcrel
    27542U,	// t2LDRSBpcrel
    28070U,	// t2LDRSHpcrel
    0U,	// t2LDRpci_pic
    28786U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LoopDec
    0U,	// t2LoopEnd
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    61756U,	// t2MOVSsi
    45372U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    62225U,	// t2MOVsi
    45841U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// t2WhileLoopStart
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBL_PUSHLR
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tLDMIA_UPD
    28786U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLSri
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tRSBS
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    2108435U,	// ADCri
    2108435U,	// ADCrr
    2165779U,	// ADCrsi
    76819U,	// ADCrsr
    2108503U,	// ADDri
    2108503U,	// ADDrr
    2165847U,	// ADDrsi
    76887U,	// ADDrsr
    2125933U,	// ADR
    673793575U,	// AESD
    673793583U,	// AESE
    740902420U,	// AESIMC
    740902430U,	// AESMC
    2108568U,	// ANDri
    2108568U,	// ANDrr
    2165912U,	// ANDrsi
    76952U,	// ANDrsr
    2157595U,	// BFC
    2141695U,	// BFI
    2108448U,	// BICri
    2108448U,	// BICrr
    2165792U,	// BICrsi
    76832U,	// BICrsr
    3229471U,	// BKPT
    3229419U,	// BL
    3229525U,	// BLX
    2192483U,	// BLX_pred
    3229525U,	// BLXi
    2190928U,	// BL_pred
    3229521U,	// BX
    2190865U,	// BXJ
    3773373U,	// BX_RET
    2192317U,	// BX_pred
    2190013U,	// Bcc
    807514119U,	// CDP
    876724793U,	// CDP2
    5131U,	// CLREX
    2127034U,	// CLZ
    2125728U,	// CMNri
    2125728U,	// CMNzrr
    2158496U,	// CMNzrsi
    2142112U,	// CMNzrsr
    2125841U,	// CMPri
    2125841U,	// CMPrr
    2158609U,	// CMPrsi
    2142225U,	// CMPrsr
    3229455U,	// CPS1p
    941748513U,	// CPS2p
    941748513U,	// CPS3p
    740902507U,	// CRC32B
    740902515U,	// CRC32CB
    740902607U,	// CRC32CH
    740902722U,	// CRC32CW
    740902599U,	// CRC32H
    740902714U,	// CRC32W
    2190589U,	// DBG
    132746U,	// DMB
    132751U,	// DSB
    2109596U,	// EORri
    2109596U,	// EORrr
    2166940U,	// EORrsi
    77980U,	// EORrsr
    3248511U,	// ERET
    1011381008U,	// FCONSTD
    5272336U,	// FCONSTH
    5796624U,	// FCONSTS
    740324280U,	// FLDMXDB_UPD
    2192215U,	// FLDMXIA
    740324183U,	// FLDMXIA_UPD
    6394149U,	// FMSTAT
    740324288U,	// FSTMXDB_UPD
    2192223U,	// FSTMXIA
    740324191U,	// FSTMXIA_UPD
    2191828U,	// HINT
    3229466U,	// HLT
    3229349U,	// HVC
    140948U,	// ISB
    2124265U,	// LDA
    2124474U,	// LDAB
    2126841U,	// LDAEX
    2124785U,	// LDAEXB
    1075866804U,	// LDAEXD
    2125271U,	// LDAEXH
    2125071U,	// LDAH
    1147782877U,	// LDC2L_OFFSET
    1214891741U,	// LDC2L_OPTION
    1214891741U,	// LDC2L_POST
    1282000605U,	// LDC2L_PRE
    1147781664U,	// LDC2_OFFSET
    1214890528U,	// LDC2_OPTION
    1214890528U,	// LDC2_POST
    1281999392U,	// LDC2_PRE
    807448153U,	// LDCL_OFFSET
    807448153U,	// LDCL_OPTION
    807448153U,	// LDCL_POST
    807448153U,	// LDCL_PRE
    807447575U,	// LDC_OFFSET
    807447575U,	// LDC_OPTION
    807447575U,	// LDC_POST
    807447575U,	// LDC_PRE
    2189805U,	// LDMDA
    740321773U,	// LDMDA_UPD
    2190060U,	// LDMDB
    740322028U,	// LDMDB_UPD
    2191178U,	// LDMIA
    740323146U,	// LDMIA_UPD
    2190079U,	// LDMIB
    740322047U,	// LDMIB_UPD
    2150764U,	// LDRBT_POST_IMM
    2150764U,	// LDRBT_POST_REG
    2149251U,	// LDRB_POST_IMM
    2149251U,	// LDRB_POST_REG
    2141059U,	// LDRB_PRE_IMM
    2149251U,	// LDRB_PRE_REG
    2157443U,	// LDRBi12
    2141059U,	// LDRBrs
    2149533U,	// LDRD
    2206877U,	// LDRD_POST
    2206877U,	// LDRD_PRE
    2126853U,	// LDREX
    2124799U,	// LDREXB
    1075866818U,	// LDREXD
    2125285U,	// LDREXH
    2141567U,	// LDRH
    2142607U,	// LDRHTi
    2150799U,	// LDRHTr
    2149759U,	// LDRH_POST
    2149759U,	// LDRH_PRE
    2141078U,	// LDRSB
    2142584U,	// LDRSBTi
    2150776U,	// LDRSBTr
    2149270U,	// LDRSB_POST
    2149270U,	// LDRSB_PRE
    2141606U,	// LDRSH
    2142619U,	// LDRSHTi
    2150811U,	// LDRSHTr
    2149798U,	// LDRSH_POST
    2149798U,	// LDRSH_PRE
    2150958U,	// LDRT_POST_IMM
    2150958U,	// LDRT_POST_REG
    2150514U,	// LDR_POST_IMM
    2150514U,	// LDR_POST_REG
    2142322U,	// LDR_PRE_IMM
    2150514U,	// LDR_PRE_REG
    2158706U,	// LDRcp
    2158706U,	// LDRi12
    2142322U,	// LDRrs
    807514217U,	// MCR
    675398207U,	// MCR2
    807456932U,	// MCRR
    675398213U,	// MCRR2
    2165293U,	// MLA
    2142457U,	// MLS
    7443217U,	// MOVPCLR
    2159219U,	// MOVTi16
    2134801U,	// MOVi
    2126648U,	// MOVi16
    2134801U,	// MOVr
    2134801U,	// MOVr_TC
    2110225U,	// MOVsi
    2167569U,	// MOVsr
    1344384046U,	// MRC
    148006U,	// MRC2
    1411435570U,	// MRRC
    156204U,	// MRRC2
    2191654U,	// MRS
    2126118U,	// MRSbanked
    2191654U,	// MRSsys
    1478521018U,	// MSR
    1545629882U,	// MSRbanked
    1478521018U,	// MSRi
    2109229U,	// MUL
    2150154U,	// MVE_ASRLi
    2150154U,	// MVE_ASRLr
    740901843U,	// MVE_DLSTP_16
    740901102U,	// MVE_DLSTP_32
    740901452U,	// MVE_DLSTP_64
    740902455U,	// MVE_DLSTP_8
    1612812313U,	// MVE_LCTP
    3311359U,	// MVE_LETP
    2150101U,	// MVE_LSLLi
    2150101U,	// MVE_LSLLr
    2150159U,	// MVE_LSRL
    740356214U,	// MVE_SQRSHR
    2207476U,	// MVE_SQRSHRL
    740355712U,	// MVE_SQSHL
    2150073U,	// MVE_SQSHLL
    740356221U,	// MVE_SRSHR
    2150140U,	// MVE_SRSHRL
    740355730U,	// MVE_UQRSHL
    2207431U,	// MVE_UQRSHLL
    740355718U,	// MVE_UQSHL
    2150080U,	// MVE_UQSHLL
    740356227U,	// MVE_URSHR
    2150147U,	// MVE_URSHRL
    8041106U,	// MVE_VABAVs16
    8565394U,	// MVE_VABAVs32
    9089682U,	// MVE_VABAVs8
    9613970U,	// MVE_VABAVu16
    10138258U,	// MVE_VABAVu32
    10662546U,	// MVE_VABAVu8
    5426255U,	// MVE_VABDf16
    5950543U,	// MVE_VABDf32
    8047695U,	// MVE_VABDs16
    8571983U,	// MVE_VABDs32
    9096271U,	// MVE_VABDs8
    9620559U,	// MVE_VABDu16
    10144847U,	// MVE_VABDu32
    10669135U,	// MVE_VABDu8
    5435624U,	// MVE_VABSf16
    5959912U,	// MVE_VABSf32
    8057064U,	// MVE_VABSs16
    8581352U,	// MVE_VABSs32
    9105640U,	// MVE_VABSs8
    11209746U,	// MVE_VADC
    11185657U,	// MVE_VADCI
    8587948U,	// MVE_VADDLVs32acc
    8573683U,	// MVE_VADDLVs32no_acc
    10160812U,	// MVE_VADDLVu32acc
    10146547U,	// MVE_VADDLVu32no_acc
    8047269U,	// MVE_VADDVs16acc
    8057562U,	// MVE_VADDVs16no_acc
    8571557U,	// MVE_VADDVs32acc
    8581850U,	// MVE_VADDVs32no_acc
    9095845U,	// MVE_VADDVs8acc
    9106138U,	// MVE_VADDVs8no_acc
    9620133U,	// MVE_VADDVu16acc
    9630426U,	// MVE_VADDVu16no_acc
    10144421U,	// MVE_VADDVu32acc
    10154714U,	// MVE_VADDVu32no_acc
    10668709U,	// MVE_VADDVu8acc
    10679002U,	// MVE_VADDVu8no_acc
    5426304U,	// MVE_VADD_qr_f16
    5950592U,	// MVE_VADD_qr_f32
    11717760U,	// MVE_VADD_qr_i16
    11193472U,	// MVE_VADD_qr_i32
    12242048U,	// MVE_VADD_qr_i8
    5426304U,	// MVE_VADDf16
    5950592U,	// MVE_VADDf32
    11717760U,	// MVE_VADDi16
    11193472U,	// MVE_VADDi32
    12242048U,	// MVE_VADDi8
    2280599U,	// MVE_VAND
    2280479U,	// MVE_VBIC
    11717663U,	// MVE_VBICimmi16
    11193375U,	// MVE_VBICimmi32
    708798U,	// MVE_VBRSR16
    1233086U,	// MVE_VBRSR32
    1757374U,	// MVE_VBRSR8
    5418075U,	// MVE_VCADDf16
    5942363U,	// MVE_VCADDf32
    11709531U,	// MVE_VCADDi16
    11185243U,	// MVE_VCADDi32
    12233819U,	// MVE_VCADDi8
    8057074U,	// MVE_VCLSs16
    8581362U,	// MVE_VCLSs32
    9105650U,	// MVE_VCLSs8
    11728057U,	// MVE_VCLZs16
    11203769U,	// MVE_VCLZs32
    12252345U,	// MVE_VCLZs8
    5442091U,	// MVE_VCMLAf16
    5966379U,	// MVE_VCMLAf32
    1683140624U,	// MVE_VCMPf16
    1683140624U,	// MVE_VCMPf16r
    1683664912U,	// MVE_VCMPf32
    1683664912U,	// MVE_VCMPf32r
    1689432080U,	// MVE_VCMPi16
    1689432080U,	// MVE_VCMPi16r
    1688907792U,	// MVE_VCMPi32
    1688907792U,	// MVE_VCMPi32r
    1689956368U,	// MVE_VCMPi8
    1689956368U,	// MVE_VCMPi8r
    1685762064U,	// MVE_VCMPs16
    1685762064U,	// MVE_VCMPs16r
    1686286352U,	// MVE_VCMPs32
    1686286352U,	// MVE_VCMPs32r
    1686810640U,	// MVE_VCMPs8
    1686810640U,	// MVE_VCMPs8r
    1687334928U,	// MVE_VCMPu16
    1687334928U,	// MVE_VCMPu16r
    1687859216U,	// MVE_VCMPu32
    1687859216U,	// MVE_VCMPu32r
    1688383504U,	// MVE_VCMPu8
    1688383504U,	// MVE_VCMPu8r
    5418795U,	// MVE_VCMULf16
    5943083U,	// MVE_VCMULf32
    738914334U,	// MVE_VCTP16
    739438622U,	// MVE_VCTP32
    750972958U,	// MVE_VCTP64
    739962910U,	// MVE_VCTP8
    684379068U,	// MVE_VCVTf16f32bh
    684380770U,	// MVE_VCVTf16f32th
    1020449390U,	// MVE_VCVTf16s16_fix
    1624437358U,	// MVE_VCVTf16s16n
    1020973678U,	// MVE_VCVTf16u16_fix
    1624961646U,	// MVE_VCVTf16u16n
    685951932U,	// MVE_VCVTf32f16bh
    685953634U,	// MVE_VCVTf32f16th
    1022022254U,	// MVE_VCVTf32s32_fix
    1626010222U,	// MVE_VCVTf32s32n
    1022546542U,	// MVE_VCVTf32u32_fix
    1626534510U,	// MVE_VCVTf32u32n
    1023070830U,	// MVE_VCVTs16f16_fix
    1627056761U,	// MVE_VCVTs16f16a
    1627058033U,	// MVE_VCVTs16f16m
    1627058129U,	// MVE_VCVTs16f16n
    1627058218U,	// MVE_VCVTs16f16p
    1627058798U,	// MVE_VCVTs16f16z
    1023595118U,	// MVE_VCVTs32f32_fix
    1627581049U,	// MVE_VCVTs32f32a
    1627582321U,	// MVE_VCVTs32f32m
    1627582417U,	// MVE_VCVTs32f32n
    1627582506U,	// MVE_VCVTs32f32p
    1627583086U,	// MVE_VCVTs32f32z
    1024119406U,	// MVE_VCVTu16f16_fix
    1628105337U,	// MVE_VCVTu16f16a
    1628106609U,	// MVE_VCVTu16f16m
    1628106705U,	// MVE_VCVTu16f16n
    1628106794U,	// MVE_VCVTu16f16p
    1628107374U,	// MVE_VCVTu16f16z
    1024643694U,	// MVE_VCVTu32f32_fix
    1628629625U,	// MVE_VCVTu32f32a
    1628630897U,	// MVE_VCVTu32f32m
    1628630993U,	// MVE_VCVTu32f32n
    1628631082U,	// MVE_VCVTu32f32p
    1628631662U,	// MVE_VCVTu32f32z
    9613360U,	// MVE_VDDUPu16
    10137648U,	// MVE_VDDUPu32
    10661936U,	// MVE_VDDUPu8
    716860U,	// MVE_VDUP16
    1241148U,	// MVE_VDUP32
    1765436U,	// MVE_VDUP8
    9637953U,	// MVE_VDWDUPu16
    10162241U,	// MVE_VDWDUPu32
    10686529U,	// MVE_VDWDUPu8
    2281627U,	// MVE_VEOR
    5419228U,	// MVE_VFMA_qr_Sf16
    5943516U,	// MVE_VFMA_qr_Sf32
    5417538U,	// MVE_VFMA_qr_f16
    5941826U,	// MVE_VFMA_qr_f32
    5417538U,	// MVE_VFMAf16
    5941826U,	// MVE_VFMAf32
    5419272U,	// MVE_VFMSf16
    5943560U,	// MVE_VFMSf32
    8047726U,	// MVE_VHADD_qr_s16
    8572014U,	// MVE_VHADD_qr_s32
    9096302U,	// MVE_VHADD_qr_s8
    9620590U,	// MVE_VHADD_qr_u16
    10144878U,	// MVE_VHADD_qr_u32
    10669166U,	// MVE_VHADD_qr_u8
    8047726U,	// MVE_VHADDs16
    8572014U,	// MVE_VHADDs32
    9096302U,	// MVE_VHADDs8
    9620590U,	// MVE_VHADDu16
    10144878U,	// MVE_VHADDu32
    10669166U,	// MVE_VHADDu8
    8039508U,	// MVE_VHCADDs16
    8563796U,	// MVE_VHCADDs32
    9088084U,	// MVE_VHCADDs8
    8047570U,	// MVE_VHSUB_qr_s16
    8571858U,	// MVE_VHSUB_qr_s32
    9096146U,	// MVE_VHSUB_qr_s8
    9620434U,	// MVE_VHSUB_qr_u16
    10144722U,	// MVE_VHSUB_qr_u32
    10669010U,	// MVE_VHSUB_qr_u8
    8047570U,	// MVE_VHSUBs16
    8571858U,	// MVE_VHSUBs32
    9096146U,	// MVE_VHSUBs8
    9620434U,	// MVE_VHSUBu16
    10144722U,	// MVE_VHSUBu32
    10669010U,	// MVE_VHSUBu8
    9613366U,	// MVE_VIDUPu16
    10137654U,	// MVE_VIDUPu32
    10661942U,	// MVE_VIDUPu8
    9637960U,	// MVE_VIWDUPu16
    10162248U,	// MVE_VIWDUPu32
    10686536U,	// MVE_VIWDUPu8
    18555739U,	// MVE_VLD20_16
    19080027U,	// MVE_VLD20_16_wb
    18554881U,	// MVE_VLD20_32
    19079169U,	// MVE_VLD20_32_wb
    18556328U,	// MVE_VLD20_8
    19080616U,	// MVE_VLD20_8_wb
    18555779U,	// MVE_VLD21_16
    19080067U,	// MVE_VLD21_16_wb
    18554947U,	// MVE_VLD21_32
    19079235U,	// MVE_VLD21_32_wb
    18556364U,	// MVE_VLD21_8
    19080652U,	// MVE_VLD21_8_wb
    18563951U,	// MVE_VLD40_16
    19088239U,	// MVE_VLD40_16_wb
    18563093U,	// MVE_VLD40_32
    19087381U,	// MVE_VLD40_32_wb
    18564538U,	// MVE_VLD40_8
    19088826U,	// MVE_VLD40_8_wb
    18563991U,	// MVE_VLD41_16
    19088279U,	// MVE_VLD41_16_wb
    18563159U,	// MVE_VLD41_32
    19087447U,	// MVE_VLD41_32_wb
    18564574U,	// MVE_VLD41_8
    19088862U,	// MVE_VLD41_8_wb
    18564011U,	// MVE_VLD42_16
    19088299U,	// MVE_VLD42_16_wb
    18563205U,	// MVE_VLD42_32
    19087493U,	// MVE_VLD42_32_wb
    18564592U,	// MVE_VLD42_8
    19088880U,	// MVE_VLD42_8_wb
    18564031U,	// MVE_VLD43_16
    19088319U,	// MVE_VLD43_16_wb
    18563238U,	// MVE_VLD43_32
    19087526U,	// MVE_VLD43_32_wb
    18564610U,	// MVE_VLD43_8
    19088898U,	// MVE_VLD43_8_wb
    8047490U,	// MVE_VLDRBS16
    746236802U,	// MVE_VLDRBS16_post
    746236802U,	// MVE_VLDRBS16_pre
    8047490U,	// MVE_VLDRBS16_rq
    8571778U,	// MVE_VLDRBS32
    746761090U,	// MVE_VLDRBS32_post
    746761090U,	// MVE_VLDRBS32_pre
    8571778U,	// MVE_VLDRBS32_rq
    9620354U,	// MVE_VLDRBU16
    747809666U,	// MVE_VLDRBU16_post
    747809666U,	// MVE_VLDRBU16_pre
    9620354U,	// MVE_VLDRBU16_rq
    10144642U,	// MVE_VLDRBU32
    748333954U,	// MVE_VLDRBU32_post
    748333954U,	// MVE_VLDRBU32_pre
    10144642U,	// MVE_VLDRBU32_rq
    10668930U,	// MVE_VLDRBU8
    748858242U,	// MVE_VLDRBU8_post
    748858242U,	// MVE_VLDRBU8_pre
    10668930U,	// MVE_VLDRBU8_rq
    19582108U,	// MVE_VLDRDU64_qi
    757771420U,	// MVE_VLDRDU64_qi_pre
    19582108U,	// MVE_VLDRDU64_rq
    19582108U,	// MVE_VLDRDU64_rq_u
    8572286U,	// MVE_VLDRHS32
    746761598U,	// MVE_VLDRHS32_post
    746761598U,	// MVE_VLDRHS32_pre
    8572286U,	// MVE_VLDRHS32_rq
    8572286U,	// MVE_VLDRHS32_rq_u
    9620862U,	// MVE_VLDRHU16
    747810174U,	// MVE_VLDRHU16_post
    747810174U,	// MVE_VLDRHU16_pre
    9620862U,	// MVE_VLDRHU16_rq
    9620862U,	// MVE_VLDRHU16_rq_u
    10145150U,	// MVE_VLDRHU32
    748334462U,	// MVE_VLDRHU32_post
    748334462U,	// MVE_VLDRHU32_pre
    10145150U,	// MVE_VLDRHU32_rq
    10145150U,	// MVE_VLDRHU32_rq_u
    10146604U,	// MVE_VLDRWU32
    748335916U,	// MVE_VLDRWU32_post
    748335916U,	// MVE_VLDRWU32_pre
    10146604U,	// MVE_VLDRWU32_qi
    748335916U,	// MVE_VLDRWU32_qi_pre
    10146604U,	// MVE_VLDRWU32_rq
    10146604U,	// MVE_VLDRWU32_rq_u
    746246867U,	// MVE_VMAXAVs16
    746771155U,	// MVE_VMAXAVs32
    747295443U,	// MVE_VMAXAVs8
    8047284U,	// MVE_VMAXAs16
    8571572U,	// MVE_VMAXAs32
    9095860U,	// MVE_VMAXAs8
    743625411U,	// MVE_VMAXNMAVf16
    744149699U,	// MVE_VMAXNMAVf32
    5425749U,	// MVE_VMAXNMAf16
    5950037U,	// MVE_VMAXNMAf32
    743625474U,	// MVE_VMAXNMVf16
    744149762U,	// MVE_VMAXNMVf32
    5427029U,	// MVE_VMAXNMf16
    5951317U,	// MVE_VMAXNMf32
    746246933U,	// MVE_VMAXVs16
    746771221U,	// MVE_VMAXVs32
    747295509U,	// MVE_VMAXVs8
    747819797U,	// MVE_VMAXVu16
    748344085U,	// MVE_VMAXVu32
    748868373U,	// MVE_VMAXVu8
    8049517U,	// MVE_VMAXs16
    8573805U,	// MVE_VMAXs32
    9098093U,	// MVE_VMAXs8
    9622381U,	// MVE_VMAXu16
    10146669U,	// MVE_VMAXu32
    10670957U,	// MVE_VMAXu8
    746246860U,	// MVE_VMINAVs16
    746771148U,	// MVE_VMINAVs32
    747295436U,	// MVE_VMINAVs8
    8047197U,	// MVE_VMINAs16
    8571485U,	// MVE_VMINAs32
    9095773U,	// MVE_VMINAs8
    743625402U,	// MVE_VMINNMAVf16
    744149690U,	// MVE_VMINNMAVf32
    5425741U,	// MVE_VMINNMAf16
    5950029U,	// MVE_VMINNMAf32
    743625466U,	// MVE_VMINNMVf16
    744149754U,	// MVE_VMINNMVf32
    5427022U,	// MVE_VMINNMf16
    5951310U,	// MVE_VMINNMf32
    746246922U,	// MVE_VMINVs16
    746771210U,	// MVE_VMINVs32
    747295498U,	// MVE_VMINVs8
    747819786U,	// MVE_VMINVu16
    748344074U,	// MVE_VMINVu32
    748868362U,	// MVE_VMINVu8
    8048539U,	// MVE_VMINs16
    8572827U,	// MVE_VMINs32
    9097115U,	// MVE_VMINs8
    9621403U,	// MVE_VMINu16
    10145691U,	// MVE_VMINu32
    10669979U,	// MVE_VMINu8
    8039039U,	// MVE_VMLADAVas16
    8563327U,	// MVE_VMLADAVas32
    9087615U,	// MVE_VMLADAVas8
    9611903U,	// MVE_VMLADAVau16
    10136191U,	// MVE_VMLADAVau32
    10660479U,	// MVE_VMLADAVau8
    8041358U,	// MVE_VMLADAVaxs16
    8565646U,	// MVE_VMLADAVaxs32
    9089934U,	// MVE_VMLADAVaxs8
    8049304U,	// MVE_VMLADAVs16
    8573592U,	// MVE_VMLADAVs32
    9097880U,	// MVE_VMLADAVs8
    9622168U,	// MVE_VMLADAVu16
    10146456U,	// MVE_VMLADAVu32
    10670744U,	// MVE_VMLADAVu8
    8049811U,	// MVE_VMLADAVxs16
    8574099U,	// MVE_VMLADAVxs32
    9098387U,	// MVE_VMLADAVxs8
    8088200U,	// MVE_VMLALDAVas16
    8612488U,	// MVE_VMLALDAVas32
    9661064U,	// MVE_VMLALDAVau16
    10185352U,	// MVE_VMLALDAVau32
    8090520U,	// MVE_VMLALDAVaxs16
    8614808U,	// MVE_VMLALDAVaxs32
    8041120U,	// MVE_VMLALDAVs16
    8565408U,	// MVE_VMLALDAVs32
    9613984U,	// MVE_VMLALDAVu16
    10138272U,	// MVE_VMLALDAVu32
    8041628U,	// MVE_VMLALDAVxs16
    8565916U,	// MVE_VMLALDAVxs32
    8040662U,	// MVE_VMLAS_qr_s16
    8564950U,	// MVE_VMLAS_qr_s32
    9089238U,	// MVE_VMLAS_qr_s8
    9613526U,	// MVE_VMLAS_qr_u16
    10137814U,	// MVE_VMLAS_qr_u32
    10662102U,	// MVE_VMLAS_qr_u8
    8038973U,	// MVE_VMLA_qr_s16
    8563261U,	// MVE_VMLA_qr_s32
    9087549U,	// MVE_VMLA_qr_s8
    9611837U,	// MVE_VMLA_qr_u16
    10136125U,	// MVE_VMLA_qr_u32
    10660413U,	// MVE_VMLA_qr_u8
    8039068U,	// MVE_VMLSDAVas16
    8563356U,	// MVE_VMLSDAVas32
    9087644U,	// MVE_VMLSDAVas8
    8041390U,	// MVE_VMLSDAVaxs16
    8565678U,	// MVE_VMLSDAVaxs32
    9089966U,	// MVE_VMLSDAVaxs8
    8049330U,	// MVE_VMLSDAVs16
    8573618U,	// MVE_VMLSDAVs32
    9097906U,	// MVE_VMLSDAVs8
    8049840U,	// MVE_VMLSDAVxs16
    8574128U,	// MVE_VMLSDAVxs32
    9098416U,	// MVE_VMLSDAVxs8
    8088210U,	// MVE_VMLSLDAVas16
    8612498U,	// MVE_VMLSLDAVas32
    8090531U,	// MVE_VMLSLDAVaxs16
    8614819U,	// MVE_VMLSLDAVaxs32
    8041129U,	// MVE_VMLSLDAVs16
    8565417U,	// MVE_VMLSLDAVs32
    8041638U,	// MVE_VMLSLDAVxs16
    8565926U,	// MVE_VMLSLDAVxs32
    8055591U,	// MVE_VMOVLs16bh
    8057288U,	// MVE_VMOVLs16th
    9104167U,	// MVE_VMOVLs8bh
    9105864U,	// MVE_VMOVLs8th
    9628455U,	// MVE_VMOVLu16bh
    9630152U,	// MVE_VMOVLu16th
    10677031U,	// MVE_VMOVLu8bh
    10678728U,	// MVE_VMOVLu8th
    11717494U,	// MVE_VMOVNi16bh
    11719197U,	// MVE_VMOVNi16th
    11193206U,	// MVE_VMOVNi32bh
    11194909U,	// MVE_VMOVNi32th
    1110800U,	// MVE_VMOV_from_lane_32
    7926544U,	// MVE_VMOV_from_lane_s16
    8975120U,	// MVE_VMOV_from_lane_s8
    9499408U,	// MVE_VMOV_from_lane_u16
    10547984U,	// MVE_VMOV_from_lane_u8
    2208528U,	// MVE_VMOV_q_rr
    2151184U,	// MVE_VMOV_rr_q
    570128U,	// MVE_VMOV_to_lane_16
    1094416U,	// MVE_VMOV_to_lane_32
    1618704U,	// MVE_VMOV_to_lane_8
    5960464U,	// MVE_VMOVimmf32
    11727632U,	// MVE_VMOVimmi16
    11203344U,	// MVE_VMOVimmi32
    1764946704U,	// MVE_VMOVimmi64
    12251920U,	// MVE_VMOVimmi8
    8047992U,	// MVE_VMULHs16
    8572280U,	// MVE_VMULHs32
    9096568U,	// MVE_VMULHs8
    9620856U,	// MVE_VMULHu16
    10145144U,	// MVE_VMULHu32
    10669432U,	// MVE_VMULHu8
    20630299U,	// MVE_VMULLBp16
    21154587U,	// MVE_VMULLBp8
    8047387U,	// MVE_VMULLBs16
    8571675U,	// MVE_VMULLBs32
    9095963U,	// MVE_VMULLBs8
    9620251U,	// MVE_VMULLBu16
    10144539U,	// MVE_VMULLBu32
    10668827U,	// MVE_VMULLBu8
    20632001U,	// MVE_VMULLTp16
    21156289U,	// MVE_VMULLTp8
    8049089U,	// MVE_VMULLTs16
    8573377U,	// MVE_VMULLTs32
    9097665U,	// MVE_VMULLTs8
    9621953U,	// MVE_VMULLTu16
    10146241U,	// MVE_VMULLTu32
    10670529U,	// MVE_VMULLTu8
    5427005U,	// MVE_VMUL_qr_f16
    5951293U,	// MVE_VMUL_qr_f32
    11718461U,	// MVE_VMUL_qr_i16
    11194173U,	// MVE_VMUL_qr_i32
    12242749U,	// MVE_VMUL_qr_i8
    5427005U,	// MVE_VMULf16
    5951293U,	// MVE_VMULf32
    11718461U,	// MVE_VMULi16
    11194173U,	// MVE_VMULi32
    12242749U,	// MVE_VMULi8
    2289648U,	// MVE_VMVN
    11726832U,	// MVE_VMVNimmi16
    11202544U,	// MVE_VMVNimmi32
    5434631U,	// MVE_VNEGf16
    5958919U,	// MVE_VNEGf32
    8056071U,	// MVE_VNEGs16
    8580359U,	// MVE_VNEGs32
    9104647U,	// MVE_VNEGs8
    2281408U,	// MVE_VORN
    2281641U,	// MVE_VORR
    11718825U,	// MVE_VORRimmi16
    11194537U,	// MVE_VORRimmi32
    1612902948U,	// MVE_VPNOT
    2281078U,	// MVE_VPSEL
    1612943934U,	// MVE_VPST
    1690014250U,	// MVE_VPTv16i8
    1690014250U,	// MVE_VPTv16i8r
    1686868522U,	// MVE_VPTv16s8
    1686868522U,	// MVE_VPTv16s8r
    1688441386U,	// MVE_VPTv16u8
    1688441386U,	// MVE_VPTv16u8r
    1683722794U,	// MVE_VPTv4f32
    1683722794U,	// MVE_VPTv4f32r
    1688965674U,	// MVE_VPTv4i32
    1688965674U,	// MVE_VPTv4i32r
    1686344234U,	// MVE_VPTv4s32
    1686344234U,	// MVE_VPTv4s32r
    1687917098U,	// MVE_VPTv4u32
    1687917098U,	// MVE_VPTv4u32r
    1683198506U,	// MVE_VPTv8f16
    1683198506U,	// MVE_VPTv8f16r
    1689489962U,	// MVE_VPTv8i16
    1689489962U,	// MVE_VPTv8i16r
    1685819946U,	// MVE_VPTv8s16
    1685819946U,	// MVE_VPTv8s16r
    1687392810U,	// MVE_VPTv8u16
    1687392810U,	// MVE_VPTv8u16r
    8057058U,	// MVE_VQABSs16
    8581346U,	// MVE_VQABSs32
    9105634U,	// MVE_VQABSs8
    8047738U,	// MVE_VQADD_qr_s16
    8572026U,	// MVE_VQADD_qr_s32
    9096314U,	// MVE_VQADD_qr_s8
    9620602U,	// MVE_VQADD_qr_u16
    10144890U,	// MVE_VQADD_qr_u32
    10669178U,	// MVE_VQADD_qr_u8
    8047738U,	// MVE_VQADDs16
    8572026U,	// MVE_VQADDs32
    9096314U,	// MVE_VQADDs8
    9620602U,	// MVE_VQADDu16
    10144890U,	// MVE_VQADDu32
    10669178U,	// MVE_VQADDu8
    8041505U,	// MVE_VQDMLADHXs16
    8565793U,	// MVE_VQDMLADHXs32
    9090081U,	// MVE_VQDMLADHXs8
    8039733U,	// MVE_VQDMLADHs16
    8564021U,	// MVE_VQDMLADHs32
    9088309U,	// MVE_VQDMLADHs8
    8039700U,	// MVE_VQDMLAH_qrs16
    8563988U,	// MVE_VQDMLAH_qrs32
    9088276U,	// MVE_VQDMLAH_qrs8
    8039818U,	// MVE_VQDMLASH_qrs16
    8564106U,	// MVE_VQDMLASH_qrs32
    9088394U,	// MVE_VQDMLASH_qrs8
    8041526U,	// MVE_VQDMLSDHXs16
    8565814U,	// MVE_VQDMLSDHXs32
    9090102U,	// MVE_VQDMLSDHXs8
    8039752U,	// MVE_VQDMLSDHs16
    8564040U,	// MVE_VQDMLSDHs32
    9088328U,	// MVE_VQDMLSDHs8
    8047968U,	// MVE_VQDMULH_qr_s16
    8572256U,	// MVE_VQDMULH_qr_s32
    9096544U,	// MVE_VQDMULH_qr_s8
    8047968U,	// MVE_VQDMULHi16
    8572256U,	// MVE_VQDMULHi32
    9096544U,	// MVE_VQDMULHi8
    8047378U,	// MVE_VQDMULL_qr_s16bh
    8049080U,	// MVE_VQDMULL_qr_s16th
    8571666U,	// MVE_VQDMULL_qr_s32bh
    8573368U,	// MVE_VQDMULL_qr_s32th
    8047378U,	// MVE_VQDMULLs16bh
    8049080U,	// MVE_VQDMULLs16th
    8571666U,	// MVE_VQDMULLs32bh
    8573368U,	// MVE_VQDMULLs32th
    8047470U,	// MVE_VQMOVNs16bh
    8049173U,	// MVE_VQMOVNs16th
    8571758U,	// MVE_VQMOVNs32bh
    8573461U,	// MVE_VQMOVNs32th
    9620334U,	// MVE_VQMOVNu16bh
    9622037U,	// MVE_VQMOVNu16th
    10144622U,	// MVE_VQMOVNu32bh
    10146325U,	// MVE_VQMOVNu32th
    8047461U,	// MVE_VQMOVUNs16bh
    8049164U,	// MVE_VQMOVUNs16th
    8571749U,	// MVE_VQMOVUNs32bh
    8573452U,	// MVE_VQMOVUNs32th
    8056065U,	// MVE_VQNEGs16
    8580353U,	// MVE_VQNEGs32
    9104641U,	// MVE_VQNEGs8
    8041515U,	// MVE_VQRDMLADHXs16
    8565803U,	// MVE_VQRDMLADHXs32
    9090091U,	// MVE_VQRDMLADHXs8
    8039742U,	// MVE_VQRDMLADHs16
    8564030U,	// MVE_VQRDMLADHs32
    9088318U,	// MVE_VQRDMLADHs8
    8039708U,	// MVE_VQRDMLAH_qrs16
    8563996U,	// MVE_VQRDMLAH_qrs32
    9088284U,	// MVE_VQRDMLAH_qrs8
    8039827U,	// MVE_VQRDMLASH_qrs16
    8564115U,	// MVE_VQRDMLASH_qrs32
    9088403U,	// MVE_VQRDMLASH_qrs8
    8041536U,	// MVE_VQRDMLSDHXs16
    8565824U,	// MVE_VQRDMLSDHXs32
    9090112U,	// MVE_VQRDMLSDHXs8
    8039761U,	// MVE_VQRDMLSDHs16
    8564049U,	// MVE_VQRDMLSDHs32
    9088337U,	// MVE_VQRDMLSDHs8
    8047976U,	// MVE_VQRDMULH_qr_s16
    8572264U,	// MVE_VQRDMULH_qr_s32
    9096552U,	// MVE_VQRDMULH_qr_s8
    8047976U,	// MVE_VQRDMULHi16
    8572264U,	// MVE_VQRDMULHi32
    9096552U,	// MVE_VQRDMULHi8
    8048281U,	// MVE_VQRSHL_by_vecs16
    8572569U,	// MVE_VQRSHL_by_vecs32
    9096857U,	// MVE_VQRSHL_by_vecs8
    9621145U,	// MVE_VQRSHL_by_vecu16
    10145433U,	// MVE_VQRSHL_by_vecu32
    10669721U,	// MVE_VQRSHL_by_vecu8
    8048281U,	// MVE_VQRSHL_qrs16
    8572569U,	// MVE_VQRSHL_qrs32
    9096857U,	// MVE_VQRSHL_qrs8
    9621145U,	// MVE_VQRSHL_qru16
    10145433U,	// MVE_VQRSHL_qru32
    10669721U,	// MVE_VQRSHL_qru8
    8039226U,	// MVE_VQRSHRNbhs16
    8563514U,	// MVE_VQRSHRNbhs32
    9612090U,	// MVE_VQRSHRNbhu16
    10136378U,	// MVE_VQRSHRNbhu32
    8040929U,	// MVE_VQRSHRNths16
    8565217U,	// MVE_VQRSHRNths32
    9613793U,	// MVE_VQRSHRNthu16
    10138081U,	// MVE_VQRSHRNthu32
    8039259U,	// MVE_VQRSHRUNs16bh
    8040962U,	// MVE_VQRSHRUNs16th
    8563547U,	// MVE_VQRSHRUNs32bh
    8565250U,	// MVE_VQRSHRUNs32th
    8049291U,	// MVE_VQSHLU_imms16
    8573579U,	// MVE_VQSHLU_imms32
    9097867U,	// MVE_VQSHLU_imms8
    8048268U,	// MVE_VQSHL_by_vecs16
    8572556U,	// MVE_VQSHL_by_vecs32
    9096844U,	// MVE_VQSHL_by_vecs8
    9621132U,	// MVE_VQSHL_by_vecu16
    10145420U,	// MVE_VQSHL_by_vecu32
    10669708U,	// MVE_VQSHL_by_vecu8
    8048268U,	// MVE_VQSHL_qrs16
    8572556U,	// MVE_VQSHL_qrs32
    9096844U,	// MVE_VQSHL_qrs8
    9621132U,	// MVE_VQSHL_qru16
    10145420U,	// MVE_VQSHL_qru32
    10669708U,	// MVE_VQSHL_qru8
    8048268U,	// MVE_VQSHLimms16
    8572556U,	// MVE_VQSHLimms32
    9096844U,	// MVE_VQSHLimms8
    9621132U,	// MVE_VQSHLimmu16
    10145420U,	// MVE_VQSHLimmu32
    10669708U,	// MVE_VQSHLimmu8
    8039218U,	// MVE_VQSHRNbhs16
    8563506U,	// MVE_VQSHRNbhs32
    9612082U,	// MVE_VQSHRNbhu16
    10136370U,	// MVE_VQSHRNbhu32
    8040921U,	// MVE_VQSHRNths16
    8565209U,	// MVE_VQSHRNths32
    9613785U,	// MVE_VQSHRNthu16
    10138073U,	// MVE_VQSHRNthu32
    8039250U,	// MVE_VQSHRUNs16bh
    8040953U,	// MVE_VQSHRUNs16th
    8563538U,	// MVE_VQSHRUNs32bh
    8565241U,	// MVE_VQSHRUNs32th
    8047576U,	// MVE_VQSUB_qr_s16
    8571864U,	// MVE_VQSUB_qr_s32
    9096152U,	// MVE_VQSUB_qr_s8
    9620440U,	// MVE_VQSUB_qr_u16
    10144728U,	// MVE_VQSUB_qr_u32
    10669016U,	// MVE_VQSUB_qr_u8
    8047576U,	// MVE_VQSUBs16
    8571864U,	// MVE_VQSUBs32
    9096152U,	// MVE_VQSUBs8
    9620440U,	// MVE_VQSUBu16
    10144728U,	// MVE_VQSUBu32
    10669016U,	// MVE_VQSUBu8
    1763652U,	// MVE_VREV16_8
    714863U,	// MVE_VREV32_16
    1763439U,	// MVE_VREV32_8
    714939U,	// MVE_VREV64_16
    1239227U,	// MVE_VREV64_32
    1763515U,	// MVE_VREV64_8
    8047719U,	// MVE_VRHADDs16
    8572007U,	// MVE_VRHADDs32
    9096295U,	// MVE_VRHADDs8
    9620583U,	// MVE_VRHADDu16
    10144871U,	// MVE_VRHADDu32
    10669159U,	// MVE_VRHADDu8
    5433966U,	// MVE_VRINTf16A
    5435236U,	// MVE_VRINTf16M
    5435338U,	// MVE_VRINTf16N
    5435427U,	// MVE_VRINTf16P
    5436556U,	// MVE_VRINTf16X
    5436606U,	// MVE_VRINTf16Z
    5958254U,	// MVE_VRINTf32A
    5959524U,	// MVE_VRINTf32M
    5959626U,	// MVE_VRINTf32N
    5959715U,	// MVE_VRINTf32P
    5960844U,	// MVE_VRINTf32X
    5960894U,	// MVE_VRINTf32Z
    8612345U,	// MVE_VRMLALDAVHas32
    10185209U,	// MVE_VRMLALDAVHau32
    8614717U,	// MVE_VRMLALDAVHaxs32
    8564161U,	// MVE_VRMLALDAVHs32
    10137025U,	// MVE_VRMLALDAVHu32
    8565835U,	// MVE_VRMLALDAVHxs32
    8612357U,	// MVE_VRMLSLDAVHas32
    8614730U,	// MVE_VRMLSLDAVHaxs32
    8564172U,	// MVE_VRMLSLDAVHs32
    8565847U,	// MVE_VRMLSLDAVHxs32
    8047985U,	// MVE_VRMULHs16
    8572273U,	// MVE_VRMULHs32
    9096561U,	// MVE_VRMULHs8
    9620849U,	// MVE_VRMULHu16
    10145137U,	// MVE_VRMULHu32
    10669425U,	// MVE_VRMULHu8
    8048288U,	// MVE_VRSHL_by_vecs16
    8572576U,	// MVE_VRSHL_by_vecs32
    9096864U,	// MVE_VRSHL_by_vecs8
    9621152U,	// MVE_VRSHL_by_vecu16
    10145440U,	// MVE_VRSHL_by_vecu32
    10669728U,	// MVE_VRSHL_by_vecu8
    8048288U,	// MVE_VRSHL_qrs16
    8572576U,	// MVE_VRSHL_qrs32
    9096864U,	// MVE_VRSHL_qrs8
    9621152U,	// MVE_VRSHL_qru16
    10145440U,	// MVE_VRSHL_qru32
    10669728U,	// MVE_VRSHL_qru8
    11709251U,	// MVE_VRSHRNi16bh
    11710954U,	// MVE_VRSHRNi16th
    11184963U,	// MVE_VRSHRNi32bh
    11186666U,	// MVE_VRSHRNi32th
    8048777U,	// MVE_VRSHR_imms16
    8573065U,	// MVE_VRSHR_imms32
    9097353U,	// MVE_VRSHR_imms8
    9621641U,	// MVE_VRSHR_immu16
    10145929U,	// MVE_VRSHR_immu32
    10670217U,	// MVE_VRSHR_immu8
    11209741U,	// MVE_VSBC
    11185651U,	// MVE_VSBCI
    673385508U,	// MVE_VSHLC
    8047371U,	// MVE_VSHLL_imms16bh
    8049073U,	// MVE_VSHLL_imms16th
    9095947U,	// MVE_VSHLL_imms8bh
    9097649U,	// MVE_VSHLL_imms8th
    9620235U,	// MVE_VSHLL_immu16bh
    9621937U,	// MVE_VSHLL_immu16th
    10668811U,	// MVE_VSHLL_immu8bh
    10670513U,	// MVE_VSHLL_immu8th
    8055563U,	// MVE_VSHLL_lws16bh
    8057265U,	// MVE_VSHLL_lws16th
    9104139U,	// MVE_VSHLL_lws8bh
    9105841U,	// MVE_VSHLL_lws8th
    9628427U,	// MVE_VSHLL_lwu16bh
    9630129U,	// MVE_VSHLL_lwu16th
    10677003U,	// MVE_VSHLL_lwu8bh
    10678705U,	// MVE_VSHLL_lwu8th
    8048294U,	// MVE_VSHL_by_vecs16
    8572582U,	// MVE_VSHL_by_vecs32
    9096870U,	// MVE_VSHL_by_vecs8
    9621158U,	// MVE_VSHL_by_vecu16
    10145446U,	// MVE_VSHL_by_vecu32
    10669734U,	// MVE_VSHL_by_vecu8
    11718310U,	// MVE_VSHL_immi16
    11194022U,	// MVE_VSHL_immi32
    12242598U,	// MVE_VSHL_immi8
    8048294U,	// MVE_VSHL_qrs16
    8572582U,	// MVE_VSHL_qrs32
    9096870U,	// MVE_VSHL_qrs8
    9621158U,	// MVE_VSHL_qru16
    10145446U,	// MVE_VSHL_qru32
    10669734U,	// MVE_VSHL_qru8
    11709259U,	// MVE_VSHRNi16bh
    11710962U,	// MVE_VSHRNi16th
    11184971U,	// MVE_VSHRNi32bh
    11186674U,	// MVE_VSHRNi32th
    8048783U,	// MVE_VSHR_imms16
    8573071U,	// MVE_VSHR_imms32
    9097359U,	// MVE_VSHR_imms8
    9621647U,	// MVE_VSHR_immu16
    10145935U,	// MVE_VSHR_immu32
    10670223U,	// MVE_VSHR_immu8
    699911U,	// MVE_VSLIimm16
    1224199U,	// MVE_VSLIimm32
    1748487U,	// MVE_VSLIimm8
    699916U,	// MVE_VSRIimm16
    1224204U,	// MVE_VSRIimm32
    1748492U,	// MVE_VSRIimm8
    21701477U,	// MVE_VST20_16
    238437U,	// MVE_VST20_16_wb
    21700619U,	// MVE_VST20_32
    237579U,	// MVE_VST20_32_wb
    21702065U,	// MVE_VST20_8
    239025U,	// MVE_VST20_8_wb
    21701517U,	// MVE_VST21_16
    238477U,	// MVE_VST21_16_wb
    21700685U,	// MVE_VST21_32
    237645U,	// MVE_VST21_32_wb
    21702101U,	// MVE_VST21_8
    239061U,	// MVE_VST21_8_wb
    21709689U,	// MVE_VST40_16
    246649U,	// MVE_VST40_16_wb
    21708831U,	// MVE_VST40_32
    245791U,	// MVE_VST40_32_wb
    21710275U,	// MVE_VST40_8
    247235U,	// MVE_VST40_8_wb
    21709729U,	// MVE_VST41_16
    246689U,	// MVE_VST41_16_wb
    21708897U,	// MVE_VST41_32
    245857U,	// MVE_VST41_32_wb
    21710311U,	// MVE_VST41_8
    247271U,	// MVE_VST41_8_wb
    21709749U,	// MVE_VST42_16
    246709U,	// MVE_VST42_16_wb
    21708943U,	// MVE_VST42_32
    245903U,	// MVE_VST42_32_wb
    21710329U,	// MVE_VST42_8
    247289U,	// MVE_VST42_8_wb
    21709769U,	// MVE_VST43_16
    246729U,	// MVE_VST43_16_wb
    21708976U,	// MVE_VST43_32
    245936U,	// MVE_VST43_32_wb
    21710347U,	// MVE_VST43_8
    247307U,	// MVE_VST43_8_wb
    707464U,	// MVE_VSTRB16
    738896776U,	// MVE_VSTRB16_post
    738896776U,	// MVE_VSTRB16_pre
    707464U,	// MVE_VSTRB16_rq
    1231752U,	// MVE_VSTRB32
    739421064U,	// MVE_VSTRB32_post
    739421064U,	// MVE_VSTRB32_pre
    1231752U,	// MVE_VSTRB32_rq
    1756040U,	// MVE_VSTRB8_rq
    1756040U,	// MVE_VSTRBU8
    739945352U,	// MVE_VSTRBU8_post
    739945352U,	// MVE_VSTRBU8_pre
    12766370U,	// MVE_VSTRD64_qi
    750955682U,	// MVE_VSTRD64_qi_pre
    12766370U,	// MVE_VSTRD64_rq
    12766370U,	// MVE_VSTRD64_rq_u
    707972U,	// MVE_VSTRH16_rq
    707972U,	// MVE_VSTRH16_rq_u
    1232260U,	// MVE_VSTRH32
    739421572U,	// MVE_VSTRH32_post
    739421572U,	// MVE_VSTRH32_pre
    1232260U,	// MVE_VSTRH32_rq
    1232260U,	// MVE_VSTRH32_rq_u
    707972U,	// MVE_VSTRHU16
    738897284U,	// MVE_VSTRHU16_post
    738897284U,	// MVE_VSTRHU16_pre
    1233714U,	// MVE_VSTRW32_qi
    739423026U,	// MVE_VSTRW32_qi_pre
    1233714U,	// MVE_VSTRW32_rq
    1233714U,	// MVE_VSTRW32_rq_u
    1233714U,	// MVE_VSTRWU32
    739423026U,	// MVE_VSTRWU32_post
    739423026U,	// MVE_VSTRWU32_pre
    5426142U,	// MVE_VSUB_qr_f16
    5950430U,	// MVE_VSUB_qr_f32
    11717598U,	// MVE_VSUB_qr_i16
    11193310U,	// MVE_VSUB_qr_i32
    12241886U,	// MVE_VSUB_qr_i8
    5426142U,	// MVE_VSUBf16
    5950430U,	// MVE_VSUBf32
    11717598U,	// MVE_VSUBi16
    11193310U,	// MVE_VSUBi32
    12241886U,	// MVE_VSUBi8
    740901853U,	// MVE_WLSTP_16
    740901112U,	// MVE_WLSTP_32
    740901462U,	// MVE_WLSTP_64
    740902464U,	// MVE_WLSTP_8
    2134001U,	// MVNi
    2134001U,	// MVNr
    2109425U,	// MVNsi
    2166769U,	// MVNsr
    740901300U,	// NEON_VMAXNMNDf
    740902183U,	// NEON_VMAXNMNDh
    740901300U,	// NEON_VMAXNMNQf
    740902183U,	// NEON_VMAXNMNQh
    740901288U,	// NEON_VMINNMNDf
    740902171U,	// NEON_VMINNMNDh
    740901288U,	// NEON_VMINNMNQf
    740902171U,	// NEON_VMINNMNQh
    2109610U,	// ORRri
    2109610U,	// ORRrr
    2166954U,	// ORRrsi
    77994U,	// ORRrsr
    2142551U,	// PKHBT
    2141095U,	// PKHTB
    255819U,	// PLDWi12
    264011U,	// PLDWrs
    255658U,	// PLDi12
    263850U,	// PLDrs
    255704U,	// PLIi12
    263896U,	// PLIrs
    2157691U,	// QADD
    2156833U,	// QADD16
    2156936U,	// QADD8
    2159741U,	// QASX
    2157665U,	// QDADD
    2157516U,	// QDSUB
    2159487U,	// QSAX
    2157529U,	// QSUB
    2156795U,	// QSUB16
    2156897U,	// QSUB8
    2126242U,	// RBIT
    2126560U,	// REV
    2124101U,	// REV16
    2125233U,	// REVSH
    3229277U,	// RFEDA
    22103645U,	// RFEDA_UPD
    3229308U,	// RFEDB
    22103676U,	// RFEDB_UPD
    3229284U,	// RFEIA
    22103652U,	// RFEIA_UPD
    3229315U,	// RFEIB
    22103683U,	// RFEIB_UPD
    2108312U,	// RSBri
    2108312U,	// RSBrr
    2165656U,	// RSBrsi
    76696U,	// RSBrsr
    2108471U,	// RSCri
    2108471U,	// RSCrr
    2165815U,	// RSCrsi
    76855U,	// RSCrsr
    2156840U,	// SADD16
    2156942U,	// SADD8
    2159746U,	// SASX
    2959U,	// SB
    2108430U,	// SBCri
    2108430U,	// SBCrr
    2165774U,	// SBCrsi
    76814U,	// SBCrsr
    2143255U,	// SBFX
    2159332U,	// SDIV
    2158200U,	// SEL
    272047U,	// SETEND
    3229431U,	// SETPAN
    673792186U,	// SHA1C
    740901060U,	// SHA1H
    673792218U,	// SHA1M
    673792228U,	// SHA1P
    673792041U,	// SHA1SU0
    673792107U,	// SHA1SU1
    673792206U,	// SHA256H
    673792153U,	// SHA256H2
    673792053U,	// SHA256SU0
    673792119U,	// SHA256SU1
    2156816U,	// SHADD16
    2156921U,	// SHADD8
    2159728U,	// SHASX
    2159474U,	// SHSAX
    2156778U,	// SHSUB16
    2156882U,	// SHSUB8
    2190378U,	// SMC
    2140875U,	// SMLABB
    2142544U,	// SMLABT
    2141251U,	// SMLAD
    2143181U,	// SMLADX
    282172U,	// SMLAL
    2206418U,	// SMLALBB
    2208093U,	// SMLALBT
    2206853U,	// SMLALD
    2208731U,	// SMLALDX
    2206637U,	// SMLALTB
    2208335U,	// SMLALTT
    2141088U,	// SMLATB
    2142792U,	// SMLATT
    2141155U,	// SMLAWB
    2142840U,	// SMLAWT
    2141352U,	// SMLSD
    2143211U,	// SMLSDX
    2206864U,	// SMLSLD
    2208739U,	// SMLSLDX
    2140721U,	// SMMLA
    2142306U,	// SMMLAR
    2142455U,	// SMMLS
    2142386U,	// SMMLSR
    2158385U,	// SMMUL
    2158740U,	// SMMULR
    2157641U,	// SMUAD
    2159572U,	// SMUADX
    2157274U,	// SMULBB
    2158949U,	// SMULBT
    2166498U,	// SMULL
    2157493U,	// SMULTB
    2159191U,	// SMULTT
    2157546U,	// SMULWB
    2159231U,	// SMULWT
    2157742U,	// SMUSD
    2159602U,	// SMUSDX
    3229589U,	// SRSDA
    3229541U,	// SRSDA_UPD
    3229611U,	// SRSDB
    3229565U,	// SRSDB_UPD
    3229600U,	// SRSIA
    3229553U,	// SRSIA_UPD
    3229622U,	// SRSIB
    3229577U,	// SRSIB_UPD
    2142529U,	// SSAT
    2156854U,	// SSAT16
    2159492U,	// SSAX
    2156802U,	// SSUB16
    2156903U,	// SSUB8
    1147782884U,	// STC2L_OFFSET
    1214891748U,	// STC2L_OPTION
    1214891748U,	// STC2L_POST
    1282000612U,	// STC2L_PRE
    1147781683U,	// STC2_OFFSET
    1214890547U,	// STC2_OPTION
    1214890547U,	// STC2_POST
    1281999411U,	// STC2_PRE
    807448158U,	// STCL_OFFSET
    807448158U,	// STCL_OPTION
    807448158U,	// STCL_POST
    807448158U,	// STCL_PRE
    807447611U,	// STC_OFFSET
    807447611U,	// STC_OPTION
    807447611U,	// STC_POST
    807447611U,	// STC_PRE
    2125607U,	// STL
    2124578U,	// STLB
    2159615U,	// STLEX
    2157560U,	// STLEXB
    2157755U,	// STLEXD
    2158046U,	// STLEXH
    2125147U,	// STLH
    2189811U,	// STMDA
    740321779U,	// STMDA_UPD
    2190067U,	// STMDB
    740322035U,	// STMDB_UPD
    2191213U,	// STMIA
    740323181U,	// STMIA_UPD
    2190085U,	// STMIB
    740322053U,	// STMIB_UPD
    740348274U,	// STRBT_POST_IMM
    740348274U,	// STRBT_POST_REG
    740346761U,	// STRB_POST_IMM
    740346761U,	// STRB_POST_REG
    740338569U,	// STRB_PRE_IMM
    740346761U,	// STRB_PRE_REG
    2157449U,	// STRBi12
    2141065U,	// STRBrs
    2149539U,	// STRD
    740404387U,	// STRD_POST
    740404387U,	// STRD_PRE
    2159633U,	// STREX
    2157574U,	// STREXB
    2157769U,	// STREXD
    2158060U,	// STREXH
    2141573U,	// STRH
    740340117U,	// STRHTi
    740348309U,	// STRHTr
    740347269U,	// STRH_POST
    740347269U,	// STRH_PRE
    740348473U,	// STRT_POST_IMM
    740348473U,	// STRT_POST_REG
    740348108U,	// STR_POST_IMM
    740348108U,	// STR_POST_REG
    740339916U,	// STR_PRE_IMM
    740348108U,	// STR_PRE_REG
    2158796U,	// STRi12
    2142412U,	// STRrs
    2108366U,	// SUBri
    2108366U,	// SUBrr
    2165710U,	// SUBrsi
    76750U,	// SUBrsr
    2190399U,	// SVC
    2158672U,	// SWP
    2157437U,	// SWPB
    2140863U,	// SXTAB
    2140364U,	// SXTAB16
    2141477U,	// SXTAH
    2157506U,	// SXTB
    2156764U,	// SXTB16
    2158007U,	// SXTH
    2125918U,	// TEQri
    2125918U,	// TEQrr
    2158686U,	// TEQrsi
    2142302U,	// TEQrsr
    4098U,	// TRAP
    4098U,	// TRAPNaCl
    288409U,	// TSB
    2126404U,	// TSTri
    2126404U,	// TSTrr
    2159172U,	// TSTrsi
    2142788U,	// TSTrsr
    2156847U,	// UADD16
    2156948U,	// UADD8
    2159751U,	// UASX
    2143260U,	// UBFX
    3229371U,	// UDF
    2159337U,	// UDIV
    2156824U,	// UHADD16
    2156928U,	// UHADD8
    2159734U,	// UHASX
    2159480U,	// UHSAX
    2156786U,	// UHSUB16
    2156889U,	// UHSUB8
    2207265U,	// UMAAL
    282178U,	// UMLAL
    2166504U,	// UMULL
    2156832U,	// UQADD16
    2156935U,	// UQADD8
    2159740U,	// UQASX
    2159486U,	// UQSAX
    2156794U,	// UQSUB16
    2156896U,	// UQSUB8
    2156915U,	// USAD8
    2140491U,	// USADA8
    2142534U,	// USAT
    2156861U,	// USAT16
    2159497U,	// USAX
    2156809U,	// USUB16
    2156909U,	// USUB8
    2140869U,	// UXTAB
    2140372U,	// UXTAB16
    2141483U,	// UXTAH
    2157511U,	// UXTB
    2156771U,	// UXTB16
    2158012U,	// UXTH
    8433191U,	// VABALsv2i64
    7908903U,	// VABALsv4i32
    8957479U,	// VABALsv8i16
    10006055U,	// VABALuv2i64
    9481767U,	// VABALuv4i32
    10530343U,	// VABALuv8i16
    8956388U,	// VABAsv16i8
    8432100U,	// VABAsv2i32
    7907812U,	// VABAsv4i16
    8432100U,	// VABAsv4i32
    7907812U,	// VABAsv8i16
    8956388U,	// VABAsv8i8
    10529252U,	// VABAuv16i8
    10004964U,	// VABAuv2i32
    9480676U,	// VABAuv4i16
    10004964U,	// VABAuv4i32
    9480676U,	// VABAuv8i16
    10529252U,	// VABAuv8i8
    8449635U,	// VABDLsv2i64
    7925347U,	// VABDLsv4i32
    8973923U,	// VABDLsv8i16
    10022499U,	// VABDLuv2i64
    9498211U,	// VABDLuv4i32
    10546787U,	// VABDLuv8i16
    5827663U,	// VABDfd
    5827663U,	// VABDfq
    5303375U,	// VABDhd
    5303375U,	// VABDhq
    8973391U,	// VABDsv16i8
    8449103U,	// VABDsv2i32
    7924815U,	// VABDsv4i16
    8449103U,	// VABDsv4i32
    7924815U,	// VABDsv8i16
    8973391U,	// VABDsv8i8
    10546255U,	// VABDuv16i8
    10021967U,	// VABDuv2i32
    9497679U,	// VABDuv4i16
    10021967U,	// VABDuv4i32
    9497679U,	// VABDuv8i16
    10546255U,	// VABDuv8i8
    1011380456U,	// VABSD
    5271784U,	// VABSH
    5796072U,	// VABSS
    5796072U,	// VABSfd
    5796072U,	// VABSfq
    5271784U,	// VABShd
    5271784U,	// VABShq
    8941800U,	// VABSv16i8
    8417512U,	// VABSv2i32
    7893224U,	// VABSv4i16
    8417512U,	// VABSv4i32
    7893224U,	// VABSv8i16
    8941800U,	// VABSv8i8
    5827792U,	// VACGEfd
    5827792U,	// VACGEfq
    5303504U,	// VACGEhd
    5303504U,	// VACGEhq
    5828996U,	// VACGTfd
    5828996U,	// VACGTfq
    5304708U,	// VACGThd
    5304708U,	// VACGThq
    1011412096U,	// VADDD
    5303424U,	// VADDH
    758181774U,	// VADDHNv2i32
    11071374U,	// VADDHNv4i16
    11595662U,	// VADDHNv8i8
    8449648U,	// VADDLsv2i64
    7925360U,	// VADDLsv4i32
    8973936U,	// VADDLsv8i16
    10022512U,	// VADDLuv2i64
    9498224U,	// VADDLuv4i32
    10546800U,	// VADDLuv8i16
    5827712U,	// VADDS
    8450849U,	// VADDWsv2i64
    7926561U,	// VADDWsv4i32
    8975137U,	// VADDWsv8i16
    10023713U,	// VADDWuv2i64
    9499425U,	// VADDWuv4i32
    10548001U,	// VADDWuv8i16
    5827712U,	// VADDfd
    5827712U,	// VADDfq
    5303424U,	// VADDhd
    5303424U,	// VADDhq
    12119168U,	// VADDv16i8
    758180992U,	// VADDv1i64
    11070592U,	// VADDv2i32
    758180992U,	// VADDv2i64
    11594880U,	// VADDv4i16
    11070592U,	// VADDv4i32
    11594880U,	// VADDv8i16
    12119168U,	// VADDv8i8
    2157719U,	// VANDd
    2157719U,	// VANDq
    2157599U,	// VBICd
    11070495U,	// VBICiv2i32
    11594783U,	// VBICiv4i16
    11070495U,	// VBICiv4i32
    11594783U,	// VBICiv8i16
    2157599U,	// VBICq
    2141432U,	// VBIFd
    2141432U,	// VBIFq
    2142631U,	// VBITd
    2142631U,	// VBITq
    2141972U,	// VBSLd
    2141972U,	// VBSLq
    740901265U,	// VCADDv2f32
    740902126U,	// VCADDv4f16
    740901265U,	// VCADDv4f32
    740902126U,	// VCADDv8f16
    5828697U,	// VCEQfd
    5828697U,	// VCEQfq
    5304409U,	// VCEQhd
    5304409U,	// VCEQhq
    12120153U,	// VCEQv16i8
    11071577U,	// VCEQv2i32
    11595865U,	// VCEQv4i16
    11071577U,	// VCEQv4i32
    11595865U,	// VCEQv8i16
    12120153U,	// VCEQv8i8
    12087385U,	// VCEQzv16i8
    5795929U,	// VCEQzv2f32
    11038809U,	// VCEQzv2i32
    5271641U,	// VCEQzv4f16
    5795929U,	// VCEQzv4f32
    11563097U,	// VCEQzv4i16
    11038809U,	// VCEQzv4i32
    5271641U,	// VCEQzv8f16
    11563097U,	// VCEQzv8i16
    12087385U,	// VCEQzv8i8
    5827798U,	// VCGEfd
    5827798U,	// VCGEfq
    5303510U,	// VCGEhd
    5303510U,	// VCGEhq
    8973526U,	// VCGEsv16i8
    8449238U,	// VCGEsv2i32
    7924950U,	// VCGEsv4i16
    8449238U,	// VCGEsv4i32
    7924950U,	// VCGEsv8i16
    8973526U,	// VCGEsv8i8
    10546390U,	// VCGEuv16i8
    10022102U,	// VCGEuv2i32
    9497814U,	// VCGEuv4i16
    10022102U,	// VCGEuv4i32
    9497814U,	// VCGEuv8i16
    10546390U,	// VCGEuv8i8
    8940758U,	// VCGEzv16i8
    5795030U,	// VCGEzv2f32
    8416470U,	// VCGEzv2i32
    5270742U,	// VCGEzv4f16
    5795030U,	// VCGEzv4f32
    7892182U,	// VCGEzv4i16
    8416470U,	// VCGEzv4i32
    5270742U,	// VCGEzv8f16
    7892182U,	// VCGEzv8i16
    8940758U,	// VCGEzv8i8
    5829002U,	// VCGTfd
    5829002U,	// VCGTfq
    5304714U,	// VCGThd
    5304714U,	// VCGThq
    8974730U,	// VCGTsv16i8
    8450442U,	// VCGTsv2i32
    7926154U,	// VCGTsv4i16
    8450442U,	// VCGTsv4i32
    7926154U,	// VCGTsv8i16
    8974730U,	// VCGTsv8i8
    10547594U,	// VCGTuv16i8
    10023306U,	// VCGTuv2i32
    9499018U,	// VCGTuv4i16
    10023306U,	// VCGTuv4i32
    9499018U,	// VCGTuv8i16
    10547594U,	// VCGTuv8i8
    8941962U,	// VCGTzv16i8
    5796234U,	// VCGTzv2f32
    8417674U,	// VCGTzv2i32
    5271946U,	// VCGTzv4f16
    5796234U,	// VCGTzv4f32
    7893386U,	// VCGTzv4i16
    8417674U,	// VCGTzv4i32
    5271946U,	// VCGTzv8f16
    7893386U,	// VCGTzv8i16
    8941962U,	// VCGTzv8i8
    8940763U,	// VCLEzv16i8
    5795035U,	// VCLEzv2f32
    8416475U,	// VCLEzv2i32
    5270747U,	// VCLEzv4f16
    5795035U,	// VCLEzv4f32
    7892187U,	// VCLEzv4i16
    8416475U,	// VCLEzv4i32
    5270747U,	// VCLEzv8f16
    7892187U,	// VCLEzv8i16
    8940763U,	// VCLEzv8i8
    8941810U,	// VCLSv16i8
    8417522U,	// VCLSv2i32
    7893234U,	// VCLSv4i16
    8417522U,	// VCLSv4i32
    7893234U,	// VCLSv8i16
    8941810U,	// VCLSv8i8
    8941996U,	// VCLTzv16i8
    5796268U,	// VCLTzv2f32
    8417708U,	// VCLTzv2i32
    5271980U,	// VCLTzv4f16
    5796268U,	// VCLTzv4f32
    7893420U,	// VCLTzv4i16
    8417708U,	// VCLTzv4i32
    5271980U,	// VCLTzv8f16
    7893420U,	// VCLTzv8i16
    8941996U,	// VCLTzv8i8
    12088505U,	// VCLZv16i8
    11039929U,	// VCLZv2i32
    11564217U,	// VCLZv4i16
    11039929U,	// VCLZv4i32
    11564217U,	// VCLZv8i16
    12088505U,	// VCLZv8i8
    673792378U,	// VCMLAv2f32
    673792378U,	// VCMLAv2f32_indexed
    673793239U,	// VCMLAv4f16
    673793239U,	// VCMLAv4f16_indexed
    673792378U,	// VCMLAv4f32
    673792378U,	// VCMLAv4f32_indexed
    673793239U,	// VCMLAv8f16
    673793239U,	// VCMLAv8f16_indexed
    1011380240U,	// VCMPD
    1011379431U,	// VCMPED
    5270759U,	// VCMPEH
    5795047U,	// VCMPES
    1816751335U,	// VCMPEZD
    5336295U,	// VCMPEZH
    5860583U,	// VCMPEZS
    5271568U,	// VCMPH
    5795856U,	// VCMPS
    1816752144U,	// VCMPZD
    5337104U,	// VCMPZH
    5861392U,	// VCMPZS
    1601999U,	// VCNTd
    1601999U,	// VCNTq
    740901122U,	// VCVTANSDf
    740901983U,	// VCVTANSDh
    740901122U,	// VCVTANSQf
    740901983U,	// VCVTANSQh
    740901182U,	// VCVTANUDf
    740902043U,	// VCVTANUDh
    740901182U,	// VCVTANUQf
    740902043U,	// VCVTANUQh
    740901472U,	// VCVTASD
    740901863U,	// VCVTASH
    740901122U,	// VCVTASS
    740901532U,	// VCVTAUD
    740901923U,	// VCVTAUH
    740901182U,	// VCVTAUS
    22571964U,	// VCVTBDH
    23096252U,	// VCVTBHD
    752905148U,	// VCVTBHS
    751332284U,	// VCVTBSH
    23622254U,	// VCVTDS
    740901137U,	// VCVTMNSDf
    740901998U,	// VCVTMNSDh
    740901137U,	// VCVTMNSQf
    740901998U,	// VCVTMNSQh
    740901197U,	// VCVTMNUDf
    740902058U,	// VCVTMNUDh
    740901197U,	// VCVTMNUQf
    740902058U,	// VCVTMNUQh
    740901487U,	// VCVTMSD
    740901878U,	// VCVTMSH
    740901137U,	// VCVTMSS
    740901547U,	// VCVTMUD
    740901938U,	// VCVTMUH
    740901197U,	// VCVTMUS
    740901152U,	// VCVTNNSDf
    740902013U,	// VCVTNNSDh
    740901152U,	// VCVTNNSQf
    740902013U,	// VCVTNNSQh
    740901212U,	// VCVTNNUDf
    740902073U,	// VCVTNNUDh
    740901212U,	// VCVTNNUQf
    740902073U,	// VCVTNNUQh
    740901502U,	// VCVTNSD
    740901893U,	// VCVTNSH
    740901152U,	// VCVTNSS
    740901562U,	// VCVTNUD
    740901953U,	// VCVTNUH
    740901212U,	// VCVTNUS
    740901167U,	// VCVTPNSDf
    740902028U,	// VCVTPNSDh
    740901167U,	// VCVTPNSQf
    740902028U,	// VCVTPNSQh
    740901227U,	// VCVTPNUDf
    740902088U,	// VCVTPNUDh
    740901227U,	// VCVTPNUQf
    740902088U,	// VCVTPNUQh
    740901517U,	// VCVTPSD
    740901908U,	// VCVTPSH
    740901167U,	// VCVTPSS
    740901577U,	// VCVTPUD
    740901968U,	// VCVTPUH
    740901227U,	// VCVTPUS
    24146542U,	// VCVTSD
    22573666U,	// VCVTTDH
    23097954U,	// VCVTTHD
    752906850U,	// VCVTTHS
    751333986U,	// VCVTTSH
    751333998U,	// VCVTf2h
    1627419246U,	// VCVTf2sd
    1627419246U,	// VCVTf2sq
    1628467822U,	// VCVTf2ud
    1628467822U,	// VCVTf2uq
    1023472238U,	// VCVTf2xsd
    1023472238U,	// VCVTf2xsq
    1024520814U,	// VCVTf2xud
    1024520814U,	// VCVTf2xuq
    752906862U,	// VCVTh2f
    1626894958U,	// VCVTh2sd
    1626894958U,	// VCVTh2sq
    1627943534U,	// VCVTh2ud
    1627943534U,	// VCVTh2uq
    1022947950U,	// VCVTh2xsd
    1022947950U,	// VCVTh2xsq
    1023996526U,	// VCVTh2xud
    1023996526U,	// VCVTh2xuq
    1625846382U,	// VCVTs2fd
    1625846382U,	// VCVTs2fq
    1624273518U,	// VCVTs2hd
    1624273518U,	// VCVTs2hq
    1626370670U,	// VCVTu2fd
    1626370670U,	// VCVTu2fq
    1624797806U,	// VCVTu2hd
    1624797806U,	// VCVTu2hq
    1021899374U,	// VCVTxs2fd
    1021899374U,	// VCVTxs2fq
    1020326510U,	// VCVTxs2hd
    1020326510U,	// VCVTxs2hq
    1022423662U,	// VCVTxu2fd
    1022423662U,	// VCVTxu2fq
    1020850798U,	// VCVTxu2hd
    1020850798U,	// VCVTxu2hq
    1011413742U,	// VDIVD
    5305070U,	// VDIVH
    5829358U,	// VDIVS
    553020U,	// VDUP16d
    553020U,	// VDUP16q
    1077308U,	// VDUP32d
    1077308U,	// VDUP32q
    1601596U,	// VDUP8d
    1601596U,	// VDUP8q
    585788U,	// VDUPLN16d
    585788U,	// VDUPLN16q
    1110076U,	// VDUPLN32d
    1110076U,	// VDUPLN32q
    1634364U,	// VDUPLN8d
    1634364U,	// VDUPLN8q
    2158747U,	// VEORd
    2158747U,	// VEORq
    569990U,	// VEXTd16
    1094278U,	// VEXTd32
    1618566U,	// VEXTd8
    569990U,	// VEXTq16
    1094278U,	// VEXTq32
    12628614U,	// VEXTq64
    1618566U,	// VEXTq8
    1011395138U,	// VFMAD
    5286466U,	// VFMAH
    740902149U,	// VFMALD
    740902149U,	// VFMALDI
    740902149U,	// VFMALQ
    740902149U,	// VFMALQI
    5810754U,	// VFMAS
    5810754U,	// VFMAfd
    5810754U,	// VFMAfq
    5286466U,	// VFMAhd
    5286466U,	// VFMAhq
    1011396872U,	// VFMSD
    5288200U,	// VFMSH
    740902160U,	// VFMSLD
    740902160U,	// VFMSLDI
    740902160U,	// VFMSLQ
    740902160U,	// VFMSLQI
    5812488U,	// VFMSS
    5812488U,	// VFMSfd
    5812488U,	// VFMSfq
    5288200U,	// VFMShd
    5288200U,	// VFMShq
    1011395143U,	// VFNMAD
    5286471U,	// VFNMAH
    5810759U,	// VFNMAS
    1011396877U,	// VFNMSD
    5288205U,	// VFNMSH
    5812493U,	// VFNMSS
    740901628U,	// VFP_VMAXNMD
    740902183U,	// VFP_VMAXNMH
    740901300U,	// VFP_VMAXNMS
    740901616U,	// VFP_VMINNMD
    740902171U,	// VFP_VMINNMH
    740901288U,	// VFP_VMINNMS
    1110800U,	// VGETLNi32
    7926544U,	// VGETLNs16
    8975120U,	// VGETLNs8
    9499408U,	// VGETLNu16
    10547984U,	// VGETLNu8
    8973422U,	// VHADDsv16i8
    8449134U,	// VHADDsv2i32
    7924846U,	// VHADDsv4i16
    8449134U,	// VHADDsv4i32
    7924846U,	// VHADDsv8i16
    8973422U,	// VHADDsv8i8
    10546286U,	// VHADDuv16i8
    10021998U,	// VHADDuv2i32
    9497710U,	// VHADDuv4i16
    10021998U,	// VHADDuv4i32
    9497710U,	// VHADDuv8i16
    10546286U,	// VHADDuv8i8
    8973266U,	// VHSUBsv16i8
    8448978U,	// VHSUBsv2i32
    7924690U,	// VHSUBsv4i16
    8448978U,	// VHSUBsv4i32
    7924690U,	// VHSUBsv8i16
    8973266U,	// VHSUBsv8i8
    10546130U,	// VHSUBuv16i8
    10021842U,	// VHSUBuv2i32
    9497554U,	// VHSUBuv4i16
    10021842U,	// VHSUBuv4i32
    9497554U,	// VHSUBuv8i16
    10546130U,	// VHSUBuv8i8
    740902243U,	// VINSH
    1635283560U,	// VJCVT
    1879631967U,	// VLD1DUPd16
    1879615583U,	// VLD1DUPd16wb_fixed
    1879623775U,	// VLD1DUPd16wb_register
    1880156255U,	// VLD1DUPd32
    1880139871U,	// VLD1DUPd32wb_fixed
    1880148063U,	// VLD1DUPd32wb_register
    1880680543U,	// VLD1DUPd8
    1880664159U,	// VLD1DUPd8wb_fixed
    1880672351U,	// VLD1DUPd8wb_register
    1946740831U,	// VLD1DUPq16
    1946724447U,	// VLD1DUPq16wb_fixed
    1946732639U,	// VLD1DUPq16wb_register
    1947265119U,	// VLD1DUPq32
    1947248735U,	// VLD1DUPq32wb_fixed
    1947256927U,	// VLD1DUPq32wb_register
    1947789407U,	// VLD1DUPq8
    1947773023U,	// VLD1DUPq8wb_fixed
    1947781215U,	// VLD1DUPq8wb_register
    25217119U,	// VLD1LNd16
    25462879U,	// VLD1LNd16_UPD
    25741407U,	// VLD1LNd32
    25987167U,	// VLD1LNd32_UPD
    26265695U,	// VLD1LNd8
    26511455U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    2013849695U,	// VLD1d16
    537454687U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    537438303U,	// VLD1d16Qwb_fixed
    537446495U,	// VLD1d16Qwb_register
    269019231U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    269002847U,	// VLD1d16Twb_fixed
    269011039U,	// VLD1d16Twb_register
    2013833311U,	// VLD1d16wb_fixed
    2013841503U,	// VLD1d16wb_register
    2014373983U,	// VLD1d32
    537978975U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    537962591U,	// VLD1d32Qwb_fixed
    537970783U,	// VLD1d32Qwb_register
    269543519U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    269527135U,	// VLD1d32Twb_fixed
    269535327U,	// VLD1d32Twb_register
    2014357599U,	// VLD1d32wb_fixed
    2014365791U,	// VLD1d32wb_register
    2025908319U,	// VLD1d64
    549513311U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    549496927U,	// VLD1d64Qwb_fixed
    549505119U,	// VLD1d64Qwb_register
    281077855U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    281061471U,	// VLD1d64Twb_fixed
    281069663U,	// VLD1d64Twb_register
    2025891935U,	// VLD1d64wb_fixed
    2025900127U,	// VLD1d64wb_register
    2014898271U,	// VLD1d8
    538503263U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    538486879U,	// VLD1d8Qwb_fixed
    538495071U,	// VLD1d8Qwb_register
    270067807U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    270051423U,	// VLD1d8Twb_fixed
    270059615U,	// VLD1d8Twb_register
    2014881887U,	// VLD1d8wb_fixed
    2014890079U,	// VLD1d8wb_register
    2080958559U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    2080942175U,	// VLD1q16wb_fixed
    2080950367U,	// VLD1q16wb_register
    2081482847U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    2081466463U,	// VLD1q32wb_fixed
    2081474655U,	// VLD1q32wb_register
    2093017183U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    2093000799U,	// VLD1q64wb_fixed
    2093008991U,	// VLD1q64wb_register
    2082007135U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    2081990751U,	// VLD1q8wb_fixed
    2081998943U,	// VLD1q8wb_register
    1946740875U,	// VLD2DUPd16
    1946724491U,	// VLD2DUPd16wb_fixed
    1946732683U,	// VLD2DUPd16wb_register
    2148067467U,	// VLD2DUPd16x2
    2148051083U,	// VLD2DUPd16x2wb_fixed
    2148059275U,	// VLD2DUPd16x2wb_register
    1947265163U,	// VLD2DUPd32
    1947248779U,	// VLD2DUPd32wb_fixed
    1947256971U,	// VLD2DUPd32wb_register
    2148591755U,	// VLD2DUPd32x2
    2148575371U,	// VLD2DUPd32x2wb_fixed
    2148583563U,	// VLD2DUPd32x2wb_register
    1947789451U,	// VLD2DUPd8
    1947773067U,	// VLD2DUPd8wb_fixed
    1947781259U,	// VLD2DUPd8wb_register
    2149116043U,	// VLD2DUPd8x2
    2149099659U,	// VLD2DUPd8x2wb_fixed
    2149107851U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    25462923U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    25471115U,	// VLD2LNd16_UPD
    25987211U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    25995403U,	// VLD2LNd32_UPD
    26511499U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    26519691U,	// VLD2LNd8_UPD
    25462923U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    25471115U,	// VLD2LNq16_UPD
    25987211U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    25995403U,	// VLD2LNq32_UPD
    2215176331U,	// VLD2b16
    2215159947U,	// VLD2b16wb_fixed
    2215168139U,	// VLD2b16wb_register
    2215700619U,	// VLD2b32
    2215684235U,	// VLD2b32wb_fixed
    2215692427U,	// VLD2b32wb_register
    2216224907U,	// VLD2b8
    2216208523U,	// VLD2b8wb_fixed
    2216216715U,	// VLD2b8wb_register
    2080958603U,	// VLD2d16
    2080942219U,	// VLD2d16wb_fixed
    2080950411U,	// VLD2d16wb_register
    2081482891U,	// VLD2d32
    2081466507U,	// VLD2d32wb_fixed
    2081474699U,	// VLD2d32wb_register
    2082007179U,	// VLD2d8
    2081990795U,	// VLD2d8wb_fixed
    2081998987U,	// VLD2d8wb_register
    537454731U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    537438347U,	// VLD2q16wb_fixed
    537446539U,	// VLD2q16wb_register
    537979019U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    537962635U,	// VLD2q32wb_fixed
    537970827U,	// VLD2q32wb_register
    538503307U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    538486923U,	// VLD2q8wb_fixed
    538495115U,	// VLD2q8wb_register
    25217195U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    25462955U,	// VLD3DUPd16_UPD
    25741483U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    25987243U,	// VLD3DUPd32_UPD
    26265771U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    26511531U,	// VLD3DUPd8_UPD
    25217195U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    25462955U,	// VLD3DUPq16_UPD
    25741483U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    25987243U,	// VLD3DUPq32_UPD
    26265771U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    26511531U,	// VLD3DUPq8_UPD
    25471147U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    25479339U,	// VLD3LNd16_UPD
    25995435U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    26003627U,	// VLD3LNd32_UPD
    26519723U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    26527915U,	// VLD3LNd8_UPD
    25471147U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    25479339U,	// VLD3LNq16_UPD
    25995435U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    26003627U,	// VLD3LNq32_UPD
    25217195U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    25462955U,	// VLD3d16_UPD
    25741483U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    25987243U,	// VLD3d32_UPD
    26265771U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    26511531U,	// VLD3d8_UPD
    25217195U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    25462955U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    25741483U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    25987243U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    26265771U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    26511531U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    25274562U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    25487554U,	// VLD4DUPd16_UPD
    25798850U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    26011842U,	// VLD4DUPd32_UPD
    26323138U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    26536130U,	// VLD4DUPd8_UPD
    25274562U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    25487554U,	// VLD4DUPq16_UPD
    25798850U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    26011842U,	// VLD4DUPq32_UPD
    26323138U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    26536130U,	// VLD4DUPq8_UPD
    25479362U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    25495746U,	// VLD4LNd16_UPD
    26003650U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    26020034U,	// VLD4LNd32_UPD
    26527938U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    26544322U,	// VLD4LNd8_UPD
    25479362U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    25495746U,	// VLD4LNq16_UPD
    26003650U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    26020034U,	// VLD4LNq32_UPD
    25274562U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    25487554U,	// VLD4d16_UPD
    25798850U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    26011842U,	// VLD4d32_UPD
    26323138U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    26536130U,	// VLD4d8_UPD
    25274562U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    25487554U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    25798850U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    26011842U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    26323138U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    26536130U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    740322027U,	// VLDMDDB_UPD
    2189847U,	// VLDMDIA
    740321815U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    740322027U,	// VLDMSDB_UPD
    2189847U,	// VLDMSIA
    740321815U,	// VLDMSIA_UPD
    2158705U,	// VLDRD
    585841U,	// VLDRH
    2158705U,	// VLDRS
    2308468849U,	// VLDR_FPCXTNS_off
    2375610481U,	// VLDR_FPCXTNS_post
    2442719345U,	// VLDR_FPCXTNS_pre
    2308993137U,	// VLDR_FPCXTS_off
    2376134769U,	// VLDR_FPCXTS_post
    2443243633U,	// VLDR_FPCXTS_pre
    2309517425U,	// VLDR_FPSCR_NZCVQC_off
    2376659057U,	// VLDR_FPSCR_NZCVQC_post
    2443767921U,	// VLDR_FPSCR_NZCVQC_pre
    2310041713U,	// VLDR_FPSCR_off
    2377183345U,	// VLDR_FPSCR_post
    2444292209U,	// VLDR_FPSCR_pre
    2511925361U,	// VLDR_P0_off
    1236840561U,	// VLDR_P0_post
    2579017841U,	// VLDR_P0_pre
    2311090289U,	// VLDR_VPR_off
    2378231921U,	// VLDR_VPR_post
    2445340785U,	// VLDR_VPR_pre
    2191176U,	// VLLDM
    2191211U,	// VLSTM
    5829485U,	// VMAXfd
    5829485U,	// VMAXfq
    5305197U,	// VMAXhd
    5305197U,	// VMAXhq
    8975213U,	// VMAXsv16i8
    8450925U,	// VMAXsv2i32
    7926637U,	// VMAXsv4i16
    8450925U,	// VMAXsv4i32
    7926637U,	// VMAXsv8i16
    8975213U,	// VMAXsv8i8
    10548077U,	// VMAXuv16i8
    10023789U,	// VMAXuv2i32
    9499501U,	// VMAXuv4i16
    10023789U,	// VMAXuv4i32
    9499501U,	// VMAXuv8i16
    10548077U,	// VMAXuv8i8
    5828507U,	// VMINfd
    5828507U,	// VMINfq
    5304219U,	// VMINhd
    5304219U,	// VMINhq
    8974235U,	// VMINsv16i8
    8449947U,	// VMINsv2i32
    7925659U,	// VMINsv4i16
    8449947U,	// VMINsv4i32
    7925659U,	// VMINsv8i16
    8974235U,	// VMINsv8i8
    10547099U,	// VMINuv16i8
    10022811U,	// VMINuv2i32
    9498523U,	// VMINuv4i16
    10022811U,	// VMINuv4i32
    9498523U,	// VMINuv8i16
    10547099U,	// VMINuv8i8
    1011395133U,	// VMLAD
    5286461U,	// VMLAH
    8441416U,	// VMLALslsv2i32
    7917128U,	// VMLALslsv4i16
    10014280U,	// VMLALsluv2i32
    9489992U,	// VMLALsluv4i16
    8433224U,	// VMLALsv2i64
    7908936U,	// VMLALsv4i32
    8957512U,	// VMLALsv8i16
    10006088U,	// VMLALuv2i64
    9481800U,	// VMLALuv4i32
    10530376U,	// VMLALuv8i16
    5810749U,	// VMLAS
    5810749U,	// VMLAfd
    5810749U,	// VMLAfq
    5286461U,	// VMLAhd
    5286461U,	// VMLAhq
    5818941U,	// VMLAslfd
    5818941U,	// VMLAslfq
    5294653U,	// VMLAslhd
    5294653U,	// VMLAslhq
    11061821U,	// VMLAslv2i32
    11586109U,	// VMLAslv4i16
    11061821U,	// VMLAslv4i32
    11586109U,	// VMLAslv8i16
    12102205U,	// VMLAv16i8
    11053629U,	// VMLAv2i32
    11577917U,	// VMLAv4i16
    11053629U,	// VMLAv4i32
    11577917U,	// VMLAv8i16
    12102205U,	// VMLAv8i8
    1011396867U,	// VMLSD
    5288195U,	// VMLSH
    8441633U,	// VMLSLslsv2i32
    7917345U,	// VMLSLslsv4i16
    10014497U,	// VMLSLsluv2i32
    9490209U,	// VMLSLsluv4i16
    8433441U,	// VMLSLsv2i64
    7909153U,	// VMLSLsv4i32
    8957729U,	// VMLSLsv8i16
    10006305U,	// VMLSLuv2i64
    9482017U,	// VMLSLuv4i32
    10530593U,	// VMLSLuv8i16
    5812483U,	// VMLSS
    5812483U,	// VMLSfd
    5812483U,	// VMLSfq
    5288195U,	// VMLShd
    5288195U,	// VMLShq
    5820675U,	// VMLSslfd
    5820675U,	// VMLSslfq
    5296387U,	// VMLSslhd
    5296387U,	// VMLSslhq
    11063555U,	// VMLSslv2i32
    11587843U,	// VMLSslv4i16
    11063555U,	// VMLSslv4i32
    11587843U,	// VMLSslv8i16
    12103939U,	// VMLSv16i8
    11055363U,	// VMLSv2i32
    11579651U,	// VMLSv4i16
    11055363U,	// VMLSv4i32
    11579651U,	// VMLSv8i16
    12103939U,	// VMLSv8i8
    1011381008U,	// VMOVD
    2159376U,	// VMOVDRR
    740902289U,	// VMOVH
    5272336U,	// VMOVHR
    8417090U,	// VMOVLsv2i64
    7892802U,	// VMOVLsv4i32
    8941378U,	// VMOVLsv8i16
    9989954U,	// VMOVLuv2i64
    9465666U,	// VMOVLuv4i32
    10514242U,	// VMOVLuv8i16
    758149116U,	// VMOVNv2i32
    11038716U,	// VMOVNv4i16
    11563004U,	// VMOVNv8i8
    5272336U,	// VMOVRH
    2159376U,	// VMOVRRD
    2142992U,	// VMOVRRS
    2126608U,	// VMOVRS
    5796624U,	// VMOVS
    2126608U,	// VMOVSR
    2142992U,	// VMOVSRR
    12088080U,	// VMOVv16i8
    1764782864U,	// VMOVv1i64
    5796624U,	// VMOVv2f32
    11039504U,	// VMOVv2i32
    1764782864U,	// VMOVv2i64
    5796624U,	// VMOVv4f32
    11563792U,	// VMOVv4i16
    11039504U,	// VMOVv4i32
    11563792U,	// VMOVv8i16
    12088080U,	// VMOVv8i8
    2191653U,	// VMRS
    2191653U,	// VMRS_FPCXTNS
    2191653U,	// VMRS_FPCXTS
    2191653U,	// VMRS_FPEXC
    2191653U,	// VMRS_FPINST
    2191653U,	// VMRS_FPINST2
    2126117U,	// VMRS_FPSCR_NZCVQC
    2191653U,	// VMRS_FPSID
    2191653U,	// VMRS_MVFR0
    2191653U,	// VMRS_MVFR1
    2191653U,	// VMRS_MVFR2
    2126117U,	// VMRS_P0
    2191653U,	// VMRS_VPR
    28405945U,	// VMSR
    26833081U,	// VMSR_FPCXTNS
    27357369U,	// VMSR_FPCXTS
    29978809U,	// VMSR_FPEXC
    30503097U,	// VMSR_FPINST
    31027385U,	// VMSR_FPINST2
    766013625U,	// VMSR_FPSCR_NZCVQC
    31551673U,	// VMSR_FPSID
    767062201U,	// VMSR_P0
    29454521U,	// VMSR_VPR
    1011412797U,	// VMULD
    5304125U,	// VMULH
    740901712U,	// VMULLp64
    21032686U,	// VMULLp8
    8433390U,	// VMULLslsv2i32
    7909102U,	// VMULLslsv4i16
    10006254U,	// VMULLsluv2i32
    9481966U,	// VMULLsluv4i16
    8449774U,	// VMULLsv2i64
    7925486U,	// VMULLsv4i32
    8974062U,	// VMULLsv8i16
    10022638U,	// VMULLuv2i64
    9498350U,	// VMULLuv4i32
    10546926U,	// VMULLuv8i16
    5828413U,	// VMULS
    5828413U,	// VMULfd
    5828413U,	// VMULfq
    5304125U,	// VMULhd
    5304125U,	// VMULhq
    21032765U,	// VMULpd
    21032765U,	// VMULpq
    5812029U,	// VMULslfd
    5812029U,	// VMULslfq
    5287741U,	// VMULslhd
    5287741U,	// VMULslhq
    11054909U,	// VMULslv2i32
    11579197U,	// VMULslv4i16
    11054909U,	// VMULslv4i32
    11579197U,	// VMULslv8i16
    12119869U,	// VMULv16i8
    11071293U,	// VMULv2i32
    11595581U,	// VMULv4i16
    11071293U,	// VMULv4i32
    11595581U,	// VMULv8i16
    12119869U,	// VMULv8i8
    2125808U,	// VMVNd
    2125808U,	// VMVNq
    11038704U,	// VMVNv2i32
    11562992U,	// VMVNv4i16
    11038704U,	// VMVNv4i32
    11562992U,	// VMVNv8i16
    1011379463U,	// VNEGD
    5270791U,	// VNEGH
    5795079U,	// VNEGS
    5795079U,	// VNEGf32q
    5795079U,	// VNEGfd
    5270791U,	// VNEGhd
    5270791U,	// VNEGhq
    7892231U,	// VNEGs16d
    7892231U,	// VNEGs16q
    8416519U,	// VNEGs32d
    8416519U,	// VNEGs32q
    8940807U,	// VNEGs8d
    8940807U,	// VNEGs8q
    1011395127U,	// VNMLAD
    5286455U,	// VNMLAH
    5810743U,	// VNMLAS
    1011396861U,	// VNMLSD
    5288189U,	// VNMLSH
    5812477U,	// VNMLSS
    1011412791U,	// VNMULD
    5304119U,	// VNMULH
    5828407U,	// VNMULS
    2158528U,	// VORNd
    2158528U,	// VORNq
    2158761U,	// VORRd
    11071657U,	// VORRiv2i32
    11595945U,	// VORRiv4i16
    11071657U,	// VORRiv4i32
    11595945U,	// VORRiv8i16
    2158761U,	// VORRq
    8973869U,	// VPADALsv16i8
    8449581U,	// VPADALsv2i32
    7925293U,	// VPADALsv4i16
    8449581U,	// VPADALsv4i32
    7925293U,	// VPADALsv8i16
    8973869U,	// VPADALsv8i8
    10546733U,	// VPADALuv16i8
    10022445U,	// VPADALuv2i32
    9498157U,	// VPADALuv4i16
    10022445U,	// VPADALuv4i32
    9498157U,	// VPADALuv8i16
    10546733U,	// VPADALuv8i8
    8941161U,	// VPADDLsv16i8
    8416873U,	// VPADDLsv2i32
    7892585U,	// VPADDLsv4i16
    8416873U,	// VPADDLsv4i32
    7892585U,	// VPADDLsv8i16
    8941161U,	// VPADDLsv8i8
    10514025U,	// VPADDLuv16i8
    9989737U,	// VPADDLuv2i32
    9465449U,	// VPADDLuv4i16
    9989737U,	// VPADDLuv4i32
    9465449U,	// VPADDLuv8i16
    10514025U,	// VPADDLuv8i8
    5827700U,	// VPADDf
    5303412U,	// VPADDh
    11594868U,	// VPADDi16
    11070580U,	// VPADDi32
    12119156U,	// VPADDi8
    5829479U,	// VPMAXf
    5305191U,	// VPMAXh
    7926631U,	// VPMAXs16
    8450919U,	// VPMAXs32
    8975207U,	// VPMAXs8
    9499495U,	// VPMAXu16
    10023783U,	// VPMAXu32
    10548071U,	// VPMAXu8
    5828501U,	// VPMINf
    5304213U,	// VPMINh
    7925653U,	// VPMINs16
    8449941U,	// VPMINs32
    8974229U,	// VPMINs8
    9498517U,	// VPMINu16
    10022805U,	// VPMINu32
    10547093U,	// VPMINu8
    8941794U,	// VQABSv16i8
    8417506U,	// VQABSv2i32
    7893218U,	// VQABSv4i16
    8417506U,	// VQABSv4i32
    7893218U,	// VQABSv8i16
    8941794U,	// VQABSv8i8
    8973434U,	// VQADDsv16i8
    770239610U,	// VQADDsv1i64
    8449146U,	// VQADDsv2i32
    770239610U,	// VQADDsv2i64
    7924858U,	// VQADDsv4i16
    8449146U,	// VQADDsv4i32
    7924858U,	// VQADDsv8i16
    8973434U,	// VQADDsv8i8
    10546298U,	// VQADDuv16i8
    19459194U,	// VQADDuv1i64
    10022010U,	// VQADDuv2i32
    19459194U,	// VQADDuv2i64
    9497722U,	// VQADDuv4i16
    10022010U,	// VQADDuv4i32
    9497722U,	// VQADDuv8i16
    10546298U,	// VQADDuv8i8
    8441396U,	// VQDMLALslv2i32
    7917108U,	// VQDMLALslv4i16
    8433204U,	// VQDMLALv2i64
    7908916U,	// VQDMLALv4i32
    8441625U,	// VQDMLSLslv2i32
    7917337U,	// VQDMLSLslv4i16
    8433433U,	// VQDMLSLv2i64
    7909145U,	// VQDMLSLv4i32
    8432992U,	// VQDMULHslv2i32
    7908704U,	// VQDMULHslv4i16
    8432992U,	// VQDMULHslv4i32
    7908704U,	// VQDMULHslv8i16
    8449376U,	// VQDMULHv2i32
    7925088U,	// VQDMULHv4i16
    8449376U,	// VQDMULHv4i32
    7925088U,	// VQDMULHv8i16
    8433370U,	// VQDMULLslv2i32
    7909082U,	// VQDMULLslv4i16
    8449754U,	// VQDMULLv2i64
    7925466U,	// VQDMULLv4i32
    770207720U,	// VQMOVNsuv2i32
    8417256U,	// VQMOVNsuv4i16
    7892968U,	// VQMOVNsuv8i8
    770207733U,	// VQMOVNsv2i32
    8417269U,	// VQMOVNsv4i16
    7892981U,	// VQMOVNsv8i8
    19427317U,	// VQMOVNuv2i32
    9990133U,	// VQMOVNuv4i16
    9465845U,	// VQMOVNuv8i8
    8940801U,	// VQNEGv16i8
    8416513U,	// VQNEGv2i32
    7892225U,	// VQNEGv4i16
    8416513U,	// VQNEGv4i32
    7892225U,	// VQNEGv8i16
    8940801U,	// VQNEGv8i8
    8441116U,	// VQRDMLAHslv2i32
    7916828U,	// VQRDMLAHslv4i16
    8441116U,	// VQRDMLAHslv4i32
    7916828U,	// VQRDMLAHslv8i16
    8432924U,	// VQRDMLAHv2i32
    7908636U,	// VQRDMLAHv4i16
    8432924U,	// VQRDMLAHv4i32
    7908636U,	// VQRDMLAHv8i16
    8441245U,	// VQRDMLSHslv2i32
    7916957U,	// VQRDMLSHslv4i16
    8441245U,	// VQRDMLSHslv4i32
    7916957U,	// VQRDMLSHslv8i16
    8433053U,	// VQRDMLSHv2i32
    7908765U,	// VQRDMLSHv4i16
    8433053U,	// VQRDMLSHv4i32
    7908765U,	// VQRDMLSHv8i16
    8433000U,	// VQRDMULHslv2i32
    7908712U,	// VQRDMULHslv4i16
    8433000U,	// VQRDMULHslv4i32
    7908712U,	// VQRDMULHslv8i16
    8449384U,	// VQRDMULHv2i32
    7925096U,	// VQRDMULHv4i16
    8449384U,	// VQRDMULHv4i32
    7925096U,	// VQRDMULHv8i16
    8973977U,	// VQRSHLsv16i8
    770240153U,	// VQRSHLsv1i64
    8449689U,	// VQRSHLsv2i32
    770240153U,	// VQRSHLsv2i64
    7925401U,	// VQRSHLsv4i16
    8449689U,	// VQRSHLsv4i32
    7925401U,	// VQRSHLsv8i16
    8973977U,	// VQRSHLsv8i8
    10546841U,	// VQRSHLuv16i8
    19459737U,	// VQRSHLuv1i64
    10022553U,	// VQRSHLuv2i32
    19459737U,	// VQRSHLuv2i64
    9498265U,	// VQRSHLuv4i16
    10022553U,	// VQRSHLuv4i32
    9498265U,	// VQRSHLuv8i16
    10546841U,	// VQRSHLuv8i8
    770240427U,	// VQRSHRNsv2i32
    8449963U,	// VQRSHRNsv4i16
    7925675U,	// VQRSHRNsv8i8
    19460011U,	// VQRSHRNuv2i32
    10022827U,	// VQRSHRNuv4i16
    9498539U,	// VQRSHRNuv8i8
    770240479U,	// VQRSHRUNv2i32
    8450015U,	// VQRSHRUNv4i16
    7925727U,	// VQRSHRUNv8i8
    8973964U,	// VQSHLsiv16i8
    770240140U,	// VQSHLsiv1i64
    8449676U,	// VQSHLsiv2i32
    770240140U,	// VQSHLsiv2i64
    7925388U,	// VQSHLsiv4i16
    8449676U,	// VQSHLsiv4i32
    7925388U,	// VQSHLsiv8i16
    8973964U,	// VQSHLsiv8i8
    8974987U,	// VQSHLsuv16i8
    770241163U,	// VQSHLsuv1i64
    8450699U,	// VQSHLsuv2i32
    770241163U,	// VQSHLsuv2i64
    7926411U,	// VQSHLsuv4i16
    8450699U,	// VQSHLsuv4i32
    7926411U,	// VQSHLsuv8i16
    8974987U,	// VQSHLsuv8i8
    8973964U,	// VQSHLsv16i8
    770240140U,	// VQSHLsv1i64
    8449676U,	// VQSHLsv2i32
    770240140U,	// VQSHLsv2i64
    7925388U,	// VQSHLsv4i16
    8449676U,	// VQSHLsv4i32
    7925388U,	// VQSHLsv8i16
    8973964U,	// VQSHLsv8i8
    10546828U,	// VQSHLuiv16i8
    19459724U,	// VQSHLuiv1i64
    10022540U,	// VQSHLuiv2i32
    19459724U,	// VQSHLuiv2i64
    9498252U,	// VQSHLuiv4i16
    10022540U,	// VQSHLuiv4i32
    9498252U,	// VQSHLuiv8i16
    10546828U,	// VQSHLuiv8i8
    10546828U,	// VQSHLuv16i8
    19459724U,	// VQSHLuv1i64
    10022540U,	// VQSHLuv2i32
    19459724U,	// VQSHLuv2i64
    9498252U,	// VQSHLuv4i16
    10022540U,	// VQSHLuv4i32
    9498252U,	// VQSHLuv8i16
    10546828U,	// VQSHLuv8i8
    770240420U,	// VQSHRNsv2i32
    8449956U,	// VQSHRNsv4i16
    7925668U,	// VQSHRNsv8i8
    19460004U,	// VQSHRNuv2i32
    10022820U,	// VQSHRNuv4i16
    9498532U,	// VQSHRNuv8i8
    770240471U,	// VQSHRUNv2i32
    8450007U,	// VQSHRUNv4i16
    7925719U,	// VQSHRUNv8i8
    8973272U,	// VQSUBsv16i8
    770239448U,	// VQSUBsv1i64
    8448984U,	// VQSUBsv2i32
    770239448U,	// VQSUBsv2i64
    7924696U,	// VQSUBsv4i16
    8448984U,	// VQSUBsv4i32
    7924696U,	// VQSUBsv8i16
    8973272U,	// VQSUBsv8i8
    10546136U,	// VQSUBuv16i8
    19459032U,	// VQSUBuv1i64
    10021848U,	// VQSUBuv2i32
    19459032U,	// VQSUBuv2i64
    9497560U,	// VQSUBuv4i16
    10021848U,	// VQSUBuv4i32
    9497560U,	// VQSUBuv8i16
    10546136U,	// VQSUBuv8i8
    758181766U,	// VRADDHNv2i32
    11071366U,	// VRADDHNv4i16
    11595654U,	// VRADDHNv8i8
    9989344U,	// VRECPEd
    5795040U,	// VRECPEfd
    5795040U,	// VRECPEfq
    5270752U,	// VRECPEhd
    5270752U,	// VRECPEhq
    9989344U,	// VRECPEq
    5828894U,	// VRECPSfd
    5828894U,	// VRECPSfq
    5304606U,	// VRECPShd
    5304606U,	// VRECPShq
    1599812U,	// VREV16d8
    1599812U,	// VREV16q8
    551023U,	// VREV32d16
    1599599U,	// VREV32d8
    551023U,	// VREV32q16
    1599599U,	// VREV32q8
    551099U,	// VREV64d16
    1075387U,	// VREV64d32
    1599675U,	// VREV64d8
    551099U,	// VREV64q16
    1075387U,	// VREV64q32
    1599675U,	// VREV64q8
    8973415U,	// VRHADDsv16i8
    8449127U,	// VRHADDsv2i32
    7924839U,	// VRHADDsv4i16
    8449127U,	// VRHADDsv4i32
    7924839U,	// VRHADDsv8i16
    8973415U,	// VRHADDsv8i8
    10546279U,	// VRHADDuv16i8
    10021991U,	// VRHADDuv2i32
    9497703U,	// VRHADDuv4i16
    10021991U,	// VRHADDuv4i32
    9497703U,	// VRHADDuv8i16
    10546279U,	// VRHADDuv8i8
    740901592U,	// VRINTAD
    740902114U,	// VRINTAH
    740901253U,	// VRINTANDf
    740902114U,	// VRINTANDh
    740901253U,	// VRINTANQf
    740902114U,	// VRINTANQh
    740901253U,	// VRINTAS
    740901640U,	// VRINTMD
    740902195U,	// VRINTMH
    740901312U,	// VRINTMNDf
    740902195U,	// VRINTMNDh
    740901312U,	// VRINTMNQf
    740902195U,	// VRINTMNQh
    740901312U,	// VRINTMS
    740901652U,	// VRINTND
    740902207U,	// VRINTNH
    740901324U,	// VRINTNNDf
    740902207U,	// VRINTNNDh
    740901324U,	// VRINTNNQf
    740902207U,	// VRINTNNQh
    740901324U,	// VRINTNS
    740901664U,	// VRINTPD
    740902219U,	// VRINTPH
    740901336U,	// VRINTPNDf
    740902219U,	// VRINTPNDh
    740901336U,	// VRINTPNQf
    740902219U,	// VRINTPNQh
    740901336U,	// VRINTPS
    1011380420U,	// VRINTRD
    5271748U,	// VRINTRH
    5796036U,	// VRINTRS
    1011381388U,	// VRINTXD
    5272716U,	// VRINTXH
    740901384U,	// VRINTXNDf
    740902277U,	// VRINTXNDh
    740901384U,	// VRINTXNQf
    740902277U,	// VRINTXNQh
    5797004U,	// VRINTXS
    1011381438U,	// VRINTZD
    5272766U,	// VRINTZH
    740901396U,	// VRINTZNDf
    740902300U,	// VRINTZNDh
    740901396U,	// VRINTZNQf
    740902300U,	// VRINTZNQh
    5797054U,	// VRINTZS
    8973984U,	// VRSHLsv16i8
    770240160U,	// VRSHLsv1i64
    8449696U,	// VRSHLsv2i32
    770240160U,	// VRSHLsv2i64
    7925408U,	// VRSHLsv4i16
    8449696U,	// VRSHLsv4i32
    7925408U,	// VRSHLsv8i16
    8973984U,	// VRSHLsv8i8
    10546848U,	// VRSHLuv16i8
    19459744U,	// VRSHLuv1i64
    10022560U,	// VRSHLuv2i32
    19459744U,	// VRSHLuv2i64
    9498272U,	// VRSHLuv4i16
    10022560U,	// VRSHLuv4i32
    9498272U,	// VRSHLuv8i16
    10546848U,	// VRSHLuv8i8
    758181811U,	// VRSHRNv2i32
    11071411U,	// VRSHRNv4i16
    11595699U,	// VRSHRNv8i8
    8974473U,	// VRSHRsv16i8
    770240649U,	// VRSHRsv1i64
    8450185U,	// VRSHRsv2i32
    770240649U,	// VRSHRsv2i64
    7925897U,	// VRSHRsv4i16
    8450185U,	// VRSHRsv4i32
    7925897U,	// VRSHRsv8i16
    8974473U,	// VRSHRsv8i8
    10547337U,	// VRSHRuv16i8
    19460233U,	// VRSHRuv1i64
    10023049U,	// VRSHRuv2i32
    19460233U,	// VRSHRuv2i64
    9498761U,	// VRSHRuv4i16
    10023049U,	// VRSHRuv4i32
    9498761U,	// VRSHRuv8i16
    10547337U,	// VRSHRuv8i8
    9989357U,	// VRSQRTEd
    5795053U,	// VRSQRTEfd
    5795053U,	// VRSQRTEfq
    5270765U,	// VRSQRTEhd
    5270765U,	// VRSQRTEhq
    9989357U,	// VRSQRTEq
    5828916U,	// VRSQRTSfd
    5828916U,	// VRSQRTSfq
    5304628U,	// VRSQRTShd
    5304628U,	// VRSQRTShq
    8956515U,	// VRSRAsv16i8
    703113827U,	// VRSRAsv1i64
    8432227U,	// VRSRAsv2i32
    703113827U,	// VRSRAsv2i64
    7907939U,	// VRSRAsv4i16
    8432227U,	// VRSRAsv4i32
    7907939U,	// VRSRAsv8i16
    8956515U,	// VRSRAsv8i8
    10529379U,	// VRSRAuv16i8
    19442275U,	// VRSRAuv1i64
    10005091U,	// VRSRAuv2i32
    19442275U,	// VRSRAuv2i64
    9480803U,	// VRSRAuv4i16
    10005091U,	// VRSRAuv4i32
    9480803U,	// VRSRAuv8i16
    10529379U,	// VRSRAuv8i8
    758181751U,	// VRSUBHNv2i32
    11071351U,	// VRSUBHNv4i16
    11595639U,	// VRSUBHNv8i8
    2619445084U,	// VSCCLRMD
    2619445084U,	// VSCCLRMS
    2687141449U,	// VSDOTD
    2687141449U,	// VSDOTDI
    2687141449U,	// VSDOTQ
    2687141449U,	// VSDOTQI
    740901676U,	// VSELEQD
    740902231U,	// VSELEQH
    740901348U,	// VSELEQS
    740901604U,	// VSELGED
    740902137U,	// VSELGEH
    740901276U,	// VSELGES
    740901700U,	// VSELGTD
    740902265U,	// VSELGTH
    740901372U,	// VSELGTS
    740901688U,	// VSELVSD
    740902253U,	// VSELVSH
    740901360U,	// VSELVSS
    570128U,	// VSETLNi16
    1094416U,	// VSETLNi32
    1618704U,	// VSETLNi8
    11595471U,	// VSHLLi16
    11071183U,	// VSHLLi32
    12119759U,	// VSHLLi8
    8449743U,	// VSHLLsv2i64
    7925455U,	// VSHLLsv4i32
    8974031U,	// VSHLLsv8i16
    10022607U,	// VSHLLuv2i64
    9498319U,	// VSHLLuv4i32
    10546895U,	// VSHLLuv8i16
    12119718U,	// VSHLiv16i8
    758181542U,	// VSHLiv1i64
    11071142U,	// VSHLiv2i32
    758181542U,	// VSHLiv2i64
    11595430U,	// VSHLiv4i16
    11071142U,	// VSHLiv4i32
    11595430U,	// VSHLiv8i16
    12119718U,	// VSHLiv8i8
    8973990U,	// VSHLsv16i8
    770240166U,	// VSHLsv1i64
    8449702U,	// VSHLsv2i32
    770240166U,	// VSHLsv2i64
    7925414U,	// VSHLsv4i16
    8449702U,	// VSHLsv4i32
    7925414U,	// VSHLsv8i16
    8973990U,	// VSHLsv8i8
    10546854U,	// VSHLuv16i8
    19459750U,	// VSHLuv1i64
    10022566U,	// VSHLuv2i32
    19459750U,	// VSHLuv2i64
    9498278U,	// VSHLuv4i16
    10022566U,	// VSHLuv4i32
    9498278U,	// VSHLuv8i16
    10546854U,	// VSHLuv8i8
    758181818U,	// VSHRNv2i32
    11071418U,	// VSHRNv4i16
    11595706U,	// VSHRNv8i8
    8974479U,	// VSHRsv16i8
    770240655U,	// VSHRsv1i64
    8450191U,	// VSHRsv2i32
    770240655U,	// VSHRsv2i64
    7925903U,	// VSHRsv4i16
    8450191U,	// VSHRsv4i32
    7925903U,	// VSHRsv8i16
    8974479U,	// VSHRsv8i8
    10547343U,	// VSHRuv16i8
    19460239U,	// VSHRuv1i64
    10023055U,	// VSHRuv2i32
    19460239U,	// VSHRuv2i64
    9498767U,	// VSHRuv4i16
    10023055U,	// VSHRuv4i32
    9498767U,	// VSHRuv8i16
    10547343U,	// VSHRuv8i8
    32567918U,	// VSHTOD
    1020326510U,	// VSHTOH
    33092206U,	// VSHTOS
    1644196462U,	// VSITOD
    1644720750U,	// VSITOH
    1625846382U,	// VSITOS
    1617415U,	// VSLIv16i8
    12627463U,	// VSLIv1i64
    1093127U,	// VSLIv2i32
    12627463U,	// VSLIv2i64
    568839U,	// VSLIv4i16
    1093127U,	// VSLIv4i32
    568839U,	// VSLIv8i16
    1617415U,	// VSLIv8i8
    1040249454U,	// VSLTOD
    1040773742U,	// VSLTOH
    1021899374U,	// VSLTOS
    1011380787U,	// VSQRTD
    5272115U,	// VSQRTH
    5796403U,	// VSQRTS
    8956521U,	// VSRAsv16i8
    703113833U,	// VSRAsv1i64
    8432233U,	// VSRAsv2i32
    703113833U,	// VSRAsv2i64
    7907945U,	// VSRAsv4i16
    8432233U,	// VSRAsv4i32
    7907945U,	// VSRAsv8i16
    8956521U,	// VSRAsv8i8
    10529385U,	// VSRAuv16i8
    19442281U,	// VSRAuv1i64
    10005097U,	// VSRAuv2i32
    19442281U,	// VSRAuv2i64
    9480809U,	// VSRAuv4i16
    10005097U,	// VSRAuv4i32
    9480809U,	// VSRAuv8i16
    10529385U,	// VSRAuv8i8
    1617420U,	// VSRIv16i8
    12627468U,	// VSRIv1i64
    1093132U,	// VSRIv2i32
    12627468U,	// VSRIv2i64
    568844U,	// VSRIv4i16
    1093132U,	// VSRIv4i32
    568844U,	// VSRIv8i16
    1617420U,	// VSRIv8i8
    696297578U,	// VST1LNd16
    2776737898U,	// VST1LNd16_UPD
    696821866U,	// VST1LNd32
    2777262186U,	// VST1LNd32_UPD
    697346154U,	// VST1LNd8
    2777786474U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    2819156074U,	// VST1d16
    2886264938U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    2953357418U,	// VST1d16Qwb_fixed
    3020474474U,	// VST1d16Qwb_register
    3087591530U,	// VST1d16T
    0U,	// VST1d16TPseudo
    3154684010U,	// VST1d16Twb_fixed
    3221801066U,	// VST1d16Twb_register
    3288901738U,	// VST1d16wb_fixed
    3356018794U,	// VST1d16wb_register
    2819680362U,	// VST1d32
    2886789226U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    2953881706U,	// VST1d32Qwb_fixed
    3020998762U,	// VST1d32Qwb_register
    3088115818U,	// VST1d32T
    0U,	// VST1d32TPseudo
    3155208298U,	// VST1d32Twb_fixed
    3222325354U,	// VST1d32Twb_register
    3289426026U,	// VST1d32wb_fixed
    3356543082U,	// VST1d32wb_register
    2831214698U,	// VST1d64
    2898323562U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    2965416042U,	// VST1d64Qwb_fixed
    3032533098U,	// VST1d64Qwb_register
    3099650154U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    3166742634U,	// VST1d64Twb_fixed
    3233859690U,	// VST1d64Twb_register
    3300960362U,	// VST1d64wb_fixed
    3368077418U,	// VST1d64wb_register
    2820204650U,	// VST1d8
    2887313514U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    2954405994U,	// VST1d8Qwb_fixed
    3021523050U,	// VST1d8Qwb_register
    3088640106U,	// VST1d8T
    0U,	// VST1d8TPseudo
    3155732586U,	// VST1d8Twb_fixed
    3222849642U,	// VST1d8Twb_register
    3289950314U,	// VST1d8wb_fixed
    3357067370U,	// VST1d8wb_register
    3423135850U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    3490228330U,	// VST1q16wb_fixed
    3557345386U,	// VST1q16wb_register
    3423660138U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    3490752618U,	// VST1q32wb_fixed
    3557869674U,	// VST1q32wb_register
    3435194474U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    3502286954U,	// VST1q64wb_fixed
    3569404010U,	// VST1q64wb_register
    3424184426U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    3491276906U,	// VST1q8wb_fixed
    3558393962U,	// VST1q8wb_register
    696305830U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    2776926374U,	// VST2LNd16_UPD
    696830118U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    2777450662U,	// VST2LNd32_UPD
    697354406U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    2777974950U,	// VST2LNd8_UPD
    696305830U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    2776926374U,	// VST2LNq16_UPD
    696830118U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    2777450662U,	// VST2LNq32_UPD
    3624462502U,	// VST2b16
    3691554982U,	// VST2b16wb_fixed
    3758672038U,	// VST2b16wb_register
    3624986790U,	// VST2b32
    3692079270U,	// VST2b32wb_fixed
    3759196326U,	// VST2b32wb_register
    3625511078U,	// VST2b8
    3692603558U,	// VST2b8wb_fixed
    3759720614U,	// VST2b8wb_register
    3423135910U,	// VST2d16
    3490228390U,	// VST2d16wb_fixed
    3557345446U,	// VST2d16wb_register
    3423660198U,	// VST2d32
    3490752678U,	// VST2d32wb_fixed
    3557869734U,	// VST2d32wb_register
    3424184486U,	// VST2d8
    3491276966U,	// VST2d8wb_fixed
    3558394022U,	// VST2d8wb_register
    2886264998U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    2953357478U,	// VST2q16wb_fixed
    3020474534U,	// VST2q16wb_register
    2886789286U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    2953881766U,	// VST2q32wb_fixed
    3020998822U,	// VST2q32wb_register
    2887313574U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    2954406054U,	// VST2q8wb_fixed
    3021523110U,	// VST2q8wb_register
    696363190U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    2776950966U,	// VST3LNd16_UPD
    696887478U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    2777475254U,	// VST3LNd32_UPD
    697411766U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    2777999542U,	// VST3LNd8_UPD
    696363190U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    2776950966U,	// VST3LNq16_UPD
    696887478U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    2777475254U,	// VST3LNq32_UPD
    696305846U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    2776926390U,	// VST3d16_UPD
    696830134U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    2777450678U,	// VST3d32_UPD
    697354422U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    2777974966U,	// VST3d8_UPD
    696305846U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    2776926390U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    696830134U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    2777450678U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    697354422U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    2777974966U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    696551623U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    2776934599U,	// VST4LNd16_UPD
    697075911U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    2777458887U,	// VST4LNd32_UPD
    697600199U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    2777983175U,	// VST4LNd8_UPD
    696551623U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    2776934599U,	// VST4LNq16_UPD
    697075911U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    2777458887U,	// VST4LNq32_UPD
    696363207U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    2776950983U,	// VST4d16_UPD
    696887495U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    2777475271U,	// VST4d32_UPD
    697411783U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    2777999559U,	// VST4d8_UPD
    696363207U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    2776950983U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    696887495U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    2777475271U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    697411783U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    2777999559U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    740322034U,	// VSTMDDB_UPD
    2189854U,	// VSTMDIA
    740321822U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    740322034U,	// VSTMSDB_UPD
    2189854U,	// VSTMSIA
    740321822U,	// VSTMSIA_UPD
    2158795U,	// VSTRD
    585931U,	// VSTRH
    2158795U,	// VSTRS
    2308468939U,	// VSTR_FPCXTNS_off
    2375610571U,	// VSTR_FPCXTNS_post
    2442719435U,	// VSTR_FPCXTNS_pre
    2308993227U,	// VSTR_FPCXTS_off
    2376134859U,	// VSTR_FPCXTS_post
    2443243723U,	// VSTR_FPCXTS_pre
    2309517515U,	// VSTR_FPSCR_NZCVQC_off
    2376659147U,	// VSTR_FPSCR_NZCVQC_post
    2443768011U,	// VSTR_FPSCR_NZCVQC_pre
    2310041803U,	// VSTR_FPSCR_off
    2377183435U,	// VSTR_FPSCR_post
    2444292299U,	// VSTR_FPSCR_pre
    2511925451U,	// VSTR_P0_off
    1236840651U,	// VSTR_P0_post
    2579017931U,	// VSTR_P0_pre
    2311090379U,	// VSTR_VPR_off
    2378232011U,	// VSTR_VPR_post
    2445340875U,	// VSTR_VPR_pre
    1011411934U,	// VSUBD
    5303262U,	// VSUBH
    758181759U,	// VSUBHNv2i32
    11071359U,	// VSUBHNv4i16
    11595647U,	// VSUBHNv8i8
    8449619U,	// VSUBLsv2i64
    7925331U,	// VSUBLsv4i32
    8973907U,	// VSUBLsv8i16
    10022483U,	// VSUBLuv2i64
    9498195U,	// VSUBLuv4i32
    10546771U,	// VSUBLuv8i16
    5827550U,	// VSUBS
    8450843U,	// VSUBWsv2i64
    7926555U,	// VSUBWsv4i32
    8975131U,	// VSUBWsv8i16
    10023707U,	// VSUBWuv2i64
    9499419U,	// VSUBWuv4i32
    10547995U,	// VSUBWuv8i16
    5827550U,	// VSUBfd
    5827550U,	// VSUBfq
    5303262U,	// VSUBhd
    5303262U,	// VSUBhq
    12119006U,	// VSUBv16i8
    758180830U,	// VSUBv1i64
    11070430U,	// VSUBv2i32
    758180830U,	// VSUBv2i64
    11594718U,	// VSUBv4i16
    11070430U,	// VSUBv4i32
    11594718U,	// VSUBv8i16
    12119006U,	// VSUBv8i8
    2142287U,	// VSWPd
    2142287U,	// VSWPq
    1633870U,	// VTBL1
    1633870U,	// VTBL2
    1633870U,	// VTBL3
    0U,	// VTBL3Pseudo
    1633870U,	// VTBL4
    0U,	// VTBL4Pseudo
    1618888U,	// VTBX1
    1618888U,	// VTBX2
    1618888U,	// VTBX3
    0U,	// VTBX3Pseudo
    1618888U,	// VTBX4
    0U,	// VTBX4Pseudo
    34665070U,	// VTOSHD
    1022947950U,	// VTOSHH
    35189358U,	// VTOSHS
    1635283152U,	// VTOSIRD
    1646293200U,	// VTOSIRH
    1627418832U,	// VTOSIRS
    1635283566U,	// VTOSIZD
    1646293614U,	// VTOSIZH
    1627419246U,	// VTOSIZS
    1031336558U,	// VTOSLD
    1042346606U,	// VTOSLH
    1023472238U,	// VTOSLS
    36237934U,	// VTOUHD
    1023996526U,	// VTOUHH
    36762222U,	// VTOUHS
    1647866064U,	// VTOUIRD
    1648390352U,	// VTOUIRH
    1628467408U,	// VTOUIRS
    1647866478U,	// VTOUIZD
    1648390766U,	// VTOUIZH
    1628467822U,	// VTOUIZS
    1043919470U,	// VTOULD
    1044443758U,	// VTOULH
    1024520814U,	// VTOULS
    569285U,	// VTRNd16
    1093573U,	// VTRNd32
    1617861U,	// VTRNd8
    569285U,	// VTRNq16
    1093573U,	// VTRNq32
    1617861U,	// VTRNq8
    1634883U,	// VTSTv16i8
    1110595U,	// VTSTv2i32
    586307U,	// VTSTv4i16
    1110595U,	// VTSTv4i32
    586307U,	// VTSTv8i16
    1634883U,	// VTSTv8i8
    2687141459U,	// VUDOTD
    2687141459U,	// VUDOTDI
    2687141459U,	// VUDOTQ
    2687141459U,	// VUDOTQI
    38335086U,	// VUHTOD
    1020850798U,	// VUHTOH
    38859374U,	// VUHTOS
    1649963630U,	// VUITOD
    1650487918U,	// VUITOH
    1626370670U,	// VUITOS
    1046016622U,	// VULTOD
    1046540910U,	// VULTOH
    1022423662U,	// VULTOS
    569428U,	// VUZPd16
    1618004U,	// VUZPd8
    569428U,	// VUZPq16
    1093716U,	// VUZPq32
    1618004U,	// VUZPq8
    569355U,	// VZIPd16
    1617931U,	// VZIPd8
    569355U,	// VZIPq16
    1093643U,	// VZIPq32
    1617931U,	// VZIPq8
    2189805U,	// sysLDMDA
    740321773U,	// sysLDMDA_UPD
    2190060U,	// sysLDMDB
    740322028U,	// sysLDMDB_UPD
    2191178U,	// sysLDMIA
    740323146U,	// sysLDMIA_UPD
    2190079U,	// sysLDMIB
    740322047U,	// sysLDMIB_UPD
    2189811U,	// sysSTMDA
    740321779U,	// sysSTMDA_UPD
    2190067U,	// sysSTMDB
    740322035U,	// sysSTMDB_UPD
    2191213U,	// sysSTMIA
    740323181U,	// sysSTMIA_UPD
    2190085U,	// sysSTMIB
    740322053U,	// sysSTMIB_UPD
    2108435U,	// t2ADCri
    40381459U,	// t2ADCrr
    40438803U,	// t2ADCrs
    40381527U,	// t2ADDri
    2159394U,	// t2ADDri12
    40381527U,	// t2ADDrr
    40438871U,	// t2ADDrs
    40381527U,	// t2ADDspImm
    2159394U,	// t2ADDspImm12
    40398957U,	// t2ADR
    2108568U,	// t2ANDri
    40381592U,	// t2ANDrr
    40438936U,	// t2ANDrs
    40382638U,	// t2ASRri
    40382638U,	// t2ASRrr
    40463037U,	// t2B
    2157595U,	// t2BFC
    2141695U,	// t2BFI
    2125436U,	// t2BFLi
    2126951U,	// t2BFLr
    2125045U,	// t2BFi
    740902639U,	// t2BFic
    2126872U,	// t2BFr
    2108448U,	// t2BICri
    40381472U,	// t2BICrr
    40438816U,	// t2BICrs
    2190865U,	// t2BXJ
    40463037U,	// t2Bcc
    807514119U,	// t2CDP
    807512208U,	// t2CDP2
    3249163U,	// t2CLREX
    2619445087U,	// t2CLRM
    2127034U,	// t2CLZ
    40398752U,	// t2CMNri
    40398752U,	// t2CMNzrr
    40431520U,	// t2CMNzrs
    40398865U,	// t2CMPri
    40398865U,	// t2CMPrr
    40431633U,	// t2CMPrs
    3229455U,	// t2CPS1p
    980021537U,	// t2CPS2p
    941748513U,	// t2CPS3p
    740902507U,	// t2CRC32B
    740902515U,	// t2CRC32CB
    740902607U,	// t2CRC32CH
    740902722U,	// t2CRC32CW
    740902599U,	// t2CRC32H
    740902714U,	// t2CRC32W
    740902641U,	// t2CSEL
    740902558U,	// t2CSINC
    740902693U,	// t2CSINV
    740902592U,	// t2CSNEG
    2190589U,	// t2DBG
    3246180U,	// t2DCPS1
    3246240U,	// t2DCPS2
    3246256U,	// t2DCPS3
    740902661U,	// t2DLS
    3827395374U,	// t2DMB
    3827395470U,	// t2DSB
    2109596U,	// t2EORri
    40382620U,	// t2EORrr
    40439964U,	// t2EORrs
    40464852U,	// t2HINT
    3229484U,	// t2HVC
    3894504338U,	// t2ISB
    69226916U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    2124265U,	// t2LDA
    2124474U,	// t2LDAB
    2126841U,	// t2LDAEX
    2124785U,	// t2LDAEXB
    2157748U,	// t2LDAEXD
    2125271U,	// t2LDAEXH
    2125071U,	// t2LDAH
    807448085U,	// t2LDC2L_OFFSET
    807448085U,	// t2LDC2L_OPTION
    807448085U,	// t2LDC2L_POST
    807448085U,	// t2LDC2L_PRE
    807446646U,	// t2LDC2_OFFSET
    807446646U,	// t2LDC2_OPTION
    807446646U,	// t2LDC2_POST
    807446646U,	// t2LDC2_PRE
    807448153U,	// t2LDCL_OFFSET
    807448153U,	// t2LDCL_OPTION
    807448153U,	// t2LDCL_POST
    807448153U,	// t2LDCL_PRE
    807447575U,	// t2LDC_OFFSET
    807447575U,	// t2LDC_OPTION
    807447575U,	// t2LDC_POST
    807447575U,	// t2LDC_PRE
    2190060U,	// t2LDMDB
    740322028U,	// t2LDMDB_UPD
    40464202U,	// t2LDMIA
    778596170U,	// t2LDMIA_UPD
    2158956U,	// t2LDRBT
    2141059U,	// t2LDRB_POST
    2141059U,	// t2LDRB_PRE
    40430467U,	// t2LDRBi12
    2157443U,	// t2LDRBi8
    40397699U,	// t2LDRBpci
    40414083U,	// t2LDRBs
    2149533U,	// t2LDRD_POST
    2149533U,	// t2LDRD_PRE
    2141341U,	// t2LDRDi8
    2159621U,	// t2LDREX
    2124799U,	// t2LDREXB
    2157762U,	// t2LDREXD
    2125285U,	// t2LDREXH
    2158991U,	// t2LDRHT
    2141567U,	// t2LDRH_POST
    2141567U,	// t2LDRH_PRE
    40430975U,	// t2LDRHi12
    2157951U,	// t2LDRHi8
    40398207U,	// t2LDRHpci
    40414591U,	// t2LDRHs
    2158968U,	// t2LDRSBT
    2141078U,	// t2LDRSB_POST
    2141078U,	// t2LDRSB_PRE
    40430486U,	// t2LDRSBi12
    2157462U,	// t2LDRSBi8
    40397718U,	// t2LDRSBpci
    40414102U,	// t2LDRSBs
    2159003U,	// t2LDRSHT
    2141606U,	// t2LDRSH_POST
    2141606U,	// t2LDRSH_PRE
    40431014U,	// t2LDRSHi12
    2157990U,	// t2LDRSHi8
    40398246U,	// t2LDRSHpci
    40414630U,	// t2LDRSHs
    2159150U,	// t2LDRT
    2142322U,	// t2LDR_POST
    2142322U,	// t2LDR_PRE
    40431730U,	// t2LDRi12
    2158706U,	// t2LDRi8
    40398962U,	// t2LDRpci
    40415346U,	// t2LDRs
    3229367U,	// t2LE
    3311287U,	// t2LEUpdate
    40382237U,	// t2LSLri
    40382237U,	// t2LSLrr
    40382645U,	// t2LSRri
    40382645U,	// t2LSRrr
    807514217U,	// t2MCR
    807512213U,	// t2MCR2
    807456932U,	// t2MCRR
    807454874U,	// t2MCRR2
    2140717U,	// t2MLA
    2142457U,	// t2MLS
    2159219U,	// t2MOVTi16
    40407825U,	// t2MOVi
    2126648U,	// t2MOVi16
    40407825U,	// t2MOVr
    40399146U,	// t2MOVsra_flag
    40399151U,	// t2MOVsrl_flag
    1344384046U,	// t2MRC
    1344383099U,	// t2MRC2
    1411435570U,	// t2MRRC
    1411434624U,	// t2MRRC2
    2191654U,	// t2MRS_AR
    2126118U,	// t2MRS_M
    2126118U,	// t2MRSbanked
    2191654U,	// t2MRSsys_AR
    1478521018U,	// t2MSR_AR
    1478521018U,	// t2MSR_M
    1545629882U,	// t2MSRbanked
    2158381U,	// t2MUL
    2134001U,	// t2MVNi
    40407025U,	// t2MVNr
    40382449U,	// t2MVNs
    2109377U,	// t2ORNri
    2109377U,	// t2ORNrr
    2166721U,	// t2ORNrs
    2109610U,	// t2ORRri
    40382634U,	// t2ORRrr
    40439978U,	// t2ORRrs
    2142551U,	// t2PKHBT
    2141095U,	// t2PKHTB
    3961549607U,	// t2PLDWi12
    4028658471U,	// t2PLDWi8
    4095800103U,	// t2PLDWs
    3961547916U,	// t2PLDi12
    4028656780U,	// t2PLDi8
    4162940044U,	// t2PLDpci
    4095798412U,	// t2PLDs
    3961548291U,	// t2PLIi12
    4028657155U,	// t2PLIi8
    4162940419U,	// t2PLIpci
    4095798787U,	// t2PLIs
    2157691U,	// t2QADD
    2156833U,	// t2QADD16
    2156936U,	// t2QADD8
    2159741U,	// t2QASX
    2157665U,	// t2QDADD
    2157516U,	// t2QDSUB
    2159487U,	// t2QSAX
    2157529U,	// t2QSUB
    2156795U,	// t2QSUB16
    2156897U,	// t2QSUB8
    2126242U,	// t2RBIT
    40399584U,	// t2REV
    40397125U,	// t2REV16
    40398257U,	// t2REVSH
    2190053U,	// t2RFEDB
    2190053U,	// t2RFEDBW
    2189841U,	// t2RFEIA
    2189841U,	// t2RFEIAW
    40382624U,	// t2RORri
    40382624U,	// t2RORrr
    2135148U,	// t2RRX
    40381336U,	// t2RSBri
    2108312U,	// t2RSBrr
    2165656U,	// t2RSBrs
    2156840U,	// t2SADD16
    2156942U,	// t2SADD8
    2159746U,	// t2SASX
    2959U,	// t2SB
    2108430U,	// t2SBCri
    40381454U,	// t2SBCrr
    40438798U,	// t2SBCrs
    2143255U,	// t2SBFX
    2159332U,	// t2SDIV
    2158200U,	// t2SEL
    3229431U,	// t2SETPAN
    3247372U,	// t2SG
    2156816U,	// t2SHADD16
    2156921U,	// t2SHADD8
    2159728U,	// t2SHASX
    2159474U,	// t2SHSAX
    2156778U,	// t2SHSUB16
    2156882U,	// t2SHSUB8
    2190378U,	// t2SMC
    2140875U,	// t2SMLABB
    2142544U,	// t2SMLABT
    2141251U,	// t2SMLAD
    2143181U,	// t2SMLADX
    2207292U,	// t2SMLAL
    2206418U,	// t2SMLALBB
    2208093U,	// t2SMLALBT
    2206853U,	// t2SMLALD
    2208731U,	// t2SMLALDX
    2206637U,	// t2SMLALTB
    2208335U,	// t2SMLALTT
    2141088U,	// t2SMLATB
    2142792U,	// t2SMLATT
    2141155U,	// t2SMLAWB
    2142840U,	// t2SMLAWT
    2141352U,	// t2SMLSD
    2143211U,	// t2SMLSDX
    2206864U,	// t2SMLSLD
    2208739U,	// t2SMLSLDX
    2140721U,	// t2SMMLA
    2142306U,	// t2SMMLAR
    2142455U,	// t2SMMLS
    2142386U,	// t2SMMLSR
    2158385U,	// t2SMMUL
    2158740U,	// t2SMMULR
    2157641U,	// t2SMUAD
    2159572U,	// t2SMUADX
    2157274U,	// t2SMULBB
    2158949U,	// t2SMULBT
    2141922U,	// t2SMULL
    2157493U,	// t2SMULTB
    2159191U,	// t2SMULTT
    2157546U,	// t2SMULWB
    2159231U,	// t2SMULWT
    2157742U,	// t2SMUSD
    2159602U,	// t2SMUSDX
    40987385U,	// t2SRSDB
    41511673U,	// t2SRSDB_UPD
    40987173U,	// t2SRSIA
    41511461U,	// t2SRSIA_UPD
    2142529U,	// t2SSAT
    2156854U,	// t2SSAT16
    2159492U,	// t2SSAX
    2156802U,	// t2SSUB16
    2156903U,	// t2SSUB8
    807448091U,	// t2STC2L_OFFSET
    807448091U,	// t2STC2L_OPTION
    807448091U,	// t2STC2L_POST
    807448091U,	// t2STC2L_PRE
    807446662U,	// t2STC2_OFFSET
    807446662U,	// t2STC2_OPTION
    807446662U,	// t2STC2_POST
    807446662U,	// t2STC2_PRE
    807448158U,	// t2STCL_OFFSET
    807448158U,	// t2STCL_OPTION
    807448158U,	// t2STCL_POST
    807448158U,	// t2STCL_PRE
    807447611U,	// t2STC_OFFSET
    807447611U,	// t2STC_OPTION
    807447611U,	// t2STC_POST
    807447611U,	// t2STC_PRE
    2125607U,	// t2STL
    2124578U,	// t2STLB
    2159615U,	// t2STLEX
    2157560U,	// t2STLEXB
    2141371U,	// t2STLEXD
    2158046U,	// t2STLEXH
    2125147U,	// t2STLH
    2190067U,	// t2STMDB
    740322035U,	// t2STMDB_UPD
    40464237U,	// t2STMIA
    778596205U,	// t2STMIA_UPD
    2158962U,	// t2STRBT
    740338569U,	// t2STRB_POST
    740338569U,	// t2STRB_PRE
    40430473U,	// t2STRBi12
    2157449U,	// t2STRBi8
    40414089U,	// t2STRBs
    740347043U,	// t2STRD_POST
    740347043U,	// t2STRD_PRE
    2141347U,	// t2STRDi8
    2143249U,	// t2STREX
    2157574U,	// t2STREXB
    2141385U,	// t2STREXD
    2158060U,	// t2STREXH
    2158997U,	// t2STRHT
    740339077U,	// t2STRH_POST
    740339077U,	// t2STRH_PRE
    40430981U,	// t2STRHi12
    2157957U,	// t2STRHi8
    40414597U,	// t2STRHs
    2159161U,	// t2STRT
    740339916U,	// t2STR_POST
    740339916U,	// t2STR_PRE
    40431820U,	// t2STRi12
    2158796U,	// t2STRi8
    40415436U,	// t2STRs
    42037485U,	// t2SUBS_PC_LR
    40381390U,	// t2SUBri
    2159388U,	// t2SUBri12
    40381390U,	// t2SUBrr
    40438734U,	// t2SUBrs
    40381390U,	// t2SUBspImm
    2159388U,	// t2SUBspImm12
    2140863U,	// t2SXTAB
    2140364U,	// t2SXTAB16
    2141477U,	// t2SXTAH
    40430530U,	// t2SXTB
    2156764U,	// t2SXTB16
    40431031U,	// t2SXTH
    4229982945U,	// t2TBB
    2125105U,	// t2TBH
    40398942U,	// t2TEQri
    40398942U,	// t2TEQrr
    40431710U,	// t2TEQrs
    69299100U,	// t2TSB
    40399428U,	// t2TSTri
    40399428U,	// t2TSTrr
    40432196U,	// t2TSTrs
    2126412U,	// t2TT
    2124405U,	// t2TTA
    2126155U,	// t2TTAT
    2126430U,	// t2TTT
    2156847U,	// t2UADD16
    2156948U,	// t2UADD8
    2159751U,	// t2UASX
    2143260U,	// t2UBFX
    3229491U,	// t2UDF
    2159337U,	// t2UDIV
    2156824U,	// t2UHADD16
    2156928U,	// t2UHADD8
    2159734U,	// t2UHASX
    2159480U,	// t2UHSAX
    2156786U,	// t2UHSUB16
    2156889U,	// t2UHSUB8
    2207265U,	// t2UMAAL
    2207298U,	// t2UMLAL
    2141928U,	// t2UMULL
    2156832U,	// t2UQADD16
    2156935U,	// t2UQADD8
    2159740U,	// t2UQASX
    2159486U,	// t2UQSAX
    2156794U,	// t2UQSUB16
    2156896U,	// t2UQSUB8
    2156915U,	// t2USAD8
    2140491U,	// t2USADA8
    2142534U,	// t2USAT
    2156861U,	// t2USAT16
    2159497U,	// t2USAX
    2156809U,	// t2USUB16
    2156909U,	// t2USUB8
    2140869U,	// t2UXTAB
    2140372U,	// t2UXTAB16
    2141483U,	// t2UXTAH
    40430535U,	// t2UXTB
    2156771U,	// t2UXTB16
    40431036U,	// t2UXTH
    740902666U,	// t2WLS
    2727160851U,	// tADC
    2157655U,	// tADDhirr
    713894999U,	// tADDi3
    2727160919U,	// tADDi8
    2157655U,	// tADDrSP
    2157655U,	// tADDrSPi
    713894999U,	// tADDrr
    2157655U,	// tADDspi
    2157655U,	// tADDspr
    2125933U,	// tADR
    2727160984U,	// tAND
    713896110U,	// tASRri
    2727162030U,	// tASRrr
    2190013U,	// tB
    2727160864U,	// tBIC
    3229471U,	// tBKPT
    673287760U,	// tBL
    673288472U,	// tBLXNSr
    673289315U,	// tBLXi
    673289315U,	// tBLXr
    2192317U,	// tBX
    2191635U,	// tBXNS
    2190013U,	// tBcc
    740902751U,	// tCBNZ
    740902746U,	// tCBZ
    2125728U,	// tCMNz
    2125841U,	// tCMPhir
    2125841U,	// tCMPi8
    2125841U,	// tCMPr
    939651361U,	// tCPS
    2727162012U,	// tEOR
    2191828U,	// tHINT
    3229466U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    2191178U,	// tLDMIA
    2157443U,	// tLDRBi
    2157443U,	// tLDRBr
    2157951U,	// tLDRHi
    2157951U,	// tLDRHr
    2157462U,	// tLDRSB
    2157990U,	// tLDRSH
    2158706U,	// tLDRi
    2125938U,	// tLDRpci
    2158706U,	// tLDRr
    2158706U,	// tLDRspi
    713895709U,	// tLSLri
    2727161629U,	// tLSLrr
    713896117U,	// tLSRri
    2727162037U,	// tLSRrr
    740902676U,	// tMOVSr
    1653945105U,	// tMOVi8
    2126609U,	// tMOVr
    713895725U,	// tMUL
    1653944305U,	// tMVN
    2727162026U,	// tORR
    0U,	// tPICADD
    2619445269U,	// tPOP
    2619444652U,	// tPUSH
    2126560U,	// tREV
    2124101U,	// tREV16
    2125233U,	// tREVSH
    2727162016U,	// tROR
    1855269784U,	// tRSB
    2727160846U,	// tSBC
    272047U,	// tSETEND
    740323181U,	// tSTMIA_UPD
    2157449U,	// tSTRBi
    2157449U,	// tSTRBr
    2157957U,	// tSTRHi
    2157957U,	// tSTRHr
    2158796U,	// tSTRi
    2158796U,	// tSTRr
    2158796U,	// tSTRspi
    713894862U,	// tSUBi3
    2727160782U,	// tSUBi8
    713894862U,	// tSUBrr
    2157518U,	// tSUBspi
    2190399U,	// tSVC
    2124738U,	// tSXTB
    2125239U,	// tSXTH
    4098U,	// tTRAP
    2126404U,	// tTST
    3229371U,	// tUDF
    2124743U,	// tUXTB
    2125244U,	// tUXTH
    2133U,	// t__brkdiv0
  };

  static const uint32_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTR_MASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// ABS
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ASRi
    0U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    0U,	// BL_PUSHLR
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm_i12
    0U,	// BR_JTm_rs
    0U,	// BR_JTr
    0U,	// BX_CALL
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    0U,	// CompilerBarrier
    0U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    0U,	// LDMIA_RET
    128U,	// LDRBT_POST
    16384U,	// LDRConstPool
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    128U,	// LDRT_POST
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    0U,	// LSLi
    0U,	// LSLr
    0U,	// LSRi
    0U,	// LSRr
    0U,	// MEMCPY
    0U,	// MLAv5
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCRX
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MULv5
    0U,	// MVNCCi
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    0U,	// RORi
    0U,	// RORr
    0U,	// RRX
    16384U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// SMLALv5
    0U,	// SMULLv5
    0U,	// SPACE
    128U,	// STRBT_POST
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    0U,	// STRH_preidx
    128U,	// STRT_POST
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TAILJMPr4
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    0U,	// TPsoft
    0U,	// UMLALv5
    0U,	// UMULLv5
    16640U,	// VLD1LNdAsm_16
    16640U,	// VLD1LNdAsm_32
    16640U,	// VLD1LNdAsm_8
    33024U,	// VLD1LNdWB_fixed_Asm_16
    33024U,	// VLD1LNdWB_fixed_Asm_32
    33024U,	// VLD1LNdWB_fixed_Asm_8
    524544U,	// VLD1LNdWB_register_Asm_16
    524544U,	// VLD1LNdWB_register_Asm_32
    524544U,	// VLD1LNdWB_register_Asm_8
    16640U,	// VLD2LNdAsm_16
    16640U,	// VLD2LNdAsm_32
    16640U,	// VLD2LNdAsm_8
    33024U,	// VLD2LNdWB_fixed_Asm_16
    33024U,	// VLD2LNdWB_fixed_Asm_32
    33024U,	// VLD2LNdWB_fixed_Asm_8
    524544U,	// VLD2LNdWB_register_Asm_16
    524544U,	// VLD2LNdWB_register_Asm_32
    524544U,	// VLD2LNdWB_register_Asm_8
    16640U,	// VLD2LNqAsm_16
    16640U,	// VLD2LNqAsm_32
    33024U,	// VLD2LNqWB_fixed_Asm_16
    33024U,	// VLD2LNqWB_fixed_Asm_32
    524544U,	// VLD2LNqWB_register_Asm_16
    524544U,	// VLD2LNqWB_register_Asm_32
    2U,	// VLD3DUPdAsm_16
    2U,	// VLD3DUPdAsm_32
    2U,	// VLD3DUPdAsm_8
    4U,	// VLD3DUPdWB_fixed_Asm_16
    4U,	// VLD3DUPdWB_fixed_Asm_32
    4U,	// VLD3DUPdWB_fixed_Asm_8
    16768U,	// VLD3DUPdWB_register_Asm_16
    16768U,	// VLD3DUPdWB_register_Asm_32
    16768U,	// VLD3DUPdWB_register_Asm_8
    2U,	// VLD3DUPqAsm_16
    2U,	// VLD3DUPqAsm_32
    2U,	// VLD3DUPqAsm_8
    4U,	// VLD3DUPqWB_fixed_Asm_16
    4U,	// VLD3DUPqWB_fixed_Asm_32
    4U,	// VLD3DUPqWB_fixed_Asm_8
    16768U,	// VLD3DUPqWB_register_Asm_16
    16768U,	// VLD3DUPqWB_register_Asm_32
    16768U,	// VLD3DUPqWB_register_Asm_8
    16640U,	// VLD3LNdAsm_16
    16640U,	// VLD3LNdAsm_32
    16640U,	// VLD3LNdAsm_8
    33024U,	// VLD3LNdWB_fixed_Asm_16
    33024U,	// VLD3LNdWB_fixed_Asm_32
    33024U,	// VLD3LNdWB_fixed_Asm_8
    524544U,	// VLD3LNdWB_register_Asm_16
    524544U,	// VLD3LNdWB_register_Asm_32
    524544U,	// VLD3LNdWB_register_Asm_8
    16640U,	// VLD3LNqAsm_16
    16640U,	// VLD3LNqAsm_32
    33024U,	// VLD3LNqWB_fixed_Asm_16
    33024U,	// VLD3LNqWB_fixed_Asm_32
    524544U,	// VLD3LNqWB_register_Asm_16
    524544U,	// VLD3LNqWB_register_Asm_32
    518U,	// VLD3dAsm_16
    518U,	// VLD3dAsm_32
    518U,	// VLD3dAsm_8
    646U,	// VLD3dWB_fixed_Asm_16
    646U,	// VLD3dWB_fixed_Asm_32
    646U,	// VLD3dWB_fixed_Asm_8
    49926U,	// VLD3dWB_register_Asm_16
    49926U,	// VLD3dWB_register_Asm_32
    49926U,	// VLD3dWB_register_Asm_8
    2U,	// VLD3qAsm_16
    2U,	// VLD3qAsm_32
    2U,	// VLD3qAsm_8
    4U,	// VLD3qWB_fixed_Asm_16
    4U,	// VLD3qWB_fixed_Asm_32
    4U,	// VLD3qWB_fixed_Asm_8
    16768U,	// VLD3qWB_register_Asm_16
    16768U,	// VLD3qWB_register_Asm_32
    16768U,	// VLD3qWB_register_Asm_8
    2U,	// VLD4DUPdAsm_16
    2U,	// VLD4DUPdAsm_32
    2U,	// VLD4DUPdAsm_8
    4U,	// VLD4DUPdWB_fixed_Asm_16
    4U,	// VLD4DUPdWB_fixed_Asm_32
    4U,	// VLD4DUPdWB_fixed_Asm_8
    16768U,	// VLD4DUPdWB_register_Asm_16
    16768U,	// VLD4DUPdWB_register_Asm_32
    16768U,	// VLD4DUPdWB_register_Asm_8
    2U,	// VLD4DUPqAsm_16
    2U,	// VLD4DUPqAsm_32
    2U,	// VLD4DUPqAsm_8
    4U,	// VLD4DUPqWB_fixed_Asm_16
    4U,	// VLD4DUPqWB_fixed_Asm_32
    4U,	// VLD4DUPqWB_fixed_Asm_8
    16768U,	// VLD4DUPqWB_register_Asm_16
    16768U,	// VLD4DUPqWB_register_Asm_32
    16768U,	// VLD4DUPqWB_register_Asm_8
    16640U,	// VLD4LNdAsm_16
    16640U,	// VLD4LNdAsm_32
    16640U,	// VLD4LNdAsm_8
    33024U,	// VLD4LNdWB_fixed_Asm_16
    33024U,	// VLD4LNdWB_fixed_Asm_32
    33024U,	// VLD4LNdWB_fixed_Asm_8
    524544U,	// VLD4LNdWB_register_Asm_16
    524544U,	// VLD4LNdWB_register_Asm_32
    524544U,	// VLD4LNdWB_register_Asm_8
    16640U,	// VLD4LNqAsm_16
    16640U,	// VLD4LNqAsm_32
    33024U,	// VLD4LNqWB_fixed_Asm_16
    33024U,	// VLD4LNqWB_fixed_Asm_32
    524544U,	// VLD4LNqWB_register_Asm_16
    524544U,	// VLD4LNqWB_register_Asm_32
    518U,	// VLD4dAsm_16
    518U,	// VLD4dAsm_32
    518U,	// VLD4dAsm_8
    646U,	// VLD4dWB_fixed_Asm_16
    646U,	// VLD4dWB_fixed_Asm_32
    646U,	// VLD4dWB_fixed_Asm_8
    49926U,	// VLD4dWB_register_Asm_16
    49926U,	// VLD4dWB_register_Asm_32
    49926U,	// VLD4dWB_register_Asm_8
    2U,	// VLD4qAsm_16
    2U,	// VLD4qAsm_32
    2U,	// VLD4qAsm_8
    4U,	// VLD4qWB_fixed_Asm_16
    4U,	// VLD4qWB_fixed_Asm_32
    4U,	// VLD4qWB_fixed_Asm_8
    16768U,	// VLD4qWB_register_Asm_16
    16768U,	// VLD4qWB_register_Asm_32
    16768U,	// VLD4qWB_register_Asm_8
    0U,	// VMOVD0
    0U,	// VMOVDcc
    0U,	// VMOVHcc
    0U,	// VMOVQ0
    0U,	// VMOVScc
    16640U,	// VST1LNdAsm_16
    16640U,	// VST1LNdAsm_32
    16640U,	// VST1LNdAsm_8
    33024U,	// VST1LNdWB_fixed_Asm_16
    33024U,	// VST1LNdWB_fixed_Asm_32
    33024U,	// VST1LNdWB_fixed_Asm_8
    524544U,	// VST1LNdWB_register_Asm_16
    524544U,	// VST1LNdWB_register_Asm_32
    524544U,	// VST1LNdWB_register_Asm_8
    16640U,	// VST2LNdAsm_16
    16640U,	// VST2LNdAsm_32
    16640U,	// VST2LNdAsm_8
    33024U,	// VST2LNdWB_fixed_Asm_16
    33024U,	// VST2LNdWB_fixed_Asm_32
    33024U,	// VST2LNdWB_fixed_Asm_8
    524544U,	// VST2LNdWB_register_Asm_16
    524544U,	// VST2LNdWB_register_Asm_32
    524544U,	// VST2LNdWB_register_Asm_8
    16640U,	// VST2LNqAsm_16
    16640U,	// VST2LNqAsm_32
    33024U,	// VST2LNqWB_fixed_Asm_16
    33024U,	// VST2LNqWB_fixed_Asm_32
    524544U,	// VST2LNqWB_register_Asm_16
    524544U,	// VST2LNqWB_register_Asm_32
    16640U,	// VST3LNdAsm_16
    16640U,	// VST3LNdAsm_32
    16640U,	// VST3LNdAsm_8
    33024U,	// VST3LNdWB_fixed_Asm_16
    33024U,	// VST3LNdWB_fixed_Asm_32
    33024U,	// VST3LNdWB_fixed_Asm_8
    524544U,	// VST3LNdWB_register_Asm_16
    524544U,	// VST3LNdWB_register_Asm_32
    524544U,	// VST3LNdWB_register_Asm_8
    16640U,	// VST3LNqAsm_16
    16640U,	// VST3LNqAsm_32
    33024U,	// VST3LNqWB_fixed_Asm_16
    33024U,	// VST3LNqWB_fixed_Asm_32
    524544U,	// VST3LNqWB_register_Asm_16
    524544U,	// VST3LNqWB_register_Asm_32
    518U,	// VST3dAsm_16
    518U,	// VST3dAsm_32
    518U,	// VST3dAsm_8
    646U,	// VST3dWB_fixed_Asm_16
    646U,	// VST3dWB_fixed_Asm_32
    646U,	// VST3dWB_fixed_Asm_8
    49926U,	// VST3dWB_register_Asm_16
    49926U,	// VST3dWB_register_Asm_32
    49926U,	// VST3dWB_register_Asm_8
    2U,	// VST3qAsm_16
    2U,	// VST3qAsm_32
    2U,	// VST3qAsm_8
    4U,	// VST3qWB_fixed_Asm_16
    4U,	// VST3qWB_fixed_Asm_32
    4U,	// VST3qWB_fixed_Asm_8
    16768U,	// VST3qWB_register_Asm_16
    16768U,	// VST3qWB_register_Asm_32
    16768U,	// VST3qWB_register_Asm_8
    16640U,	// VST4LNdAsm_16
    16640U,	// VST4LNdAsm_32
    16640U,	// VST4LNdAsm_8
    33024U,	// VST4LNdWB_fixed_Asm_16
    33024U,	// VST4LNdWB_fixed_Asm_32
    33024U,	// VST4LNdWB_fixed_Asm_8
    524544U,	// VST4LNdWB_register_Asm_16
    524544U,	// VST4LNdWB_register_Asm_32
    524544U,	// VST4LNdWB_register_Asm_8
    16640U,	// VST4LNqAsm_16
    16640U,	// VST4LNqAsm_32
    33024U,	// VST4LNqWB_fixed_Asm_16
    33024U,	// VST4LNqWB_fixed_Asm_32
    524544U,	// VST4LNqWB_register_Asm_16
    524544U,	// VST4LNqWB_register_Asm_32
    518U,	// VST4dAsm_16
    518U,	// VST4dAsm_32
    518U,	// VST4dAsm_8
    646U,	// VST4dWB_fixed_Asm_16
    646U,	// VST4dWB_fixed_Asm_32
    646U,	// VST4dWB_fixed_Asm_8
    49926U,	// VST4dWB_register_Asm_16
    49926U,	// VST4dWB_register_Asm_32
    49926U,	// VST4dWB_register_Asm_8
    2U,	// VST4qAsm_16
    2U,	// VST4qAsm_32
    2U,	// VST4qAsm_8
    4U,	// VST4qWB_fixed_Asm_16
    4U,	// VST4qWB_fixed_Asm_32
    4U,	// VST4qWB_fixed_Asm_8
    16768U,	// VST4qWB_register_Asm_16
    16768U,	// VST4qWB_register_Asm_32
    16768U,	// VST4qWB_register_Asm_8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    0U,	// t2ABS
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    0U,	// t2BF_LabelPseudo
    0U,	// t2BR_JT
    0U,	// t2DoLoopStart
    0U,	// t2LDMIA_RET
    16384U,	// t2LDRBpcrel
    16384U,	// t2LDRConstPool
    16384U,	// t2LDRHpcrel
    16384U,	// t2LDRSBpcrel
    16384U,	// t2LDRSHpcrel
    0U,	// t2LDRpci_pic
    16384U,	// t2LDRpcrel
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    0U,	// t2LoopDec
    0U,	// t2LoopEnd
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    896U,	// t2MOVSsi
    1024U,	// t2MOVSsr
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    896U,	// t2MOVsi
    1024U,	// t2MOVsr
    0U,	// t2MVNCCi
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    0U,	// t2STRB_preidx
    0U,	// t2STRH_preidx
    0U,	// t2STR_preidx
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    0U,	// t2TBB_JT
    0U,	// t2TBH_JT
    0U,	// t2WhileLoopStart
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    0U,	// tBL_PUSHLR
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBfar
    0U,	// tLDMIA_UPD
    16384U,	// tLDRConstPool
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    0U,	// tLDR_postidx
    0U,	// tLDRpci_pic
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    0U,	// tLSLSri
    0U,	// tMOVCCr_pseudo
    0U,	// tPOP_RET
    0U,	// tRSBS
    0U,	// tSBCS
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    1048576U,	// ADCri
    0U,	// ADCrr
    1572864U,	// ADCrsi
    0U,	// ADCrsr
    1048576U,	// ADDri
    0U,	// ADDrr
    1572864U,	// ADDrsi
    0U,	// ADDrsr
    1152U,	// ADR
    2U,	// AESD
    2U,	// AESE
    2U,	// AESIMC
    2U,	// AESMC
    1048576U,	// ANDri
    0U,	// ANDrr
    1572864U,	// ANDrsi
    0U,	// ANDrsr
    1280U,	// BFC
    2098560U,	// BFI
    1048576U,	// BICri
    0U,	// BICrr
    1572864U,	// BICrsi
    0U,	// BICrsr
    0U,	// BKPT
    0U,	// BL
    0U,	// BLX
    2U,	// BLX_pred
    0U,	// BLXi
    2U,	// BL_pred
    0U,	// BX
    2U,	// BXJ
    0U,	// BX_RET
    2U,	// BX_pred
    2U,	// Bcc
    66312U,	// CDP
    0U,	// CDP2
    0U,	// CLREX
    16384U,	// CLZ
    1536U,	// CMNri
    16384U,	// CMNzrr
    1664U,	// CMNzrsi
    1024U,	// CMNzrsr
    1536U,	// CMPri
    16384U,	// CMPrr
    1664U,	// CMPrsi
    1024U,	// CMPrsr
    0U,	// CPS1p
    2U,	// CPS2p
    17792U,	// CPS3p
    17792U,	// CRC32B
    17792U,	// CRC32CB
    17792U,	// CRC32CH
    17792U,	// CRC32CW
    17792U,	// CRC32H
    17792U,	// CRC32W
    2U,	// DBG
    0U,	// DMB
    0U,	// DSB
    1048576U,	// EORri
    0U,	// EORrr
    1572864U,	// EORrsi
    0U,	// EORrsr
    0U,	// ERET
    10U,	// FCONSTD
    1792U,	// FCONSTH
    1792U,	// FCONSTS
    524U,	// FLDMXDB_UPD
    18304U,	// FLDMXIA
    524U,	// FLDMXIA_UPD
    0U,	// FMSTAT
    524U,	// FSTMXDB_UPD
    18304U,	// FSTMXIA
    524U,	// FSTMXIA_UPD
    2U,	// HINT
    0U,	// HLT
    0U,	// HVC
    0U,	// ISB
    128U,	// LDA
    128U,	// LDAB
    128U,	// LDAEX
    128U,	// LDAEXB
    0U,	// LDAEXD
    128U,	// LDAEXH
    128U,	// LDAH
    0U,	// LDC2L_OFFSET
    2048U,	// LDC2L_OPTION
    2176U,	// LDC2L_POST
    0U,	// LDC2L_PRE
    0U,	// LDC2_OFFSET
    2048U,	// LDC2_OPTION
    2176U,	// LDC2_POST
    0U,	// LDC2_PRE
    2318U,	// LDCL_OFFSET
    2623886U,	// LDCL_OPTION
    3148174U,	// LDCL_POST
    2574U,	// LDCL_PRE
    2318U,	// LDC_OFFSET
    2623886U,	// LDC_OPTION
    3148174U,	// LDC_POST
    2574U,	// LDC_PRE
    18304U,	// LDMDA
    524U,	// LDMDA_UPD
    18304U,	// LDMDB
    524U,	// LDMDB_UPD
    18304U,	// LDMIA
    524U,	// LDMIA_UPD
    18304U,	// LDMIB
    524U,	// LDMIB_UPD
    3672448U,	// LDRBT_POST_IMM
    3672448U,	// LDRBT_POST_REG
    3672448U,	// LDRB_POST_IMM
    3672448U,	// LDRB_POST_REG
    2688U,	// LDRB_PRE_IMM
    2816U,	// LDRB_PRE_REG
    2944U,	// LDRBi12
    3072U,	// LDRBrs
    4194304U,	// LDRD
    38273024U,	// LDRD_POST
    5242880U,	// LDRD_PRE
    128U,	// LDREX
    128U,	// LDREXB
    0U,	// LDREXD
    128U,	// LDREXH
    3200U,	// LDRH
    5769600U,	// LDRHTi
    6293888U,	// LDRHTr
    6818176U,	// LDRH_POST
    3328U,	// LDRH_PRE
    3200U,	// LDRSB
    5769600U,	// LDRSBTi
    6293888U,	// LDRSBTr
    6818176U,	// LDRSB_POST
    3328U,	// LDRSB_PRE
    3200U,	// LDRSH
    5769600U,	// LDRSHTi
    6293888U,	// LDRSHTr
    6818176U,	// LDRSH_POST
    3328U,	// LDRSH_PRE
    3672448U,	// LDRT_POST_IMM
    3672448U,	// LDRT_POST_REG
    3672448U,	// LDR_POST_IMM
    3672448U,	// LDR_POST_REG
    2688U,	// LDR_PRE_IMM
    2816U,	// LDR_PRE_REG
    2944U,	// LDRcp
    2944U,	// LDRi12
    3072U,	// LDRrs
    74531592U,	// MCR
    3456U,	// MCR2
    108086024U,	// MCRR
    7864704U,	// MCRR2
    33554432U,	// MLA
    33554432U,	// MLS
    0U,	// MOVPCLR
    17792U,	// MOVTi16
    1536U,	// MOVi
    16384U,	// MOVi16
    16384U,	// MOVr
    16384U,	// MOVr_TC
    1664U,	// MOVsi
    1024U,	// MOVsr
    0U,	// MRC
    0U,	// MRC2
    0U,	// MRRC
    0U,	// MRRC2
    16U,	// MRS
    3584U,	// MRSbanked
    18U,	// MRSsys
    520U,	// MSR
    0U,	// MSRbanked
    20U,	// MSRi
    0U,	// MUL
    524288U,	// MVE_ASRLi
    524288U,	// MVE_ASRLr
    2U,	// MVE_DLSTP_16
    2U,	// MVE_DLSTP_32
    2U,	// MVE_DLSTP_64
    2U,	// MVE_DLSTP_8
    0U,	// MVE_LCTP
    0U,	// MVE_LETP
    524288U,	// MVE_LSLLi
    524288U,	// MVE_LSLLr
    524288U,	// MVE_LSRL
    17792U,	// MVE_SQRSHR
    8388608U,	// MVE_SQRSHRL
    17792U,	// MVE_SQSHL
    524288U,	// MVE_SQSHLL
    17792U,	// MVE_SRSHR
    524288U,	// MVE_SRSHRL
    17792U,	// MVE_UQRSHL
    8388608U,	// MVE_UQRSHLL
    17792U,	// MVE_UQSHL
    524288U,	// MVE_UQSHLL
    17792U,	// MVE_URSHR
    524288U,	// MVE_URSHRL
    8914304U,	// MVE_VABAVs16
    8914304U,	// MVE_VABAVs32
    8914304U,	// MVE_VABAVs8
    8914304U,	// MVE_VABAVu16
    8914304U,	// MVE_VABAVu32
    8914304U,	// MVE_VABAVu8
    0U,	// MVE_VABDf16
    0U,	// MVE_VABDf32
    0U,	// MVE_VABDs16
    0U,	// MVE_VABDs32
    0U,	// MVE_VABDs8
    0U,	// MVE_VABDu16
    0U,	// MVE_VABDu32
    0U,	// MVE_VABDu8
    16384U,	// MVE_VABSf16
    16384U,	// MVE_VABSf32
    16384U,	// MVE_VABSs16
    16384U,	// MVE_VABSs32
    16384U,	// MVE_VABSs8
    8914304U,	// MVE_VADC
    8914304U,	// MVE_VADCI
    524288U,	// MVE_VADDLVs32acc
    0U,	// MVE_VADDLVs32no_acc
    524288U,	// MVE_VADDLVu32acc
    0U,	// MVE_VADDLVu32no_acc
    17792U,	// MVE_VADDVs16acc
    16384U,	// MVE_VADDVs16no_acc
    17792U,	// MVE_VADDVs32acc
    16384U,	// MVE_VADDVs32no_acc
    17792U,	// MVE_VADDVs8acc
    16384U,	// MVE_VADDVs8no_acc
    17792U,	// MVE_VADDVu16acc
    16384U,	// MVE_VADDVu16no_acc
    17792U,	// MVE_VADDVu32acc
    16384U,	// MVE_VADDVu32no_acc
    17792U,	// MVE_VADDVu8acc
    16384U,	// MVE_VADDVu8no_acc
    0U,	// MVE_VADD_qr_f16
    0U,	// MVE_VADD_qr_f32
    0U,	// MVE_VADD_qr_i16
    0U,	// MVE_VADD_qr_i32
    0U,	// MVE_VADD_qr_i8
    0U,	// MVE_VADDf16
    0U,	// MVE_VADDf32
    0U,	// MVE_VADDi16
    0U,	// MVE_VADDi32
    0U,	// MVE_VADDi8
    0U,	// MVE_VAND
    0U,	// MVE_VBIC
    3712U,	// MVE_VBICimmi16
    3712U,	// MVE_VBICimmi32
    0U,	// MVE_VBRSR16
    0U,	// MVE_VBRSR32
    0U,	// MVE_VBRSR8
    33554432U,	// MVE_VCADDf16
    33554432U,	// MVE_VCADDf32
    33554432U,	// MVE_VCADDi16
    33554432U,	// MVE_VCADDi32
    33554432U,	// MVE_VCADDi8
    16384U,	// MVE_VCLSs16
    16384U,	// MVE_VCLSs32
    16384U,	// MVE_VCLSs8
    16384U,	// MVE_VCLZs16
    16384U,	// MVE_VCLZs32
    16384U,	// MVE_VCLZs8
    42468736U,	// MVE_VCMLAf16
    42468736U,	// MVE_VCMLAf32
    0U,	// MVE_VCMPf16
    0U,	// MVE_VCMPf16r
    0U,	// MVE_VCMPf32
    0U,	// MVE_VCMPf32r
    0U,	// MVE_VCMPi16
    0U,	// MVE_VCMPi16r
    0U,	// MVE_VCMPi32
    0U,	// MVE_VCMPi32r
    0U,	// MVE_VCMPi8
    0U,	// MVE_VCMPi8r
    0U,	// MVE_VCMPs16
    0U,	// MVE_VCMPs16r
    0U,	// MVE_VCMPs32
    0U,	// MVE_VCMPs32r
    0U,	// MVE_VCMPs8
    0U,	// MVE_VCMPs8r
    0U,	// MVE_VCMPu16
    0U,	// MVE_VCMPu16r
    0U,	// MVE_VCMPu32
    0U,	// MVE_VCMPu32r
    0U,	// MVE_VCMPu8
    0U,	// MVE_VCMPu8r
    33554432U,	// MVE_VCMULf16
    33554432U,	// MVE_VCMULf32
    2U,	// MVE_VCTP16
    2U,	// MVE_VCTP32
    2U,	// MVE_VCTP64
    2U,	// MVE_VCTP8
    2U,	// MVE_VCVTf16f32bh
    2U,	// MVE_VCVTf16f32th
    534U,	// MVE_VCVTf16s16_fix
    0U,	// MVE_VCVTf16s16n
    534U,	// MVE_VCVTf16u16_fix
    0U,	// MVE_VCVTf16u16n
    2U,	// MVE_VCVTf32f16bh
    2U,	// MVE_VCVTf32f16th
    534U,	// MVE_VCVTf32s32_fix
    0U,	// MVE_VCVTf32s32n
    534U,	// MVE_VCVTf32u32_fix
    0U,	// MVE_VCVTf32u32n
    534U,	// MVE_VCVTs16f16_fix
    0U,	// MVE_VCVTs16f16a
    0U,	// MVE_VCVTs16f16m
    0U,	// MVE_VCVTs16f16n
    0U,	// MVE_VCVTs16f16p
    0U,	// MVE_VCVTs16f16z
    534U,	// MVE_VCVTs32f32_fix
    0U,	// MVE_VCVTs32f32a
    0U,	// MVE_VCVTs32f32m
    0U,	// MVE_VCVTs32f32n
    0U,	// MVE_VCVTs32f32p
    0U,	// MVE_VCVTs32f32z
    534U,	// MVE_VCVTu16f16_fix
    0U,	// MVE_VCVTu16f16a
    0U,	// MVE_VCVTu16f16m
    0U,	// MVE_VCVTu16f16n
    0U,	// MVE_VCVTu16f16p
    0U,	// MVE_VCVTu16f16z
    534U,	// MVE_VCVTu32f32_fix
    0U,	// MVE_VCVTu32f32a
    0U,	// MVE_VCVTu32f32m
    0U,	// MVE_VCVTu32f32n
    0U,	// MVE_VCVTu32f32p
    0U,	// MVE_VCVTu32f32z
    8912896U,	// MVE_VDDUPu16
    8912896U,	// MVE_VDDUPu32
    8912896U,	// MVE_VDDUPu8
    16384U,	// MVE_VDUP16
    16384U,	// MVE_VDUP32
    16384U,	// MVE_VDUP8
    42467328U,	// MVE_VDWDUPu16
    42467328U,	// MVE_VDWDUPu32
    42467328U,	// MVE_VDWDUPu8
    0U,	// MVE_VEOR
    8914304U,	// MVE_VFMA_qr_Sf16
    8914304U,	// MVE_VFMA_qr_Sf32
    8914304U,	// MVE_VFMA_qr_f16
    8914304U,	// MVE_VFMA_qr_f32
    8914304U,	// MVE_VFMAf16
    8914304U,	// MVE_VFMAf32
    8914304U,	// MVE_VFMSf16
    8914304U,	// MVE_VFMSf32
    0U,	// MVE_VHADD_qr_s16
    0U,	// MVE_VHADD_qr_s32
    0U,	// MVE_VHADD_qr_s8
    0U,	// MVE_VHADD_qr_u16
    0U,	// MVE_VHADD_qr_u32
    0U,	// MVE_VHADD_qr_u8
    0U,	// MVE_VHADDs16
    0U,	// MVE_VHADDs32
    0U,	// MVE_VHADDs8
    0U,	// MVE_VHADDu16
    0U,	// MVE_VHADDu32
    0U,	// MVE_VHADDu8
    33554432U,	// MVE_VHCADDs16
    33554432U,	// MVE_VHCADDs32
    33554432U,	// MVE_VHCADDs8
    0U,	// MVE_VHSUB_qr_s16
    0U,	// MVE_VHSUB_qr_s32
    0U,	// MVE_VHSUB_qr_s8
    0U,	// MVE_VHSUB_qr_u16
    0U,	// MVE_VHSUB_qr_u32
    0U,	// MVE_VHSUB_qr_u8
    0U,	// MVE_VHSUBs16
    0U,	// MVE_VHSUBs32
    0U,	// MVE_VHSUBs8
    0U,	// MVE_VHSUBu16
    0U,	// MVE_VHSUBu32
    0U,	// MVE_VHSUBu8
    8912896U,	// MVE_VIDUPu16
    8912896U,	// MVE_VIDUPu32
    8912896U,	// MVE_VIDUPu8
    42467328U,	// MVE_VIWDUPu16
    42467328U,	// MVE_VIWDUPu32
    42467328U,	// MVE_VIWDUPu8
    0U,	// MVE_VLD20_16
    0U,	// MVE_VLD20_16_wb
    0U,	// MVE_VLD20_32
    0U,	// MVE_VLD20_32_wb
    0U,	// MVE_VLD20_8
    0U,	// MVE_VLD20_8_wb
    0U,	// MVE_VLD21_16
    0U,	// MVE_VLD21_16_wb
    0U,	// MVE_VLD21_32
    0U,	// MVE_VLD21_32_wb
    0U,	// MVE_VLD21_8
    0U,	// MVE_VLD21_8_wb
    0U,	// MVE_VLD40_16
    0U,	// MVE_VLD40_16_wb
    0U,	// MVE_VLD40_32
    0U,	// MVE_VLD40_32_wb
    0U,	// MVE_VLD40_8
    0U,	// MVE_VLD40_8_wb
    0U,	// MVE_VLD41_16
    0U,	// MVE_VLD41_16_wb
    0U,	// MVE_VLD41_32
    0U,	// MVE_VLD41_32_wb
    0U,	// MVE_VLD41_8
    0U,	// MVE_VLD41_8_wb
    0U,	// MVE_VLD42_16
    0U,	// MVE_VLD42_16_wb
    0U,	// MVE_VLD42_32
    0U,	// MVE_VLD42_32_wb
    0U,	// MVE_VLD42_8
    0U,	// MVE_VLD42_8_wb
    0U,	// MVE_VLD43_16
    0U,	// MVE_VLD43_16_wb
    0U,	// MVE_VLD43_32
    0U,	// MVE_VLD43_32_wb
    0U,	// MVE_VLD43_8
    0U,	// MVE_VLD43_8_wb
    3840U,	// MVE_VLDRBS16
    100736U,	// MVE_VLDRBS16_post
    3968U,	// MVE_VLDRBS16_pre
    4096U,	// MVE_VLDRBS16_rq
    3840U,	// MVE_VLDRBS32
    100736U,	// MVE_VLDRBS32_post
    3968U,	// MVE_VLDRBS32_pre
    4096U,	// MVE_VLDRBS32_rq
    3840U,	// MVE_VLDRBU16
    100736U,	// MVE_VLDRBU16_post
    3968U,	// MVE_VLDRBU16_pre
    4096U,	// MVE_VLDRBU16_rq
    3840U,	// MVE_VLDRBU32
    100736U,	// MVE_VLDRBU32_post
    3968U,	// MVE_VLDRBU32_pre
    4096U,	// MVE_VLDRBU32_rq
    3840U,	// MVE_VLDRBU8
    100736U,	// MVE_VLDRBU8_post
    4224U,	// MVE_VLDRBU8_pre
    4096U,	// MVE_VLDRBU8_rq
    3840U,	// MVE_VLDRDU64_qi
    3968U,	// MVE_VLDRDU64_qi_pre
    4352U,	// MVE_VLDRDU64_rq
    4096U,	// MVE_VLDRDU64_rq_u
    3840U,	// MVE_VLDRHS32
    100736U,	// MVE_VLDRHS32_post
    3968U,	// MVE_VLDRHS32_pre
    4480U,	// MVE_VLDRHS32_rq
    4096U,	// MVE_VLDRHS32_rq_u
    3840U,	// MVE_VLDRHU16
    100736U,	// MVE_VLDRHU16_post
    4224U,	// MVE_VLDRHU16_pre
    4480U,	// MVE_VLDRHU16_rq
    4096U,	// MVE_VLDRHU16_rq_u
    3840U,	// MVE_VLDRHU32
    100736U,	// MVE_VLDRHU32_post
    3968U,	// MVE_VLDRHU32_pre
    4480U,	// MVE_VLDRHU32_rq
    4096U,	// MVE_VLDRHU32_rq_u
    3840U,	// MVE_VLDRWU32
    100736U,	// MVE_VLDRWU32_post
    4224U,	// MVE_VLDRWU32_pre
    3840U,	// MVE_VLDRWU32_qi
    3968U,	// MVE_VLDRWU32_qi_pre
    4608U,	// MVE_VLDRWU32_rq
    4096U,	// MVE_VLDRWU32_rq_u
    17792U,	// MVE_VMAXAVs16
    17792U,	// MVE_VMAXAVs32
    17792U,	// MVE_VMAXAVs8
    17792U,	// MVE_VMAXAs16
    17792U,	// MVE_VMAXAs32
    17792U,	// MVE_VMAXAs8
    17792U,	// MVE_VMAXNMAVf16
    17792U,	// MVE_VMAXNMAVf32
    17792U,	// MVE_VMAXNMAf16
    17792U,	// MVE_VMAXNMAf32
    17792U,	// MVE_VMAXNMVf16
    17792U,	// MVE_VMAXNMVf32
    0U,	// MVE_VMAXNMf16
    0U,	// MVE_VMAXNMf32
    17792U,	// MVE_VMAXVs16
    17792U,	// MVE_VMAXVs32
    17792U,	// MVE_VMAXVs8
    17792U,	// MVE_VMAXVu16
    17792U,	// MVE_VMAXVu32
    17792U,	// MVE_VMAXVu8
    0U,	// MVE_VMAXs16
    0U,	// MVE_VMAXs32
    0U,	// MVE_VMAXs8
    0U,	// MVE_VMAXu16
    0U,	// MVE_VMAXu32
    0U,	// MVE_VMAXu8
    17792U,	// MVE_VMINAVs16
    17792U,	// MVE_VMINAVs32
    17792U,	// MVE_VMINAVs8
    17792U,	// MVE_VMINAs16
    17792U,	// MVE_VMINAs32
    17792U,	// MVE_VMINAs8
    17792U,	// MVE_VMINNMAVf16
    17792U,	// MVE_VMINNMAVf32
    17792U,	// MVE_VMINNMAf16
    17792U,	// MVE_VMINNMAf32
    17792U,	// MVE_VMINNMVf16
    17792U,	// MVE_VMINNMVf32
    0U,	// MVE_VMINNMf16
    0U,	// MVE_VMINNMf32
    17792U,	// MVE_VMINVs16
    17792U,	// MVE_VMINVs32
    17792U,	// MVE_VMINVs8
    17792U,	// MVE_VMINVu16
    17792U,	// MVE_VMINVu32
    17792U,	// MVE_VMINVu8
    0U,	// MVE_VMINs16
    0U,	// MVE_VMINs32
    0U,	// MVE_VMINs8
    0U,	// MVE_VMINu16
    0U,	// MVE_VMINu32
    0U,	// MVE_VMINu8
    8914304U,	// MVE_VMLADAVas16
    8914304U,	// MVE_VMLADAVas32
    8914304U,	// MVE_VMLADAVas8
    8914304U,	// MVE_VMLADAVau16
    8914304U,	// MVE_VMLADAVau32
    8914304U,	// MVE_VMLADAVau8
    8914304U,	// MVE_VMLADAVaxs16
    8914304U,	// MVE_VMLADAVaxs32
    8914304U,	// MVE_VMLADAVaxs8
    0U,	// MVE_VMLADAVs16
    0U,	// MVE_VMLADAVs32
    0U,	// MVE_VMLADAVs8
    0U,	// MVE_VMLADAVu16
    0U,	// MVE_VMLADAVu32
    0U,	// MVE_VMLADAVu8
    0U,	// MVE_VMLADAVxs16
    0U,	// MVE_VMLADAVxs32
    0U,	// MVE_VMLADAVxs8
    34078720U,	// MVE_VMLALDAVas16
    34078720U,	// MVE_VMLALDAVas32
    34078720U,	// MVE_VMLALDAVau16
    34078720U,	// MVE_VMLALDAVau32
    34078720U,	// MVE_VMLALDAVaxs16
    34078720U,	// MVE_VMLALDAVaxs32
    33554432U,	// MVE_VMLALDAVs16
    33554432U,	// MVE_VMLALDAVs32
    33554432U,	// MVE_VMLALDAVu16
    33554432U,	// MVE_VMLALDAVu32
    33554432U,	// MVE_VMLALDAVxs16
    33554432U,	// MVE_VMLALDAVxs32
    8914304U,	// MVE_VMLAS_qr_s16
    8914304U,	// MVE_VMLAS_qr_s32
    8914304U,	// MVE_VMLAS_qr_s8
    8914304U,	// MVE_VMLAS_qr_u16
    8914304U,	// MVE_VMLAS_qr_u32
    8914304U,	// MVE_VMLAS_qr_u8
    8914304U,	// MVE_VMLA_qr_s16
    8914304U,	// MVE_VMLA_qr_s32
    8914304U,	// MVE_VMLA_qr_s8
    8914304U,	// MVE_VMLA_qr_u16
    8914304U,	// MVE_VMLA_qr_u32
    8914304U,	// MVE_VMLA_qr_u8
    8914304U,	// MVE_VMLSDAVas16
    8914304U,	// MVE_VMLSDAVas32
    8914304U,	// MVE_VMLSDAVas8
    8914304U,	// MVE_VMLSDAVaxs16
    8914304U,	// MVE_VMLSDAVaxs32
    8914304U,	// MVE_VMLSDAVaxs8
    0U,	// MVE_VMLSDAVs16
    0U,	// MVE_VMLSDAVs32
    0U,	// MVE_VMLSDAVs8
    0U,	// MVE_VMLSDAVxs16
    0U,	// MVE_VMLSDAVxs32
    0U,	// MVE_VMLSDAVxs8
    34078720U,	// MVE_VMLSLDAVas16
    34078720U,	// MVE_VMLSLDAVas32
    34078720U,	// MVE_VMLSLDAVaxs16
    34078720U,	// MVE_VMLSLDAVaxs32
    33554432U,	// MVE_VMLSLDAVs16
    33554432U,	// MVE_VMLSLDAVs32
    33554432U,	// MVE_VMLSLDAVxs16
    33554432U,	// MVE_VMLSLDAVxs32
    16384U,	// MVE_VMOVLs16bh
    16384U,	// MVE_VMOVLs16th
    16384U,	// MVE_VMOVLs8bh
    16384U,	// MVE_VMOVLs8th
    16384U,	// MVE_VMOVLu16bh
    16384U,	// MVE_VMOVLu16th
    16384U,	// MVE_VMOVLu8bh
    16384U,	// MVE_VMOVLu8th
    17792U,	// MVE_VMOVNi16bh
    17792U,	// MVE_VMOVNi16th
    17792U,	// MVE_VMOVNi32bh
    17792U,	// MVE_VMOVNi32th
    114688U,	// MVE_VMOV_from_lane_32
    114688U,	// MVE_VMOV_from_lane_s16
    114688U,	// MVE_VMOV_from_lane_s8
    114688U,	// MVE_VMOV_from_lane_u16
    114688U,	// MVE_VMOV_from_lane_u8
    9569048U,	// MVE_VMOV_q_rr
    134217728U,	// MVE_VMOV_rr_q
    26U,	// MVE_VMOV_to_lane_16
    26U,	// MVE_VMOV_to_lane_32
    26U,	// MVE_VMOV_to_lane_8
    1792U,	// MVE_VMOVimmf32
    4736U,	// MVE_VMOVimmi16
    4736U,	// MVE_VMOVimmi32
    0U,	// MVE_VMOVimmi64
    4736U,	// MVE_VMOVimmi8
    0U,	// MVE_VMULHs16
    0U,	// MVE_VMULHs32
    0U,	// MVE_VMULHs8
    0U,	// MVE_VMULHu16
    0U,	// MVE_VMULHu32
    0U,	// MVE_VMULHu8
    0U,	// MVE_VMULLBp16
    0U,	// MVE_VMULLBp8
    0U,	// MVE_VMULLBs16
    0U,	// MVE_VMULLBs32
    0U,	// MVE_VMULLBs8
    0U,	// MVE_VMULLBu16
    0U,	// MVE_VMULLBu32
    0U,	// MVE_VMULLBu8
    0U,	// MVE_VMULLTp16
    0U,	// MVE_VMULLTp8
    0U,	// MVE_VMULLTs16
    0U,	// MVE_VMULLTs32
    0U,	// MVE_VMULLTs8
    0U,	// MVE_VMULLTu16
    0U,	// MVE_VMULLTu32
    0U,	// MVE_VMULLTu8
    0U,	// MVE_VMUL_qr_f16
    0U,	// MVE_VMUL_qr_f32
    0U,	// MVE_VMUL_qr_i16
    0U,	// MVE_VMUL_qr_i32
    0U,	// MVE_VMUL_qr_i8
    0U,	// MVE_VMULf16
    0U,	// MVE_VMULf32
    0U,	// MVE_VMULi16
    0U,	// MVE_VMULi32
    0U,	// MVE_VMULi8
    16384U,	// MVE_VMVN
    4736U,	// MVE_VMVNimmi16
    4736U,	// MVE_VMVNimmi32
    16384U,	// MVE_VNEGf16
    16384U,	// MVE_VNEGf32
    16384U,	// MVE_VNEGs16
    16384U,	// MVE_VNEGs32
    16384U,	// MVE_VNEGs8
    0U,	// MVE_VORN
    0U,	// MVE_VORR
    3712U,	// MVE_VORRimmi16
    3712U,	// MVE_VORRimmi32
    0U,	// MVE_VPNOT
    0U,	// MVE_VPSEL
    0U,	// MVE_VPST
    0U,	// MVE_VPTv16i8
    0U,	// MVE_VPTv16i8r
    0U,	// MVE_VPTv16s8
    0U,	// MVE_VPTv16s8r
    0U,	// MVE_VPTv16u8
    0U,	// MVE_VPTv16u8r
    0U,	// MVE_VPTv4f32
    0U,	// MVE_VPTv4f32r
    0U,	// MVE_VPTv4i32
    0U,	// MVE_VPTv4i32r
    0U,	// MVE_VPTv4s32
    0U,	// MVE_VPTv4s32r
    0U,	// MVE_VPTv4u32
    0U,	// MVE_VPTv4u32r
    0U,	// MVE_VPTv8f16
    0U,	// MVE_VPTv8f16r
    0U,	// MVE_VPTv8i16
    0U,	// MVE_VPTv8i16r
    0U,	// MVE_VPTv8s16
    0U,	// MVE_VPTv8s16r
    0U,	// MVE_VPTv8u16
    0U,	// MVE_VPTv8u16r
    16384U,	// MVE_VQABSs16
    16384U,	// MVE_VQABSs32
    16384U,	// MVE_VQABSs8
    0U,	// MVE_VQADD_qr_s16
    0U,	// MVE_VQADD_qr_s32
    0U,	// MVE_VQADD_qr_s8
    0U,	// MVE_VQADD_qr_u16
    0U,	// MVE_VQADD_qr_u32
    0U,	// MVE_VQADD_qr_u8
    0U,	// MVE_VQADDs16
    0U,	// MVE_VQADDs32
    0U,	// MVE_VQADDs8
    0U,	// MVE_VQADDu16
    0U,	// MVE_VQADDu32
    0U,	// MVE_VQADDu8
    8914304U,	// MVE_VQDMLADHXs16
    8914304U,	// MVE_VQDMLADHXs32
    8914304U,	// MVE_VQDMLADHXs8
    8914304U,	// MVE_VQDMLADHs16
    8914304U,	// MVE_VQDMLADHs32
    8914304U,	// MVE_VQDMLADHs8
    8914304U,	// MVE_VQDMLAH_qrs16
    8914304U,	// MVE_VQDMLAH_qrs32
    8914304U,	// MVE_VQDMLAH_qrs8
    8914304U,	// MVE_VQDMLASH_qrs16
    8914304U,	// MVE_VQDMLASH_qrs32
    8914304U,	// MVE_VQDMLASH_qrs8
    8914304U,	// MVE_VQDMLSDHXs16
    8914304U,	// MVE_VQDMLSDHXs32
    8914304U,	// MVE_VQDMLSDHXs8
    8914304U,	// MVE_VQDMLSDHs16
    8914304U,	// MVE_VQDMLSDHs32
    8914304U,	// MVE_VQDMLSDHs8
    0U,	// MVE_VQDMULH_qr_s16
    0U,	// MVE_VQDMULH_qr_s32
    0U,	// MVE_VQDMULH_qr_s8
    0U,	// MVE_VQDMULHi16
    0U,	// MVE_VQDMULHi32
    0U,	// MVE_VQDMULHi8
    0U,	// MVE_VQDMULL_qr_s16bh
    0U,	// MVE_VQDMULL_qr_s16th
    0U,	// MVE_VQDMULL_qr_s32bh
    0U,	// MVE_VQDMULL_qr_s32th
    0U,	// MVE_VQDMULLs16bh
    0U,	// MVE_VQDMULLs16th
    0U,	// MVE_VQDMULLs32bh
    0U,	// MVE_VQDMULLs32th
    17792U,	// MVE_VQMOVNs16bh
    17792U,	// MVE_VQMOVNs16th
    17792U,	// MVE_VQMOVNs32bh
    17792U,	// MVE_VQMOVNs32th
    17792U,	// MVE_VQMOVNu16bh
    17792U,	// MVE_VQMOVNu16th
    17792U,	// MVE_VQMOVNu32bh
    17792U,	// MVE_VQMOVNu32th
    17792U,	// MVE_VQMOVUNs16bh
    17792U,	// MVE_VQMOVUNs16th
    17792U,	// MVE_VQMOVUNs32bh
    17792U,	// MVE_VQMOVUNs32th
    16384U,	// MVE_VQNEGs16
    16384U,	// MVE_VQNEGs32
    16384U,	// MVE_VQNEGs8
    8914304U,	// MVE_VQRDMLADHXs16
    8914304U,	// MVE_VQRDMLADHXs32
    8914304U,	// MVE_VQRDMLADHXs8
    8914304U,	// MVE_VQRDMLADHs16
    8914304U,	// MVE_VQRDMLADHs32
    8914304U,	// MVE_VQRDMLADHs8
    8914304U,	// MVE_VQRDMLAH_qrs16
    8914304U,	// MVE_VQRDMLAH_qrs32
    8914304U,	// MVE_VQRDMLAH_qrs8
    8914304U,	// MVE_VQRDMLASH_qrs16
    8914304U,	// MVE_VQRDMLASH_qrs32
    8914304U,	// MVE_VQRDMLASH_qrs8
    8914304U,	// MVE_VQRDMLSDHXs16
    8914304U,	// MVE_VQRDMLSDHXs32
    8914304U,	// MVE_VQRDMLSDHXs8
    8914304U,	// MVE_VQRDMLSDHs16
    8914304U,	// MVE_VQRDMLSDHs32
    8914304U,	// MVE_VQRDMLSDHs8
    0U,	// MVE_VQRDMULH_qr_s16
    0U,	// MVE_VQRDMULH_qr_s32
    0U,	// MVE_VQRDMULH_qr_s8
    0U,	// MVE_VQRDMULHi16
    0U,	// MVE_VQRDMULHi32
    0U,	// MVE_VQRDMULHi8
    0U,	// MVE_VQRSHL_by_vecs16
    0U,	// MVE_VQRSHL_by_vecs32
    0U,	// MVE_VQRSHL_by_vecs8
    0U,	// MVE_VQRSHL_by_vecu16
    0U,	// MVE_VQRSHL_by_vecu32
    0U,	// MVE_VQRSHL_by_vecu8
    17792U,	// MVE_VQRSHL_qrs16
    17792U,	// MVE_VQRSHL_qrs32
    17792U,	// MVE_VQRSHL_qrs8
    17792U,	// MVE_VQRSHL_qru16
    17792U,	// MVE_VQRSHL_qru32
    17792U,	// MVE_VQRSHL_qru8
    8914304U,	// MVE_VQRSHRNbhs16
    8914304U,	// MVE_VQRSHRNbhs32
    8914304U,	// MVE_VQRSHRNbhu16
    8914304U,	// MVE_VQRSHRNbhu32
    8914304U,	// MVE_VQRSHRNths16
    8914304U,	// MVE_VQRSHRNths32
    8914304U,	// MVE_VQRSHRNthu16
    8914304U,	// MVE_VQRSHRNthu32
    8914304U,	// MVE_VQRSHRUNs16bh
    8914304U,	// MVE_VQRSHRUNs16th
    8914304U,	// MVE_VQRSHRUNs32bh
    8914304U,	// MVE_VQRSHRUNs32th
    0U,	// MVE_VQSHLU_imms16
    0U,	// MVE_VQSHLU_imms32
    0U,	// MVE_VQSHLU_imms8
    0U,	// MVE_VQSHL_by_vecs16
    0U,	// MVE_VQSHL_by_vecs32
    0U,	// MVE_VQSHL_by_vecs8
    0U,	// MVE_VQSHL_by_vecu16
    0U,	// MVE_VQSHL_by_vecu32
    0U,	// MVE_VQSHL_by_vecu8
    17792U,	// MVE_VQSHL_qrs16
    17792U,	// MVE_VQSHL_qrs32
    17792U,	// MVE_VQSHL_qrs8
    17792U,	// MVE_VQSHL_qru16
    17792U,	// MVE_VQSHL_qru32
    17792U,	// MVE_VQSHL_qru8
    0U,	// MVE_VQSHLimms16
    0U,	// MVE_VQSHLimms32
    0U,	// MVE_VQSHLimms8
    0U,	// MVE_VQSHLimmu16
    0U,	// MVE_VQSHLimmu32
    0U,	// MVE_VQSHLimmu8
    8914304U,	// MVE_VQSHRNbhs16
    8914304U,	// MVE_VQSHRNbhs32
    8914304U,	// MVE_VQSHRNbhu16
    8914304U,	// MVE_VQSHRNbhu32
    8914304U,	// MVE_VQSHRNths16
    8914304U,	// MVE_VQSHRNths32
    8914304U,	// MVE_VQSHRNthu16
    8914304U,	// MVE_VQSHRNthu32
    8914304U,	// MVE_VQSHRUNs16bh
    8914304U,	// MVE_VQSHRUNs16th
    8914304U,	// MVE_VQSHRUNs32bh
    8914304U,	// MVE_VQSHRUNs32th
    0U,	// MVE_VQSUB_qr_s16
    0U,	// MVE_VQSUB_qr_s32
    0U,	// MVE_VQSUB_qr_s8
    0U,	// MVE_VQSUB_qr_u16
    0U,	// MVE_VQSUB_qr_u32
    0U,	// MVE_VQSUB_qr_u8
    0U,	// MVE_VQSUBs16
    0U,	// MVE_VQSUBs32
    0U,	// MVE_VQSUBs8
    0U,	// MVE_VQSUBu16
    0U,	// MVE_VQSUBu32
    0U,	// MVE_VQSUBu8
    16384U,	// MVE_VREV16_8
    16384U,	// MVE_VREV32_16
    16384U,	// MVE_VREV32_8
    16384U,	// MVE_VREV64_16
    16384U,	// MVE_VREV64_32
    16384U,	// MVE_VREV64_8
    0U,	// MVE_VRHADDs16
    0U,	// MVE_VRHADDs32
    0U,	// MVE_VRHADDs8
    0U,	// MVE_VRHADDu16
    0U,	// MVE_VRHADDu32
    0U,	// MVE_VRHADDu8
    16384U,	// MVE_VRINTf16A
    16384U,	// MVE_VRINTf16M
    16384U,	// MVE_VRINTf16N
    16384U,	// MVE_VRINTf16P
    16384U,	// MVE_VRINTf16X
    16384U,	// MVE_VRINTf16Z
    16384U,	// MVE_VRINTf32A
    16384U,	// MVE_VRINTf32M
    16384U,	// MVE_VRINTf32N
    16384U,	// MVE_VRINTf32P
    16384U,	// MVE_VRINTf32X
    16384U,	// MVE_VRINTf32Z
    34078720U,	// MVE_VRMLALDAVHas32
    34078720U,	// MVE_VRMLALDAVHau32
    34078720U,	// MVE_VRMLALDAVHaxs32
    33554432U,	// MVE_VRMLALDAVHs32
    33554432U,	// MVE_VRMLALDAVHu32
    33554432U,	// MVE_VRMLALDAVHxs32
    34078720U,	// MVE_VRMLSLDAVHas32
    34078720U,	// MVE_VRMLSLDAVHaxs32
    33554432U,	// MVE_VRMLSLDAVHs32
    33554432U,	// MVE_VRMLSLDAVHxs32
    0U,	// MVE_VRMULHs16
    0U,	// MVE_VRMULHs32
    0U,	// MVE_VRMULHs8
    0U,	// MVE_VRMULHu16
    0U,	// MVE_VRMULHu32
    0U,	// MVE_VRMULHu8
    0U,	// MVE_VRSHL_by_vecs16
    0U,	// MVE_VRSHL_by_vecs32
    0U,	// MVE_VRSHL_by_vecs8
    0U,	// MVE_VRSHL_by_vecu16
    0U,	// MVE_VRSHL_by_vecu32
    0U,	// MVE_VRSHL_by_vecu8
    17792U,	// MVE_VRSHL_qrs16
    17792U,	// MVE_VRSHL_qrs32
    17792U,	// MVE_VRSHL_qrs8
    17792U,	// MVE_VRSHL_qru16
    17792U,	// MVE_VRSHL_qru32
    17792U,	// MVE_VRSHL_qru8
    8914304U,	// MVE_VRSHRNi16bh
    8914304U,	// MVE_VRSHRNi16th
    8914304U,	// MVE_VRSHRNi32bh
    8914304U,	// MVE_VRSHRNi32th
    0U,	// MVE_VRSHR_imms16
    0U,	// MVE_VRSHR_imms32
    0U,	// MVE_VRSHR_imms8
    0U,	// MVE_VRSHR_immu16
    0U,	// MVE_VRSHR_immu32
    0U,	// MVE_VRSHR_immu8
    8914304U,	// MVE_VSBC
    8914304U,	// MVE_VSBCI
    524672U,	// MVE_VSHLC
    0U,	// MVE_VSHLL_imms16bh
    0U,	// MVE_VSHLL_imms16th
    0U,	// MVE_VSHLL_imms8bh
    0U,	// MVE_VSHLL_imms8th
    0U,	// MVE_VSHLL_immu16bh
    0U,	// MVE_VSHLL_immu16th
    0U,	// MVE_VSHLL_immu8bh
    0U,	// MVE_VSHLL_immu8th
    147456U,	// MVE_VSHLL_lws16bh
    147456U,	// MVE_VSHLL_lws16th
    163840U,	// MVE_VSHLL_lws8bh
    163840U,	// MVE_VSHLL_lws8th
    147456U,	// MVE_VSHLL_lwu16bh
    147456U,	// MVE_VSHLL_lwu16th
    163840U,	// MVE_VSHLL_lwu8bh
    163840U,	// MVE_VSHLL_lwu8th
    0U,	// MVE_VSHL_by_vecs16
    0U,	// MVE_VSHL_by_vecs32
    0U,	// MVE_VSHL_by_vecs8
    0U,	// MVE_VSHL_by_vecu16
    0U,	// MVE_VSHL_by_vecu32
    0U,	// MVE_VSHL_by_vecu8
    0U,	// MVE_VSHL_immi16
    0U,	// MVE_VSHL_immi32
    0U,	// MVE_VSHL_immi8
    17792U,	// MVE_VSHL_qrs16
    17792U,	// MVE_VSHL_qrs32
    17792U,	// MVE_VSHL_qrs8
    17792U,	// MVE_VSHL_qru16
    17792U,	// MVE_VSHL_qru32
    17792U,	// MVE_VSHL_qru8
    8914304U,	// MVE_VSHRNi16bh
    8914304U,	// MVE_VSHRNi16th
    8914304U,	// MVE_VSHRNi32bh
    8914304U,	// MVE_VSHRNi32th
    0U,	// MVE_VSHR_imms16
    0U,	// MVE_VSHR_imms32
    0U,	// MVE_VSHR_imms8
    0U,	// MVE_VSHR_immu16
    0U,	// MVE_VSHR_immu32
    0U,	// MVE_VSHR_immu8
    8914304U,	// MVE_VSLIimm16
    8914304U,	// MVE_VSLIimm32
    8914304U,	// MVE_VSLIimm8
    8914304U,	// MVE_VSRIimm16
    8914304U,	// MVE_VSRIimm32
    8914304U,	// MVE_VSRIimm8
    0U,	// MVE_VST20_16
    0U,	// MVE_VST20_16_wb
    0U,	// MVE_VST20_32
    0U,	// MVE_VST20_32_wb
    0U,	// MVE_VST20_8
    0U,	// MVE_VST20_8_wb
    0U,	// MVE_VST21_16
    0U,	// MVE_VST21_16_wb
    0U,	// MVE_VST21_32
    0U,	// MVE_VST21_32_wb
    0U,	// MVE_VST21_8
    0U,	// MVE_VST21_8_wb
    0U,	// MVE_VST40_16
    0U,	// MVE_VST40_16_wb
    0U,	// MVE_VST40_32
    0U,	// MVE_VST40_32_wb
    0U,	// MVE_VST40_8
    0U,	// MVE_VST40_8_wb
    0U,	// MVE_VST41_16
    0U,	// MVE_VST41_16_wb
    0U,	// MVE_VST41_32
    0U,	// MVE_VST41_32_wb
    0U,	// MVE_VST41_8
    0U,	// MVE_VST41_8_wb
    0U,	// MVE_VST42_16
    0U,	// MVE_VST42_16_wb
    0U,	// MVE_VST42_32
    0U,	// MVE_VST42_32_wb
    0U,	// MVE_VST42_8
    0U,	// MVE_VST42_8_wb
    0U,	// MVE_VST43_16
    0U,	// MVE_VST43_16_wb
    0U,	// MVE_VST43_32
    0U,	// MVE_VST43_32_wb
    0U,	// MVE_VST43_8
    0U,	// MVE_VST43_8_wb
    3840U,	// MVE_VSTRB16
    100736U,	// MVE_VSTRB16_post
    3968U,	// MVE_VSTRB16_pre
    4096U,	// MVE_VSTRB16_rq
    3840U,	// MVE_VSTRB32
    100736U,	// MVE_VSTRB32_post
    3968U,	// MVE_VSTRB32_pre
    4096U,	// MVE_VSTRB32_rq
    4096U,	// MVE_VSTRB8_rq
    3840U,	// MVE_VSTRBU8
    100736U,	// MVE_VSTRBU8_post
    4224U,	// MVE_VSTRBU8_pre
    3840U,	// MVE_VSTRD64_qi
    3968U,	// MVE_VSTRD64_qi_pre
    4352U,	// MVE_VSTRD64_rq
    4096U,	// MVE_VSTRD64_rq_u
    4480U,	// MVE_VSTRH16_rq
    4096U,	// MVE_VSTRH16_rq_u
    3840U,	// MVE_VSTRH32
    100736U,	// MVE_VSTRH32_post
    3968U,	// MVE_VSTRH32_pre
    4480U,	// MVE_VSTRH32_rq
    4096U,	// MVE_VSTRH32_rq_u
    3840U,	// MVE_VSTRHU16
    100736U,	// MVE_VSTRHU16_post
    4224U,	// MVE_VSTRHU16_pre
    3840U,	// MVE_VSTRW32_qi
    3968U,	// MVE_VSTRW32_qi_pre
    4608U,	// MVE_VSTRW32_rq
    4096U,	// MVE_VSTRW32_rq_u
    3840U,	// MVE_VSTRWU32
    100736U,	// MVE_VSTRWU32_post
    4224U,	// MVE_VSTRWU32_pre
    0U,	// MVE_VSUB_qr_f16
    0U,	// MVE_VSUB_qr_f32
    0U,	// MVE_VSUB_qr_i16
    0U,	// MVE_VSUB_qr_i32
    0U,	// MVE_VSUB_qr_i8
    0U,	// MVE_VSUBf16
    0U,	// MVE_VSUBf32
    0U,	// MVE_VSUBi16
    0U,	// MVE_VSUBi32
    0U,	// MVE_VSUBi8
    17792U,	// MVE_WLSTP_16
    17792U,	// MVE_WLSTP_32
    17792U,	// MVE_WLSTP_64
    17792U,	// MVE_WLSTP_8
    1536U,	// MVNi
    16384U,	// MVNr
    1664U,	// MVNsi
    1024U,	// MVNsr
    17792U,	// NEON_VMAXNMNDf
    17792U,	// NEON_VMAXNMNDh
    17792U,	// NEON_VMAXNMNQf
    17792U,	// NEON_VMAXNMNQh
    17792U,	// NEON_VMINNMNDf
    17792U,	// NEON_VMINNMNDh
    17792U,	// NEON_VMINNMNQf
    17792U,	// NEON_VMINNMNQh
    1048576U,	// ORRri
    0U,	// ORRrr
    1572864U,	// ORRrsi
    0U,	// ORRrsr
    167772160U,	// PKHBT
    201326592U,	// PKHTB
    0U,	// PLDWi12
    0U,	// PLDWrs
    0U,	// PLDi12
    0U,	// PLDrs
    0U,	// PLIi12
    0U,	// PLIrs
    0U,	// QADD
    0U,	// QADD16
    0U,	// QADD8
    0U,	// QASX
    0U,	// QDADD
    0U,	// QDSUB
    0U,	// QSAX
    0U,	// QSUB
    0U,	// QSUB16
    0U,	// QSUB8
    16384U,	// RBIT
    16384U,	// REV
    16384U,	// REV16
    16384U,	// REVSH
    0U,	// RFEDA
    0U,	// RFEDA_UPD
    0U,	// RFEDB
    0U,	// RFEDB_UPD
    0U,	// RFEIA
    0U,	// RFEIA_UPD
    0U,	// RFEIB
    0U,	// RFEIB_UPD
    1048576U,	// RSBri
    0U,	// RSBrr
    1572864U,	// RSBrsi
    0U,	// RSBrsr
    1048576U,	// RSCri
    0U,	// RSCrr
    1572864U,	// RSCrsi
    0U,	// RSCrsr
    0U,	// SADD16
    0U,	// SADD8
    0U,	// SASX
    0U,	// SB
    1048576U,	// SBCri
    0U,	// SBCrr
    1572864U,	// SBCrsi
    0U,	// SBCrsr
    33554432U,	// SBFX
    0U,	// SDIV
    0U,	// SEL
    0U,	// SETEND
    0U,	// SETPAN
    16768U,	// SHA1C
    2U,	// SHA1H
    16768U,	// SHA1M
    16768U,	// SHA1P
    16768U,	// SHA1SU0
    2U,	// SHA1SU1
    16768U,	// SHA256H
    16768U,	// SHA256H2
    2U,	// SHA256SU0
    16768U,	// SHA256SU1
    0U,	// SHADD16
    0U,	// SHADD8
    0U,	// SHASX
    0U,	// SHSAX
    0U,	// SHSUB16
    0U,	// SHSUB8
    2U,	// SMC
    33554432U,	// SMLABB
    33554432U,	// SMLABT
    33554432U,	// SMLAD
    33554432U,	// SMLADX
    0U,	// SMLAL
    33554432U,	// SMLALBB
    33554432U,	// SMLALBT
    33554432U,	// SMLALD
    33554432U,	// SMLALDX
    33554432U,	// SMLALTB
    33554432U,	// SMLALTT
    33554432U,	// SMLATB
    33554432U,	// SMLATT
    33554432U,	// SMLAWB
    33554432U,	// SMLAWT
    33554432U,	// SMLSD
    33554432U,	// SMLSDX
    33554432U,	// SMLSLD
    33554432U,	// SMLSLDX
    33554432U,	// SMMLA
    33554432U,	// SMMLAR
    33554432U,	// SMMLS
    33554432U,	// SMMLSR
    0U,	// SMMUL
    0U,	// SMMULR
    0U,	// SMUAD
    0U,	// SMUADX
    0U,	// SMULBB
    0U,	// SMULBT
    33554432U,	// SMULL
    0U,	// SMULTB
    0U,	// SMULTT
    0U,	// SMULWB
    0U,	// SMULWT
    0U,	// SMUSD
    0U,	// SMUSDX
    0U,	// SRSDA
    0U,	// SRSDA_UPD
    0U,	// SRSDB
    0U,	// SRSDB_UPD
    0U,	// SRSIA
    0U,	// SRSIA_UPD
    0U,	// SRSIB
    0U,	// SRSIB_UPD
    185088U,	// SSAT
    21248U,	// SSAT16
    0U,	// SSAX
    0U,	// SSUB16
    0U,	// SSUB8
    0U,	// STC2L_OFFSET
    2048U,	// STC2L_OPTION
    2176U,	// STC2L_POST
    0U,	// STC2L_PRE
    0U,	// STC2_OFFSET
    2048U,	// STC2_OPTION
    2176U,	// STC2_POST
    0U,	// STC2_PRE
    2318U,	// STCL_OFFSET
    2623886U,	// STCL_OPTION
    3148174U,	// STCL_POST
    2574U,	// STCL_PRE
    2318U,	// STC_OFFSET
    2623886U,	// STC_OPTION
    3148174U,	// STC_POST
    2574U,	// STC_PRE
    128U,	// STL
    128U,	// STLB
    9961472U,	// STLEX
    9961472U,	// STLEXB
    4992U,	// STLEXD
    9961472U,	// STLEXH
    128U,	// STLH
    18304U,	// STMDA
    524U,	// STMDA_UPD
    18304U,	// STMDB
    524U,	// STMDB_UPD
    18304U,	// STMIA
    524U,	// STMIA_UPD
    18304U,	// STMIB
    524U,	// STMIB_UPD
    3672448U,	// STRBT_POST_IMM
    3672448U,	// STRBT_POST_REG
    3672448U,	// STRB_POST_IMM
    3672448U,	// STRB_POST_REG
    2688U,	// STRB_PRE_IMM
    2816U,	// STRB_PRE_REG
    2944U,	// STRBi12
    3072U,	// STRBrs
    4194304U,	// STRD
    38274432U,	// STRD_POST
    5244288U,	// STRD_PRE
    9961472U,	// STREX
    9961472U,	// STREXB
    4992U,	// STREXD
    9961472U,	// STREXH
    3200U,	// STRH
    5769600U,	// STRHTi
    6293888U,	// STRHTr
    6818176U,	// STRH_POST
    3328U,	// STRH_PRE
    3672448U,	// STRT_POST_IMM
    3672448U,	// STRT_POST_REG
    3672448U,	// STR_POST_IMM
    3672448U,	// STR_POST_REG
    2688U,	// STR_PRE_IMM
    2816U,	// STR_PRE_REG
    2944U,	// STRi12
    3072U,	// STRrs
    1048576U,	// SUBri
    0U,	// SUBrr
    1572864U,	// SUBrsi
    0U,	// SUBrsr
    2U,	// SVC
    9961472U,	// SWP
    9961472U,	// SWPB
    234881024U,	// SXTAB
    234881024U,	// SXTAB16
    234881024U,	// SXTAH
    196608U,	// SXTB
    196608U,	// SXTB16
    196608U,	// SXTH
    1536U,	// TEQri
    16384U,	// TEQrr
    1664U,	// TEQrsi
    1024U,	// TEQrsr
    0U,	// TRAP
    0U,	// TRAPNaCl
    0U,	// TSB
    1536U,	// TSTri
    16384U,	// TSTrr
    1664U,	// TSTrsi
    1024U,	// TSTrsr
    0U,	// UADD16
    0U,	// UADD8
    0U,	// UASX
    33554432U,	// UBFX
    0U,	// UDF
    0U,	// UDIV
    0U,	// UHADD16
    0U,	// UHADD8
    0U,	// UHASX
    0U,	// UHSAX
    0U,	// UHSUB16
    0U,	// UHSUB8
    33554432U,	// UMAAL
    0U,	// UMLAL
    33554432U,	// UMULL
    0U,	// UQADD16
    0U,	// UQADD8
    0U,	// UQASX
    0U,	// UQSAX
    0U,	// UQSUB16
    0U,	// UQSUB8
    0U,	// USAD8
    33554432U,	// USADA8
    268435456U,	// USAT
    0U,	// USAT16
    0U,	// USAX
    0U,	// USUB16
    0U,	// USUB8
    234881024U,	// UXTAB
    234881024U,	// UXTAB16
    234881024U,	// UXTAH
    196608U,	// UXTB
    196608U,	// UXTB16
    196608U,	// UXTH
    8914304U,	// VABALsv2i64
    8914304U,	// VABALsv4i32
    8914304U,	// VABALsv8i16
    8914304U,	// VABALuv2i64
    8914304U,	// VABALuv4i32
    8914304U,	// VABALuv8i16
    8914304U,	// VABAsv16i8
    8914304U,	// VABAsv2i32
    8914304U,	// VABAsv4i16
    8914304U,	// VABAsv4i32
    8914304U,	// VABAsv8i16
    8914304U,	// VABAsv8i8
    8914304U,	// VABAuv16i8
    8914304U,	// VABAuv2i32
    8914304U,	// VABAuv4i16
    8914304U,	// VABAuv4i32
    8914304U,	// VABAuv8i16
    8914304U,	// VABAuv8i8
    0U,	// VABDLsv2i64
    0U,	// VABDLsv4i32
    0U,	// VABDLsv8i16
    0U,	// VABDLuv2i64
    0U,	// VABDLuv4i32
    0U,	// VABDLuv8i16
    0U,	// VABDfd
    0U,	// VABDfq
    0U,	// VABDhd
    0U,	// VABDhq
    0U,	// VABDsv16i8
    0U,	// VABDsv2i32
    0U,	// VABDsv4i16
    0U,	// VABDsv4i32
    0U,	// VABDsv8i16
    0U,	// VABDsv8i8
    0U,	// VABDuv16i8
    0U,	// VABDuv2i32
    0U,	// VABDuv4i16
    0U,	// VABDuv4i32
    0U,	// VABDuv8i16
    0U,	// VABDuv8i8
    520U,	// VABSD
    16384U,	// VABSH
    16384U,	// VABSS
    16384U,	// VABSfd
    16384U,	// VABSfq
    16384U,	// VABShd
    16384U,	// VABShq
    16384U,	// VABSv16i8
    16384U,	// VABSv2i32
    16384U,	// VABSv4i16
    16384U,	// VABSv4i32
    16384U,	// VABSv8i16
    16384U,	// VABSv8i8
    0U,	// VACGEfd
    0U,	// VACGEfq
    0U,	// VACGEhd
    0U,	// VACGEhq
    0U,	// VACGTfd
    0U,	// VACGTfq
    0U,	// VACGThd
    0U,	// VACGThq
    10568456U,	// VADDD
    0U,	// VADDH
    17792U,	// VADDHNv2i32
    0U,	// VADDHNv4i16
    0U,	// VADDHNv8i8
    0U,	// VADDLsv2i64
    0U,	// VADDLsv4i32
    0U,	// VADDLsv8i16
    0U,	// VADDLuv2i64
    0U,	// VADDLuv4i32
    0U,	// VADDLuv8i16
    0U,	// VADDS
    0U,	// VADDWsv2i64
    0U,	// VADDWsv4i32
    0U,	// VADDWsv8i16
    0U,	// VADDWuv2i64
    0U,	// VADDWuv4i32
    0U,	// VADDWuv8i16
    0U,	// VADDfd
    0U,	// VADDfq
    0U,	// VADDhd
    0U,	// VADDhq
    0U,	// VADDv16i8
    17792U,	// VADDv1i64
    0U,	// VADDv2i32
    17792U,	// VADDv2i64
    0U,	// VADDv4i16
    0U,	// VADDv4i32
    0U,	// VADDv8i16
    0U,	// VADDv8i8
    0U,	// VANDd
    0U,	// VANDq
    0U,	// VBICd
    4736U,	// VBICiv2i32
    4736U,	// VBICiv4i16
    4736U,	// VBICiv4i32
    4736U,	// VBICiv8i16
    0U,	// VBICq
    8914304U,	// VBIFd
    8914304U,	// VBIFq
    8914304U,	// VBITd
    8914304U,	// VBITq
    8914304U,	// VBSLd
    8914304U,	// VBSLq
    11011456U,	// VCADDv2f32
    11011456U,	// VCADDv4f16
    11011456U,	// VCADDv4f32
    11011456U,	// VCADDv8f16
    0U,	// VCEQfd
    0U,	// VCEQfq
    0U,	// VCEQhd
    0U,	// VCEQhq
    0U,	// VCEQv16i8
    0U,	// VCEQv2i32
    0U,	// VCEQv4i16
    0U,	// VCEQv4i32
    0U,	// VCEQv8i16
    0U,	// VCEQv8i8
    212992U,	// VCEQzv16i8
    212992U,	// VCEQzv2f32
    212992U,	// VCEQzv2i32
    212992U,	// VCEQzv4f16
    212992U,	// VCEQzv4f32
    212992U,	// VCEQzv4i16
    212992U,	// VCEQzv4i32
    212992U,	// VCEQzv8f16
    212992U,	// VCEQzv8i16
    212992U,	// VCEQzv8i8
    0U,	// VCGEfd
    0U,	// VCGEfq
    0U,	// VCGEhd
    0U,	// VCGEhq
    0U,	// VCGEsv16i8
    0U,	// VCGEsv2i32
    0U,	// VCGEsv4i16
    0U,	// VCGEsv4i32
    0U,	// VCGEsv8i16
    0U,	// VCGEsv8i8
    0U,	// VCGEuv16i8
    0U,	// VCGEuv2i32
    0U,	// VCGEuv4i16
    0U,	// VCGEuv4i32
    0U,	// VCGEuv8i16
    0U,	// VCGEuv8i8
    212992U,	// VCGEzv16i8
    212992U,	// VCGEzv2f32
    212992U,	// VCGEzv2i32
    212992U,	// VCGEzv4f16
    212992U,	// VCGEzv4f32
    212992U,	// VCGEzv4i16
    212992U,	// VCGEzv4i32
    212992U,	// VCGEzv8f16
    212992U,	// VCGEzv8i16
    212992U,	// VCGEzv8i8
    0U,	// VCGTfd
    0U,	// VCGTfq
    0U,	// VCGThd
    0U,	// VCGThq
    0U,	// VCGTsv16i8
    0U,	// VCGTsv2i32
    0U,	// VCGTsv4i16
    0U,	// VCGTsv4i32
    0U,	// VCGTsv8i16
    0U,	// VCGTsv8i8
    0U,	// VCGTuv16i8
    0U,	// VCGTuv2i32
    0U,	// VCGTuv4i16
    0U,	// VCGTuv4i32
    0U,	// VCGTuv8i16
    0U,	// VCGTuv8i8
    212992U,	// VCGTzv16i8
    212992U,	// VCGTzv2f32
    212992U,	// VCGTzv2i32
    212992U,	// VCGTzv4f16
    212992U,	// VCGTzv4f32
    212992U,	// VCGTzv4i16
    212992U,	// VCGTzv4i32
    212992U,	// VCGTzv8f16
    212992U,	// VCGTzv8i16
    212992U,	// VCGTzv8i8
    212992U,	// VCLEzv16i8
    212992U,	// VCLEzv2f32
    212992U,	// VCLEzv2i32
    212992U,	// VCLEzv4f16
    212992U,	// VCLEzv4f32
    212992U,	// VCLEzv4i16
    212992U,	// VCLEzv4i32
    212992U,	// VCLEzv8f16
    212992U,	// VCLEzv8i16
    212992U,	// VCLEzv8i8
    16384U,	// VCLSv16i8
    16384U,	// VCLSv2i32
    16384U,	// VCLSv4i16
    16384U,	// VCLSv4i32
    16384U,	// VCLSv8i16
    16384U,	// VCLSv8i8
    212992U,	// VCLTzv16i8
    212992U,	// VCLTzv2f32
    212992U,	// VCLTzv2i32
    212992U,	// VCLTzv4f16
    212992U,	// VCLTzv4f32
    212992U,	// VCLTzv4i16
    212992U,	// VCLTzv4i32
    212992U,	// VCLTzv8f16
    212992U,	// VCLTzv8i16
    212992U,	// VCLTzv8i8
    16384U,	// VCLZv16i8
    16384U,	// VCLZv2i32
    16384U,	// VCLZv4i16
    16384U,	// VCLZv4i32
    16384U,	// VCLZv8i16
    16384U,	// VCLZv8i8
    11534720U,	// VCMLAv2f32
    229760U,	// VCMLAv2f32_indexed
    11534720U,	// VCMLAv4f16
    229760U,	// VCMLAv4f16_indexed
    11534720U,	// VCMLAv4f32
    229760U,	// VCMLAv4f32_indexed
    11534720U,	// VCMLAv8f16
    229760U,	// VCMLAv8f16_indexed
    520U,	// VCMPD
    520U,	// VCMPED
    16384U,	// VCMPEH
    16384U,	// VCMPES
    0U,	// VCMPEZD
    28U,	// VCMPEZH
    28U,	// VCMPEZS
    16384U,	// VCMPH
    16384U,	// VCMPS
    0U,	// VCMPZD
    28U,	// VCMPZH
    28U,	// VCMPZS
    16384U,	// VCNTd
    16384U,	// VCNTq
    2U,	// VCVTANSDf
    2U,	// VCVTANSDh
    2U,	// VCVTANSQf
    2U,	// VCVTANSQh
    2U,	// VCVTANUDf
    2U,	// VCVTANUDh
    2U,	// VCVTANUQf
    2U,	// VCVTANUQh
    2U,	// VCVTASD
    2U,	// VCVTASH
    2U,	// VCVTASS
    2U,	// VCVTAUD
    2U,	// VCVTAUH
    2U,	// VCVTAUS
    0U,	// VCVTBDH
    0U,	// VCVTBHD
    2U,	// VCVTBHS
    2U,	// VCVTBSH
    0U,	// VCVTDS
    2U,	// VCVTMNSDf
    2U,	// VCVTMNSDh
    2U,	// VCVTMNSQf
    2U,	// VCVTMNSQh
    2U,	// VCVTMNUDf
    2U,	// VCVTMNUDh
    2U,	// VCVTMNUQf
    2U,	// VCVTMNUQh
    2U,	// VCVTMSD
    2U,	// VCVTMSH
    2U,	// VCVTMSS
    2U,	// VCVTMUD
    2U,	// VCVTMUH
    2U,	// VCVTMUS
    2U,	// VCVTNNSDf
    2U,	// VCVTNNSDh
    2U,	// VCVTNNSQf
    2U,	// VCVTNNSQh
    2U,	// VCVTNNUDf
    2U,	// VCVTNNUDh
    2U,	// VCVTNNUQf
    2U,	// VCVTNNUQh
    2U,	// VCVTNSD
    2U,	// VCVTNSH
    2U,	// VCVTNSS
    2U,	// VCVTNUD
    2U,	// VCVTNUH
    2U,	// VCVTNUS
    2U,	// VCVTPNSDf
    2U,	// VCVTPNSDh
    2U,	// VCVTPNSQf
    2U,	// VCVTPNSQh
    2U,	// VCVTPNUDf
    2U,	// VCVTPNUDh
    2U,	// VCVTPNUQf
    2U,	// VCVTPNUQh
    2U,	// VCVTPSD
    2U,	// VCVTPSH
    2U,	// VCVTPSS
    2U,	// VCVTPUD
    2U,	// VCVTPUH
    2U,	// VCVTPUS
    0U,	// VCVTSD
    0U,	// VCVTTDH
    0U,	// VCVTTHD
    2U,	// VCVTTHS
    2U,	// VCVTTSH
    2U,	// VCVTf2h
    0U,	// VCVTf2sd
    0U,	// VCVTf2sq
    0U,	// VCVTf2ud
    0U,	// VCVTf2uq
    534U,	// VCVTf2xsd
    534U,	// VCVTf2xsq
    534U,	// VCVTf2xud
    534U,	// VCVTf2xuq
    2U,	// VCVTh2f
    0U,	// VCVTh2sd
    0U,	// VCVTh2sq
    0U,	// VCVTh2ud
    0U,	// VCVTh2uq
    534U,	// VCVTh2xsd
    534U,	// VCVTh2xsq
    534U,	// VCVTh2xud
    534U,	// VCVTh2xuq
    0U,	// VCVTs2fd
    0U,	// VCVTs2fq
    0U,	// VCVTs2hd
    0U,	// VCVTs2hq
    0U,	// VCVTu2fd
    0U,	// VCVTu2fq
    0U,	// VCVTu2hd
    0U,	// VCVTu2hq
    534U,	// VCVTxs2fd
    534U,	// VCVTxs2fq
    534U,	// VCVTxs2hd
    534U,	// VCVTxs2hq
    534U,	// VCVTxu2fd
    534U,	// VCVTxu2fq
    534U,	// VCVTxu2hd
    534U,	// VCVTxu2hq
    10568456U,	// VDIVD
    0U,	// VDIVH
    0U,	// VDIVS
    16384U,	// VDUP16d
    16384U,	// VDUP16q
    16384U,	// VDUP32d
    16384U,	// VDUP32q
    16384U,	// VDUP8d
    16384U,	// VDUP8q
    114688U,	// VDUPLN16d
    114688U,	// VDUPLN16q
    114688U,	// VDUPLN32d
    114688U,	// VDUPLN32q
    114688U,	// VDUPLN8d
    114688U,	// VDUPLN8q
    0U,	// VEORd
    0U,	// VEORq
    33554432U,	// VEXTd16
    33554432U,	// VEXTd32
    33554432U,	// VEXTd8
    33554432U,	// VEXTq16
    33554432U,	// VEXTq32
    33554432U,	// VEXTq64
    33554432U,	// VEXTq8
    49942U,	// VFMAD
    8914304U,	// VFMAH
    17792U,	// VFMALD
    247168U,	// VFMALDI
    17792U,	// VFMALQ
    247168U,	// VFMALQI
    8914304U,	// VFMAS
    8914304U,	// VFMAfd
    8914304U,	// VFMAfq
    8914304U,	// VFMAhd
    8914304U,	// VFMAhq
    49942U,	// VFMSD
    8914304U,	// VFMSH
    17792U,	// VFMSLD
    247168U,	// VFMSLDI
    17792U,	// VFMSLQ
    247168U,	// VFMSLQI
    8914304U,	// VFMSS
    8914304U,	// VFMSfd
    8914304U,	// VFMSfq
    8914304U,	// VFMShd
    8914304U,	// VFMShq
    49942U,	// VFNMAD
    8914304U,	// VFNMAH
    8914304U,	// VFNMAS
    49942U,	// VFNMSD
    8914304U,	// VFNMSH
    8914304U,	// VFNMSS
    17792U,	// VFP_VMAXNMD
    17792U,	// VFP_VMAXNMH
    17792U,	// VFP_VMAXNMS
    17792U,	// VFP_VMINNMD
    17792U,	// VFP_VMINNMH
    17792U,	// VFP_VMINNMS
    114688U,	// VGETLNi32
    114688U,	// VGETLNs16
    114688U,	// VGETLNs8
    114688U,	// VGETLNu16
    114688U,	// VGETLNu8
    0U,	// VHADDsv16i8
    0U,	// VHADDsv2i32
    0U,	// VHADDsv4i16
    0U,	// VHADDsv4i32
    0U,	// VHADDsv8i16
    0U,	// VHADDsv8i8
    0U,	// VHADDuv16i8
    0U,	// VHADDuv2i32
    0U,	// VHADDuv4i16
    0U,	// VHADDuv4i32
    0U,	// VHADDuv8i16
    0U,	// VHADDuv8i8
    0U,	// VHSUBsv16i8
    0U,	// VHSUBsv2i32
    0U,	// VHSUBsv4i16
    0U,	// VHSUBsv4i32
    0U,	// VHSUBsv8i16
    0U,	// VHSUBsv8i8
    0U,	// VHSUBuv16i8
    0U,	// VHSUBuv2i32
    0U,	// VHSUBuv4i16
    0U,	// VHSUBuv4i32
    0U,	// VHSUBuv8i16
    0U,	// VHSUBuv8i8
    2U,	// VINSH
    0U,	// VJCVT
    518U,	// VLD1DUPd16
    670U,	// VLD1DUPd16wb_fixed
    262942U,	// VLD1DUPd16wb_register
    518U,	// VLD1DUPd32
    670U,	// VLD1DUPd32wb_fixed
    262942U,	// VLD1DUPd32wb_register
    518U,	// VLD1DUPd8
    670U,	// VLD1DUPd8wb_fixed
    262942U,	// VLD1DUPd8wb_register
    518U,	// VLD1DUPq16
    670U,	// VLD1DUPq16wb_fixed
    262942U,	// VLD1DUPq16wb_register
    518U,	// VLD1DUPq32
    670U,	// VLD1DUPq32wb_fixed
    262942U,	// VLD1DUPq32wb_register
    518U,	// VLD1DUPq8
    670U,	// VLD1DUPq8wb_fixed
    262942U,	// VLD1DUPq8wb_register
    12342304U,	// VLD1LNd16
    12866720U,	// VLD1LNd16_UPD
    12342304U,	// VLD1LNd32
    12866720U,	// VLD1LNd32_UPD
    12342304U,	// VLD1LNd8
    12866720U,	// VLD1LNd8_UPD
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    518U,	// VLD1d16
    518U,	// VLD1d16Q
    0U,	// VLD1d16QPseudo
    670U,	// VLD1d16Qwb_fixed
    262942U,	// VLD1d16Qwb_register
    518U,	// VLD1d16T
    0U,	// VLD1d16TPseudo
    670U,	// VLD1d16Twb_fixed
    262942U,	// VLD1d16Twb_register
    670U,	// VLD1d16wb_fixed
    262942U,	// VLD1d16wb_register
    518U,	// VLD1d32
    518U,	// VLD1d32Q
    0U,	// VLD1d32QPseudo
    670U,	// VLD1d32Qwb_fixed
    262942U,	// VLD1d32Qwb_register
    518U,	// VLD1d32T
    0U,	// VLD1d32TPseudo
    670U,	// VLD1d32Twb_fixed
    262942U,	// VLD1d32Twb_register
    670U,	// VLD1d32wb_fixed
    262942U,	// VLD1d32wb_register
    518U,	// VLD1d64
    518U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    670U,	// VLD1d64Qwb_fixed
    262942U,	// VLD1d64Qwb_register
    518U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    670U,	// VLD1d64Twb_fixed
    262942U,	// VLD1d64Twb_register
    670U,	// VLD1d64wb_fixed
    262942U,	// VLD1d64wb_register
    518U,	// VLD1d8
    518U,	// VLD1d8Q
    0U,	// VLD1d8QPseudo
    670U,	// VLD1d8Qwb_fixed
    262942U,	// VLD1d8Qwb_register
    518U,	// VLD1d8T
    0U,	// VLD1d8TPseudo
    670U,	// VLD1d8Twb_fixed
    262942U,	// VLD1d8Twb_register
    670U,	// VLD1d8wb_fixed
    262942U,	// VLD1d8wb_register
    518U,	// VLD1q16
    0U,	// VLD1q16HighQPseudo
    0U,	// VLD1q16HighTPseudo
    0U,	// VLD1q16LowQPseudo_UPD
    0U,	// VLD1q16LowTPseudo_UPD
    670U,	// VLD1q16wb_fixed
    262942U,	// VLD1q16wb_register
    518U,	// VLD1q32
    0U,	// VLD1q32HighQPseudo
    0U,	// VLD1q32HighTPseudo
    0U,	// VLD1q32LowQPseudo_UPD
    0U,	// VLD1q32LowTPseudo_UPD
    670U,	// VLD1q32wb_fixed
    262942U,	// VLD1q32wb_register
    518U,	// VLD1q64
    0U,	// VLD1q64HighQPseudo
    0U,	// VLD1q64HighTPseudo
    0U,	// VLD1q64LowQPseudo_UPD
    0U,	// VLD1q64LowTPseudo_UPD
    670U,	// VLD1q64wb_fixed
    262942U,	// VLD1q64wb_register
    518U,	// VLD1q8
    0U,	// VLD1q8HighQPseudo
    0U,	// VLD1q8HighTPseudo
    0U,	// VLD1q8LowQPseudo_UPD
    0U,	// VLD1q8LowTPseudo_UPD
    670U,	// VLD1q8wb_fixed
    262942U,	// VLD1q8wb_register
    518U,	// VLD2DUPd16
    670U,	// VLD2DUPd16wb_fixed
    262942U,	// VLD2DUPd16wb_register
    518U,	// VLD2DUPd16x2
    670U,	// VLD2DUPd16x2wb_fixed
    262942U,	// VLD2DUPd16x2wb_register
    518U,	// VLD2DUPd32
    670U,	// VLD2DUPd32wb_fixed
    262942U,	// VLD2DUPd32wb_register
    518U,	// VLD2DUPd32x2
    670U,	// VLD2DUPd32x2wb_fixed
    262942U,	// VLD2DUPd32x2wb_register
    518U,	// VLD2DUPd8
    670U,	// VLD2DUPd8wb_fixed
    262942U,	// VLD2DUPd8wb_register
    518U,	// VLD2DUPd8x2
    670U,	// VLD2DUPd8x2wb_fixed
    262942U,	// VLD2DUPd8x2wb_register
    0U,	// VLD2DUPq16EvenPseudo
    0U,	// VLD2DUPq16OddPseudo
    0U,	// VLD2DUPq32EvenPseudo
    0U,	// VLD2DUPq32OddPseudo
    0U,	// VLD2DUPq8EvenPseudo
    0U,	// VLD2DUPq8OddPseudo
    13407392U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    315757856U,	// VLD2LNd16_UPD
    13407392U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    315757856U,	// VLD2LNd32_UPD
    13407392U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    315757856U,	// VLD2LNd8_UPD
    13407392U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    315757856U,	// VLD2LNq16_UPD
    13407392U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    315757856U,	// VLD2LNq32_UPD
    518U,	// VLD2b16
    670U,	// VLD2b16wb_fixed
    262942U,	// VLD2b16wb_register
    518U,	// VLD2b32
    670U,	// VLD2b32wb_fixed
    262942U,	// VLD2b32wb_register
    518U,	// VLD2b8
    670U,	// VLD2b8wb_fixed
    262942U,	// VLD2b8wb_register
    518U,	// VLD2d16
    670U,	// VLD2d16wb_fixed
    262942U,	// VLD2d16wb_register
    518U,	// VLD2d32
    670U,	// VLD2d32wb_fixed
    262942U,	// VLD2d32wb_register
    518U,	// VLD2d8
    670U,	// VLD2d8wb_fixed
    262942U,	// VLD2d8wb_register
    518U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    670U,	// VLD2q16wb_fixed
    262942U,	// VLD2q16wb_register
    518U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    670U,	// VLD2q32wb_fixed
    262942U,	// VLD2q32wb_register
    518U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    670U,	// VLD2q8wb_fixed
    262942U,	// VLD2q8wb_register
    316834U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    14488994U,	// VLD3DUPd16_UPD
    316834U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    14488994U,	// VLD3DUPd32_UPD
    316834U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    14488994U,	// VLD3DUPd8_UPD
    316834U,	// VLD3DUPq16
    0U,	// VLD3DUPq16EvenPseudo
    0U,	// VLD3DUPq16OddPseudo
    14488994U,	// VLD3DUPq16_UPD
    316834U,	// VLD3DUPq32
    0U,	// VLD3DUPq32EvenPseudo
    0U,	// VLD3DUPq32OddPseudo
    14488994U,	// VLD3DUPq32_UPD
    316834U,	// VLD3DUPq8
    0U,	// VLD3DUPq8EvenPseudo
    0U,	// VLD3DUPq8OddPseudo
    14488994U,	// VLD3DUPq8_UPD
    349312288U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    14964256U,	// VLD3LNd16_UPD
    349312288U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    14964256U,	// VLD3LNd32_UPD
    349312288U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    14964256U,	// VLD3LNd8_UPD
    349312288U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    14964256U,	// VLD3LNq16_UPD
    349312288U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    14964256U,	// VLD3LNq32_UPD
    369098752U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    369098752U,	// VLD3d16_UPD
    369098752U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    369098752U,	// VLD3d32_UPD
    369098752U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    369098752U,	// VLD3d8_UPD
    369098752U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    369098752U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    369098752U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    369098752U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    369098752U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    369098752U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    10819234U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    349858U,	// VLD4DUPd16_UPD
    10819234U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    349858U,	// VLD4DUPd32_UPD
    10819234U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    349858U,	// VLD4DUPd8_UPD
    10819234U,	// VLD4DUPq16
    0U,	// VLD4DUPq16EvenPseudo
    0U,	// VLD4DUPq16OddPseudo
    349858U,	// VLD4DUPq16_UPD
    10819234U,	// VLD4DUPq32
    0U,	// VLD4DUPq32EvenPseudo
    0U,	// VLD4DUPq32OddPseudo
    349858U,	// VLD4DUPq32_UPD
    10819234U,	// VLD4DUPq8
    0U,	// VLD4DUPq8EvenPseudo
    0U,	// VLD4DUPq8OddPseudo
    349858U,	// VLD4DUPq8_UPD
    411866656U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    5920U,	// VLD4LNd16_UPD
    411866656U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    5920U,	// VLD4LNd32_UPD
    411866656U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    5920U,	// VLD4LNd8_UPD
    411866656U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    5920U,	// VLD4LNq16_UPD
    411866656U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    5920U,	// VLD4LNq32_UPD
    33554432U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    33554432U,	// VLD4d16_UPD
    33554432U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    33554432U,	// VLD4d32_UPD
    33554432U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    33554432U,	// VLD4d8_UPD
    33554432U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    33554432U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    33554432U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    33554432U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    33554432U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    33554432U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    524U,	// VLDMDDB_UPD
    18304U,	// VLDMDIA
    524U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    524U,	// VLDMSDB_UPD
    18304U,	// VLDMSIA
    524U,	// VLDMSIA_UPD
    6016U,	// VLDRD
    6144U,	// VLDRH
    6016U,	// VLDRS
    0U,	// VLDR_FPCXTNS_off
    0U,	// VLDR_FPCXTNS_post
    0U,	// VLDR_FPCXTNS_pre
    0U,	// VLDR_FPCXTS_off
    0U,	// VLDR_FPCXTS_post
    0U,	// VLDR_FPCXTS_pre
    0U,	// VLDR_FPSCR_NZCVQC_off
    0U,	// VLDR_FPSCR_NZCVQC_post
    0U,	// VLDR_FPSCR_NZCVQC_pre
    0U,	// VLDR_FPSCR_off
    0U,	// VLDR_FPSCR_post
    0U,	// VLDR_FPSCR_pre
    0U,	// VLDR_P0_off
    36U,	// VLDR_P0_post
    0U,	// VLDR_P0_pre
    0U,	// VLDR_VPR_off
    0U,	// VLDR_VPR_post
    0U,	// VLDR_VPR_pre
    2U,	// VLLDM
    2U,	// VLSTM
    0U,	// VMAXfd
    0U,	// VMAXfq
    0U,	// VMAXhd
    0U,	// VMAXhq
    0U,	// VMAXsv16i8
    0U,	// VMAXsv2i32
    0U,	// VMAXsv4i16
    0U,	// VMAXsv4i32
    0U,	// VMAXsv8i16
    0U,	// VMAXsv8i8
    0U,	// VMAXuv16i8
    0U,	// VMAXuv2i32
    0U,	// VMAXuv4i16
    0U,	// VMAXuv4i32
    0U,	// VMAXuv8i16
    0U,	// VMAXuv8i8
    0U,	// VMINfd
    0U,	// VMINfq
    0U,	// VMINhd
    0U,	// VMINhq
    0U,	// VMINsv16i8
    0U,	// VMINsv2i32
    0U,	// VMINsv4i16
    0U,	// VMINsv4i32
    0U,	// VMINsv8i16
    0U,	// VMINsv8i8
    0U,	// VMINuv16i8
    0U,	// VMINuv2i32
    0U,	// VMINuv4i16
    0U,	// VMINuv4i32
    0U,	// VMINuv8i16
    0U,	// VMINuv8i8
    49942U,	// VMLAD
    8914304U,	// VMLAH
    445121920U,	// VMLALslsv2i32
    445121920U,	// VMLALslsv4i16
    445121920U,	// VMLALsluv2i32
    445121920U,	// VMLALsluv4i16
    8914304U,	// VMLALsv2i64
    8914304U,	// VMLALsv4i32
    8914304U,	// VMLALsv8i16
    8914304U,	// VMLALuv2i64
    8914304U,	// VMLALuv4i32
    8914304U,	// VMLALuv8i16
    8914304U,	// VMLAS
    8914304U,	// VMLAfd
    8914304U,	// VMLAfq
    8914304U,	// VMLAhd
    8914304U,	// VMLAhq
    445121920U,	// VMLAslfd
    445121920U,	// VMLAslfq
    445121920U,	// VMLAslhd
    445121920U,	// VMLAslhq
    445121920U,	// VMLAslv2i32
    445121920U,	// VMLAslv4i16
    445121920U,	// VMLAslv4i32
    445121920U,	// VMLAslv8i16
    8914304U,	// VMLAv16i8
    8914304U,	// VMLAv2i32
    8914304U,	// VMLAv4i16
    8914304U,	// VMLAv4i32
    8914304U,	// VMLAv8i16
    8914304U,	// VMLAv8i8
    49942U,	// VMLSD
    8914304U,	// VMLSH
    445121920U,	// VMLSLslsv2i32
    445121920U,	// VMLSLslsv4i16
    445121920U,	// VMLSLsluv2i32
    445121920U,	// VMLSLsluv4i16
    8914304U,	// VMLSLsv2i64
    8914304U,	// VMLSLsv4i32
    8914304U,	// VMLSLsv8i16
    8914304U,	// VMLSLuv2i64
    8914304U,	// VMLSLuv4i32
    8914304U,	// VMLSLuv8i16
    8914304U,	// VMLSS
    8914304U,	// VMLSfd
    8914304U,	// VMLSfq
    8914304U,	// VMLShd
    8914304U,	// VMLShq
    445121920U,	// VMLSslfd
    445121920U,	// VMLSslfq
    445121920U,	// VMLSslhd
    445121920U,	// VMLSslhq
    445121920U,	// VMLSslv2i32
    445121920U,	// VMLSslv4i16
    445121920U,	// VMLSslv4i32
    445121920U,	// VMLSslv8i16
    8914304U,	// VMLSv16i8
    8914304U,	// VMLSv2i32
    8914304U,	// VMLSv4i16
    8914304U,	// VMLSv4i32
    8914304U,	// VMLSv8i16
    8914304U,	// VMLSv8i8
    520U,	// VMOVD
    0U,	// VMOVDRR
    2U,	// VMOVH
    16384U,	// VMOVHR
    16384U,	// VMOVLsv2i64
    16384U,	// VMOVLsv4i32
    16384U,	// VMOVLsv8i16
    16384U,	// VMOVLuv2i64
    16384U,	// VMOVLuv4i32
    16384U,	// VMOVLuv8i16
    2U,	// VMOVNv2i32
    16384U,	// VMOVNv4i16
    16384U,	// VMOVNv8i8
    16384U,	// VMOVRH
    0U,	// VMOVRRD
    33554432U,	// VMOVRRS
    16384U,	// VMOVRS
    16384U,	// VMOVS
    16384U,	// VMOVSR
    33554432U,	// VMOVSRR
    4736U,	// VMOVv16i8
    0U,	// VMOVv1i64
    1792U,	// VMOVv2f32
    4736U,	// VMOVv2i32
    0U,	// VMOVv2i64
    1792U,	// VMOVv4f32
    4736U,	// VMOVv4i16
    4736U,	// VMOVv4i32
    4736U,	// VMOVv8i16
    4736U,	// VMOVv8i8
    38U,	// VMRS
    40U,	// VMRS_FPCXTNS
    42U,	// VMRS_FPCXTS
    44U,	// VMRS_FPEXC
    46U,	// VMRS_FPINST
    48U,	// VMRS_FPINST2
    50U,	// VMRS_FPSCR_NZCVQC
    52U,	// VMRS_FPSID
    54U,	// VMRS_MVFR0
    56U,	// VMRS_MVFR1
    58U,	// VMRS_MVFR2
    60U,	// VMRS_P0
    62U,	// VMRS_VPR
    2U,	// VMSR
    2U,	// VMSR_FPCXTNS
    2U,	// VMSR_FPCXTS
    0U,	// VMSR_FPEXC
    0U,	// VMSR_FPINST
    0U,	// VMSR_FPINST2
    2U,	// VMSR_FPSCR_NZCVQC
    0U,	// VMSR_FPSID
    2U,	// VMSR_P0
    2U,	// VMSR_VPR
    10568456U,	// VMULD
    0U,	// VMULH
    17792U,	// VMULLp64
    0U,	// VMULLp8
    134217728U,	// VMULLslsv2i32
    134217728U,	// VMULLslsv4i16
    134217728U,	// VMULLsluv2i32
    134217728U,	// VMULLsluv4i16
    0U,	// VMULLsv2i64
    0U,	// VMULLsv4i32
    0U,	// VMULLsv8i16
    0U,	// VMULLuv2i64
    0U,	// VMULLuv4i32
    0U,	// VMULLuv8i16
    0U,	// VMULS
    0U,	// VMULfd
    0U,	// VMULfq
    0U,	// VMULhd
    0U,	// VMULhq
    0U,	// VMULpd
    0U,	// VMULpq
    134217728U,	// VMULslfd
    134217728U,	// VMULslfq
    134217728U,	// VMULslhd
    134217728U,	// VMULslhq
    134217728U,	// VMULslv2i32
    134217728U,	// VMULslv4i16
    134217728U,	// VMULslv4i32
    134217728U,	// VMULslv8i16
    0U,	// VMULv16i8
    0U,	// VMULv2i32
    0U,	// VMULv4i16
    0U,	// VMULv4i32
    0U,	// VMULv8i16
    0U,	// VMULv8i8
    16384U,	// VMVNd
    16384U,	// VMVNq
    4736U,	// VMVNv2i32
    4736U,	// VMVNv4i16
    4736U,	// VMVNv4i32
    4736U,	// VMVNv8i16
    520U,	// VNEGD
    16384U,	// VNEGH
    16384U,	// VNEGS
    16384U,	// VNEGf32q
    16384U,	// VNEGfd
    16384U,	// VNEGhd
    16384U,	// VNEGhq
    16384U,	// VNEGs16d
    16384U,	// VNEGs16q
    16384U,	// VNEGs32d
    16384U,	// VNEGs32q
    16384U,	// VNEGs8d
    16384U,	// VNEGs8q
    49942U,	// VNMLAD
    8914304U,	// VNMLAH
    8914304U,	// VNMLAS
    49942U,	// VNMLSD
    8914304U,	// VNMLSH
    8914304U,	// VNMLSS
    10568456U,	// VNMULD
    0U,	// VNMULH
    0U,	// VNMULS
    0U,	// VORNd
    0U,	// VORNq
    0U,	// VORRd
    4736U,	// VORRiv2i32
    4736U,	// VORRiv4i16
    4736U,	// VORRiv4i32
    4736U,	// VORRiv8i16
    0U,	// VORRq
    17792U,	// VPADALsv16i8
    17792U,	// VPADALsv2i32
    17792U,	// VPADALsv4i16
    17792U,	// VPADALsv4i32
    17792U,	// VPADALsv8i16
    17792U,	// VPADALsv8i8
    17792U,	// VPADALuv16i8
    17792U,	// VPADALuv2i32
    17792U,	// VPADALuv4i16
    17792U,	// VPADALuv4i32
    17792U,	// VPADALuv8i16
    17792U,	// VPADALuv8i8
    16384U,	// VPADDLsv16i8
    16384U,	// VPADDLsv2i32
    16384U,	// VPADDLsv4i16
    16384U,	// VPADDLsv4i32
    16384U,	// VPADDLsv8i16
    16384U,	// VPADDLsv8i8
    16384U,	// VPADDLuv16i8
    16384U,	// VPADDLuv2i32
    16384U,	// VPADDLuv4i16
    16384U,	// VPADDLuv4i32
    16384U,	// VPADDLuv8i16
    16384U,	// VPADDLuv8i8
    0U,	// VPADDf
    0U,	// VPADDh
    0U,	// VPADDi16
    0U,	// VPADDi32
    0U,	// VPADDi8
    0U,	// VPMAXf
    0U,	// VPMAXh
    0U,	// VPMAXs16
    0U,	// VPMAXs32
    0U,	// VPMAXs8
    0U,	// VPMAXu16
    0U,	// VPMAXu32
    0U,	// VPMAXu8
    0U,	// VPMINf
    0U,	// VPMINh
    0U,	// VPMINs16
    0U,	// VPMINs32
    0U,	// VPMINs8
    0U,	// VPMINu16
    0U,	// VPMINu32
    0U,	// VPMINu8
    16384U,	// VQABSv16i8
    16384U,	// VQABSv2i32
    16384U,	// VQABSv4i16
    16384U,	// VQABSv4i32
    16384U,	// VQABSv8i16
    16384U,	// VQABSv8i8
    0U,	// VQADDsv16i8
    17792U,	// VQADDsv1i64
    0U,	// VQADDsv2i32
    17792U,	// VQADDsv2i64
    0U,	// VQADDsv4i16
    0U,	// VQADDsv4i32
    0U,	// VQADDsv8i16
    0U,	// VQADDsv8i8
    0U,	// VQADDuv16i8
    0U,	// VQADDuv1i64
    0U,	// VQADDuv2i32
    0U,	// VQADDuv2i64
    0U,	// VQADDuv4i16
    0U,	// VQADDuv4i32
    0U,	// VQADDuv8i16
    0U,	// VQADDuv8i8
    445121920U,	// VQDMLALslv2i32
    445121920U,	// VQDMLALslv4i16
    8914304U,	// VQDMLALv2i64
    8914304U,	// VQDMLALv4i32
    445121920U,	// VQDMLSLslv2i32
    445121920U,	// VQDMLSLslv4i16
    8914304U,	// VQDMLSLv2i64
    8914304U,	// VQDMLSLv4i32
    134217728U,	// VQDMULHslv2i32
    134217728U,	// VQDMULHslv4i16
    134217728U,	// VQDMULHslv4i32
    134217728U,	// VQDMULHslv8i16
    0U,	// VQDMULHv2i32
    0U,	// VQDMULHv4i16
    0U,	// VQDMULHv4i32
    0U,	// VQDMULHv8i16
    134217728U,	// VQDMULLslv2i32
    134217728U,	// VQDMULLslv4i16
    0U,	// VQDMULLv2i64
    0U,	// VQDMULLv4i32
    2U,	// VQMOVNsuv2i32
    16384U,	// VQMOVNsuv4i16
    16384U,	// VQMOVNsuv8i8
    2U,	// VQMOVNsv2i32
    16384U,	// VQMOVNsv4i16
    16384U,	// VQMOVNsv8i8
    16384U,	// VQMOVNuv2i32
    16384U,	// VQMOVNuv4i16
    16384U,	// VQMOVNuv8i8
    16384U,	// VQNEGv16i8
    16384U,	// VQNEGv2i32
    16384U,	// VQNEGv4i16
    16384U,	// VQNEGv4i32
    16384U,	// VQNEGv8i16
    16384U,	// VQNEGv8i8
    445121920U,	// VQRDMLAHslv2i32
    445121920U,	// VQRDMLAHslv4i16
    445121920U,	// VQRDMLAHslv4i32
    445121920U,	// VQRDMLAHslv8i16
    8914304U,	// VQRDMLAHv2i32
    8914304U,	// VQRDMLAHv4i16
    8914304U,	// VQRDMLAHv4i32
    8914304U,	// VQRDMLAHv8i16
    445121920U,	// VQRDMLSHslv2i32
    445121920U,	// VQRDMLSHslv4i16
    445121920U,	// VQRDMLSHslv4i32
    445121920U,	// VQRDMLSHslv8i16
    8914304U,	// VQRDMLSHv2i32
    8914304U,	// VQRDMLSHv4i16
    8914304U,	// VQRDMLSHv4i32
    8914304U,	// VQRDMLSHv8i16
    134217728U,	// VQRDMULHslv2i32
    134217728U,	// VQRDMULHslv4i16
    134217728U,	// VQRDMULHslv4i32
    134217728U,	// VQRDMULHslv8i16
    0U,	// VQRDMULHv2i32
    0U,	// VQRDMULHv4i16
    0U,	// VQRDMULHv4i32
    0U,	// VQRDMULHv8i16
    0U,	// VQRSHLsv16i8
    17792U,	// VQRSHLsv1i64
    0U,	// VQRSHLsv2i32
    17792U,	// VQRSHLsv2i64
    0U,	// VQRSHLsv4i16
    0U,	// VQRSHLsv4i32
    0U,	// VQRSHLsv8i16
    0U,	// VQRSHLsv8i8
    0U,	// VQRSHLuv16i8
    0U,	// VQRSHLuv1i64
    0U,	// VQRSHLuv2i32
    0U,	// VQRSHLuv2i64
    0U,	// VQRSHLuv4i16
    0U,	// VQRSHLuv4i32
    0U,	// VQRSHLuv8i16
    0U,	// VQRSHLuv8i8
    17792U,	// VQRSHRNsv2i32
    0U,	// VQRSHRNsv4i16
    0U,	// VQRSHRNsv8i8
    0U,	// VQRSHRNuv2i32
    0U,	// VQRSHRNuv4i16
    0U,	// VQRSHRNuv8i8
    17792U,	// VQRSHRUNv2i32
    0U,	// VQRSHRUNv4i16
    0U,	// VQRSHRUNv8i8
    0U,	// VQSHLsiv16i8
    17792U,	// VQSHLsiv1i64
    0U,	// VQSHLsiv2i32
    17792U,	// VQSHLsiv2i64
    0U,	// VQSHLsiv4i16
    0U,	// VQSHLsiv4i32
    0U,	// VQSHLsiv8i16
    0U,	// VQSHLsiv8i8
    0U,	// VQSHLsuv16i8
    17792U,	// VQSHLsuv1i64
    0U,	// VQSHLsuv2i32
    17792U,	// VQSHLsuv2i64
    0U,	// VQSHLsuv4i16
    0U,	// VQSHLsuv4i32
    0U,	// VQSHLsuv8i16
    0U,	// VQSHLsuv8i8
    0U,	// VQSHLsv16i8
    17792U,	// VQSHLsv1i64
    0U,	// VQSHLsv2i32
    17792U,	// VQSHLsv2i64
    0U,	// VQSHLsv4i16
    0U,	// VQSHLsv4i32
    0U,	// VQSHLsv8i16
    0U,	// VQSHLsv8i8
    0U,	// VQSHLuiv16i8
    0U,	// VQSHLuiv1i64
    0U,	// VQSHLuiv2i32
    0U,	// VQSHLuiv2i64
    0U,	// VQSHLuiv4i16
    0U,	// VQSHLuiv4i32
    0U,	// VQSHLuiv8i16
    0U,	// VQSHLuiv8i8
    0U,	// VQSHLuv16i8
    0U,	// VQSHLuv1i64
    0U,	// VQSHLuv2i32
    0U,	// VQSHLuv2i64
    0U,	// VQSHLuv4i16
    0U,	// VQSHLuv4i32
    0U,	// VQSHLuv8i16
    0U,	// VQSHLuv8i8
    17792U,	// VQSHRNsv2i32
    0U,	// VQSHRNsv4i16
    0U,	// VQSHRNsv8i8
    0U,	// VQSHRNuv2i32
    0U,	// VQSHRNuv4i16
    0U,	// VQSHRNuv8i8
    17792U,	// VQSHRUNv2i32
    0U,	// VQSHRUNv4i16
    0U,	// VQSHRUNv8i8
    0U,	// VQSUBsv16i8
    17792U,	// VQSUBsv1i64
    0U,	// VQSUBsv2i32
    17792U,	// VQSUBsv2i64
    0U,	// VQSUBsv4i16
    0U,	// VQSUBsv4i32
    0U,	// VQSUBsv8i16
    0U,	// VQSUBsv8i8
    0U,	// VQSUBuv16i8
    0U,	// VQSUBuv1i64
    0U,	// VQSUBuv2i32
    0U,	// VQSUBuv2i64
    0U,	// VQSUBuv4i16
    0U,	// VQSUBuv4i32
    0U,	// VQSUBuv8i16
    0U,	// VQSUBuv8i8
    17792U,	// VRADDHNv2i32
    0U,	// VRADDHNv4i16
    0U,	// VRADDHNv8i8
    16384U,	// VRECPEd
    16384U,	// VRECPEfd
    16384U,	// VRECPEfq
    16384U,	// VRECPEhd
    16384U,	// VRECPEhq
    16384U,	// VRECPEq
    0U,	// VRECPSfd
    0U,	// VRECPSfq
    0U,	// VRECPShd
    0U,	// VRECPShq
    16384U,	// VREV16d8
    16384U,	// VREV16q8
    16384U,	// VREV32d16
    16384U,	// VREV32d8
    16384U,	// VREV32q16
    16384U,	// VREV32q8
    16384U,	// VREV64d16
    16384U,	// VREV64d32
    16384U,	// VREV64d8
    16384U,	// VREV64q16
    16384U,	// VREV64q32
    16384U,	// VREV64q8
    0U,	// VRHADDsv16i8
    0U,	// VRHADDsv2i32
    0U,	// VRHADDsv4i16
    0U,	// VRHADDsv4i32
    0U,	// VRHADDsv8i16
    0U,	// VRHADDsv8i8
    0U,	// VRHADDuv16i8
    0U,	// VRHADDuv2i32
    0U,	// VRHADDuv4i16
    0U,	// VRHADDuv4i32
    0U,	// VRHADDuv8i16
    0U,	// VRHADDuv8i8
    2U,	// VRINTAD
    2U,	// VRINTAH
    2U,	// VRINTANDf
    2U,	// VRINTANDh
    2U,	// VRINTANQf
    2U,	// VRINTANQh
    2U,	// VRINTAS
    2U,	// VRINTMD
    2U,	// VRINTMH
    2U,	// VRINTMNDf
    2U,	// VRINTMNDh
    2U,	// VRINTMNQf
    2U,	// VRINTMNQh
    2U,	// VRINTMS
    2U,	// VRINTND
    2U,	// VRINTNH
    2U,	// VRINTNNDf
    2U,	// VRINTNNDh
    2U,	// VRINTNNQf
    2U,	// VRINTNNQh
    2U,	// VRINTNS
    2U,	// VRINTPD
    2U,	// VRINTPH
    2U,	// VRINTPNDf
    2U,	// VRINTPNDh
    2U,	// VRINTPNQf
    2U,	// VRINTPNQh
    2U,	// VRINTPS
    520U,	// VRINTRD
    16384U,	// VRINTRH
    16384U,	// VRINTRS
    520U,	// VRINTXD
    16384U,	// VRINTXH
    2U,	// VRINTXNDf
    2U,	// VRINTXNDh
    2U,	// VRINTXNQf
    2U,	// VRINTXNQh
    16384U,	// VRINTXS
    520U,	// VRINTZD
    16384U,	// VRINTZH
    2U,	// VRINTZNDf
    2U,	// VRINTZNDh
    2U,	// VRINTZNQf
    2U,	// VRINTZNQh
    16384U,	// VRINTZS
    0U,	// VRSHLsv16i8
    17792U,	// VRSHLsv1i64
    0U,	// VRSHLsv2i32
    17792U,	// VRSHLsv2i64
    0U,	// VRSHLsv4i16
    0U,	// VRSHLsv4i32
    0U,	// VRSHLsv8i16
    0U,	// VRSHLsv8i8
    0U,	// VRSHLuv16i8
    0U,	// VRSHLuv1i64
    0U,	// VRSHLuv2i32
    0U,	// VRSHLuv2i64
    0U,	// VRSHLuv4i16
    0U,	// VRSHLuv4i32
    0U,	// VRSHLuv8i16
    0U,	// VRSHLuv8i8
    17792U,	// VRSHRNv2i32
    0U,	// VRSHRNv4i16
    0U,	// VRSHRNv8i8
    0U,	// VRSHRsv16i8
    17792U,	// VRSHRsv1i64
    0U,	// VRSHRsv2i32
    17792U,	// VRSHRsv2i64
    0U,	// VRSHRsv4i16
    0U,	// VRSHRsv4i32
    0U,	// VRSHRsv8i16
    0U,	// VRSHRsv8i8
    0U,	// VRSHRuv16i8
    0U,	// VRSHRuv1i64
    0U,	// VRSHRuv2i32
    0U,	// VRSHRuv2i64
    0U,	// VRSHRuv4i16
    0U,	// VRSHRuv4i32
    0U,	// VRSHRuv8i16
    0U,	// VRSHRuv8i8
    16384U,	// VRSQRTEd
    16384U,	// VRSQRTEfd
    16384U,	// VRSQRTEfq
    16384U,	// VRSQRTEhd
    16384U,	// VRSQRTEhq
    16384U,	// VRSQRTEq
    0U,	// VRSQRTSfd
    0U,	// VRSQRTSfq
    0U,	// VRSQRTShd
    0U,	// VRSQRTShq
    8914304U,	// VRSRAsv16i8
    16768U,	// VRSRAsv1i64
    8914304U,	// VRSRAsv2i32
    16768U,	// VRSRAsv2i64
    8914304U,	// VRSRAsv4i16
    8914304U,	// VRSRAsv4i32
    8914304U,	// VRSRAsv8i16
    8914304U,	// VRSRAsv8i8
    8914304U,	// VRSRAuv16i8
    8914304U,	// VRSRAuv1i64
    8914304U,	// VRSRAuv2i32
    8914304U,	// VRSRAuv2i64
    8914304U,	// VRSRAuv4i16
    8914304U,	// VRSRAuv4i32
    8914304U,	// VRSRAuv8i16
    8914304U,	// VRSRAuv8i8
    17792U,	// VRSUBHNv2i32
    0U,	// VRSUBHNv4i16
    0U,	// VRSUBHNv8i8
    0U,	// VSCCLRMD
    0U,	// VSCCLRMS
    2U,	// VSDOTD
    536U,	// VSDOTDI
    2U,	// VSDOTQ
    536U,	// VSDOTQI
    17792U,	// VSELEQD
    17792U,	// VSELEQH
    17792U,	// VSELEQS
    17792U,	// VSELGED
    17792U,	// VSELGEH
    17792U,	// VSELGES
    17792U,	// VSELGTD
    17792U,	// VSELGTH
    17792U,	// VSELGTS
    17792U,	// VSELVSD
    17792U,	// VSELVSH
    17792U,	// VSELVSS
    26U,	// VSETLNi16
    26U,	// VSETLNi32
    26U,	// VSETLNi8
    0U,	// VSHLLi16
    0U,	// VSHLLi32
    0U,	// VSHLLi8
    0U,	// VSHLLsv2i64
    0U,	// VSHLLsv4i32
    0U,	// VSHLLsv8i16
    0U,	// VSHLLuv2i64
    0U,	// VSHLLuv4i32
    0U,	// VSHLLuv8i16
    0U,	// VSHLiv16i8
    17792U,	// VSHLiv1i64
    0U,	// VSHLiv2i32
    17792U,	// VSHLiv2i64
    0U,	// VSHLiv4i16
    0U,	// VSHLiv4i32
    0U,	// VSHLiv8i16
    0U,	// VSHLiv8i8
    0U,	// VSHLsv16i8
    17792U,	// VSHLsv1i64
    0U,	// VSHLsv2i32
    17792U,	// VSHLsv2i64
    0U,	// VSHLsv4i16
    0U,	// VSHLsv4i32
    0U,	// VSHLsv8i16
    0U,	// VSHLsv8i8
    0U,	// VSHLuv16i8
    0U,	// VSHLuv1i64
    0U,	// VSHLuv2i32
    0U,	// VSHLuv2i64
    0U,	// VSHLuv4i16
    0U,	// VSHLuv4i32
    0U,	// VSHLuv8i16
    0U,	// VSHLuv8i8
    17792U,	// VSHRNv2i32
    0U,	// VSHRNv4i16
    0U,	// VSHRNv8i8
    0U,	// VSHRsv16i8
    17792U,	// VSHRsv1i64
    0U,	// VSHRsv2i32
    17792U,	// VSHRsv2i64
    0U,	// VSHRsv4i16
    0U,	// VSHRsv4i32
    0U,	// VSHRsv8i16
    0U,	// VSHRsv8i8
    0U,	// VSHRuv16i8
    0U,	// VSHRuv1i64
    0U,	// VSHRuv2i32
    0U,	// VSHRuv2i64
    0U,	// VSHRuv4i16
    0U,	// VSHRuv4i32
    0U,	// VSHRuv8i16
    0U,	// VSHRuv8i8
    0U,	// VSHTOD
    64U,	// VSHTOH
    0U,	// VSHTOS
    0U,	// VSITOD
    0U,	// VSITOH
    0U,	// VSITOS
    8914304U,	// VSLIv16i8
    8914304U,	// VSLIv1i64
    8914304U,	// VSLIv2i32
    8914304U,	// VSLIv2i64
    8914304U,	// VSLIv4i16
    8914304U,	// VSLIv4i32
    8914304U,	// VSLIv8i16
    8914304U,	// VSLIv8i8
    66U,	// VSLTOD
    66U,	// VSLTOH
    66U,	// VSLTOS
    520U,	// VSQRTD
    16384U,	// VSQRTH
    16384U,	// VSQRTS
    8914304U,	// VSRAsv16i8
    16768U,	// VSRAsv1i64
    8914304U,	// VSRAsv2i32
    16768U,	// VSRAsv2i64
    8914304U,	// VSRAsv4i16
    8914304U,	// VSRAsv4i32
    8914304U,	// VSRAsv8i16
    8914304U,	// VSRAsv8i8
    8914304U,	// VSRAuv16i8
    8914304U,	// VSRAuv1i64
    8914304U,	// VSRAuv2i32
    8914304U,	// VSRAuv2i64
    8914304U,	// VSRAuv4i16
    8914304U,	// VSRAuv4i32
    8914304U,	// VSRAuv8i16
    8914304U,	// VSRAuv8i8
    8914304U,	// VSRIv16i8
    8914304U,	// VSRIv1i64
    8914304U,	// VSRIv2i32
    8914304U,	// VSRIv2i64
    8914304U,	// VSRIv4i16
    8914304U,	// VSRIv4i32
    8914304U,	// VSRIv8i16
    8914304U,	// VSRIv8i8
    6304U,	// VST1LNd16
    482105632U,	// VST1LNd16_UPD
    6304U,	// VST1LNd32
    482105632U,	// VST1LNd32_UPD
    6304U,	// VST1LNd8
    482105632U,	// VST1LNd8_UPD
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    0U,	// VST1d16
    0U,	// VST1d16Q
    0U,	// VST1d16QPseudo
    0U,	// VST1d16Qwb_fixed
    0U,	// VST1d16Qwb_register
    0U,	// VST1d16T
    0U,	// VST1d16TPseudo
    0U,	// VST1d16Twb_fixed
    0U,	// VST1d16Twb_register
    0U,	// VST1d16wb_fixed
    0U,	// VST1d16wb_register
    0U,	// VST1d32
    0U,	// VST1d32Q
    0U,	// VST1d32QPseudo
    0U,	// VST1d32Qwb_fixed
    0U,	// VST1d32Qwb_register
    0U,	// VST1d32T
    0U,	// VST1d32TPseudo
    0U,	// VST1d32Twb_fixed
    0U,	// VST1d32Twb_register
    0U,	// VST1d32wb_fixed
    0U,	// VST1d32wb_register
    0U,	// VST1d64
    0U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    0U,	// VST1d64Qwb_fixed
    0U,	// VST1d64Qwb_register
    0U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    0U,	// VST1d64Twb_fixed
    0U,	// VST1d64Twb_register
    0U,	// VST1d64wb_fixed
    0U,	// VST1d64wb_register
    0U,	// VST1d8
    0U,	// VST1d8Q
    0U,	// VST1d8QPseudo
    0U,	// VST1d8Qwb_fixed
    0U,	// VST1d8Qwb_register
    0U,	// VST1d8T
    0U,	// VST1d8TPseudo
    0U,	// VST1d8Twb_fixed
    0U,	// VST1d8Twb_register
    0U,	// VST1d8wb_fixed
    0U,	// VST1d8wb_register
    0U,	// VST1q16
    0U,	// VST1q16HighQPseudo
    0U,	// VST1q16HighTPseudo
    0U,	// VST1q16LowQPseudo_UPD
    0U,	// VST1q16LowTPseudo_UPD
    0U,	// VST1q16wb_fixed
    0U,	// VST1q16wb_register
    0U,	// VST1q32
    0U,	// VST1q32HighQPseudo
    0U,	// VST1q32HighTPseudo
    0U,	// VST1q32LowQPseudo_UPD
    0U,	// VST1q32LowTPseudo_UPD
    0U,	// VST1q32wb_fixed
    0U,	// VST1q32wb_register
    0U,	// VST1q64
    0U,	// VST1q64HighQPseudo
    0U,	// VST1q64HighTPseudo
    0U,	// VST1q64LowQPseudo_UPD
    0U,	// VST1q64LowTPseudo_UPD
    0U,	// VST1q64wb_fixed
    0U,	// VST1q64wb_register
    0U,	// VST1q8
    0U,	// VST1q8HighQPseudo
    0U,	// VST1q8HighTPseudo
    0U,	// VST1q8LowQPseudo_UPD
    0U,	// VST1q8LowTPseudo_UPD
    0U,	// VST1q8wb_fixed
    0U,	// VST1q8wb_register
    411866144U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    15504544U,	// VST2LNd16_UPD
    411866144U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    15504544U,	// VST2LNd32_UPD
    411866144U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    15504544U,	// VST2LNd8_UPD
    411866144U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    15504544U,	// VST2LNq16_UPD
    411866144U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    15504544U,	// VST2LNq32_UPD
    0U,	// VST2b16
    0U,	// VST2b16wb_fixed
    0U,	// VST2b16wb_register
    0U,	// VST2b32
    0U,	// VST2b32wb_fixed
    0U,	// VST2b32wb_register
    0U,	// VST2b8
    0U,	// VST2b8wb_fixed
    0U,	// VST2b8wb_register
    0U,	// VST2d16
    0U,	// VST2d16wb_fixed
    0U,	// VST2d16wb_register
    0U,	// VST2d32
    0U,	// VST2d32wb_fixed
    0U,	// VST2d32wb_register
    0U,	// VST2d8
    0U,	// VST2d8wb_fixed
    0U,	// VST2d8wb_register
    0U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    0U,	// VST2q16wb_fixed
    0U,	// VST2q16wb_register
    0U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    0U,	// VST2q32wb_fixed
    0U,	// VST2q32wb_register
    0U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    0U,	// VST2q8wb_fixed
    0U,	// VST2q8wb_register
    411867424U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    6560U,	// VST3LNd16_UPD
    411867424U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    6560U,	// VST3LNd32_UPD
    411867424U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    6560U,	// VST3LNd8_UPD
    411867424U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    6560U,	// VST3LNq16_UPD
    411867424U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    6560U,	// VST3LNq32_UPD
    369623424U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    367104U,	// VST3d16_UPD
    369623424U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    367104U,	// VST3d32_UPD
    369623424U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    367104U,	// VST3d8_UPD
    369623424U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    367104U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    369623424U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    367104U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    369623424U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    367104U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    411866272U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    382240U,	// VST4LNd16_UPD
    411866272U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    382240U,	// VST4LNd32_UPD
    411866272U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    382240U,	// VST4LNd8_UPD
    411866272U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    382240U,	// VST4LNq16_UPD
    411866272U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    382240U,	// VST4LNq32_UPD
    34079104U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    15735296U,	// VST4d16_UPD
    34079104U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    15735296U,	// VST4d32_UPD
    34079104U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    15735296U,	// VST4d8_UPD
    34079104U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    15735296U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    34079104U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    15735296U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    34079104U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    15735296U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    524U,	// VSTMDDB_UPD
    18304U,	// VSTMDIA
    524U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    524U,	// VSTMSDB_UPD
    18304U,	// VSTMSIA
    524U,	// VSTMSIA_UPD
    6016U,	// VSTRD
    6144U,	// VSTRH
    6016U,	// VSTRS
    0U,	// VSTR_FPCXTNS_off
    0U,	// VSTR_FPCXTNS_post
    0U,	// VSTR_FPCXTNS_pre
    0U,	// VSTR_FPCXTS_off
    0U,	// VSTR_FPCXTS_post
    0U,	// VSTR_FPCXTS_pre
    0U,	// VSTR_FPSCR_NZCVQC_off
    0U,	// VSTR_FPSCR_NZCVQC_post
    0U,	// VSTR_FPSCR_NZCVQC_pre
    0U,	// VSTR_FPSCR_off
    0U,	// VSTR_FPSCR_post
    0U,	// VSTR_FPSCR_pre
    0U,	// VSTR_P0_off
    36U,	// VSTR_P0_post
    0U,	// VSTR_P0_pre
    0U,	// VSTR_VPR_off
    0U,	// VSTR_VPR_post
    0U,	// VSTR_VPR_pre
    10568456U,	// VSUBD
    0U,	// VSUBH
    17792U,	// VSUBHNv2i32
    0U,	// VSUBHNv4i16
    0U,	// VSUBHNv8i8
    0U,	// VSUBLsv2i64
    0U,	// VSUBLsv4i32
    0U,	// VSUBLsv8i16
    0U,	// VSUBLuv2i64
    0U,	// VSUBLuv4i32
    0U,	// VSUBLuv8i16
    0U,	// VSUBS
    0U,	// VSUBWsv2i64
    0U,	// VSUBWsv4i32
    0U,	// VSUBWsv8i16
    0U,	// VSUBWuv2i64
    0U,	// VSUBWuv4i32
    0U,	// VSUBWuv8i16
    0U,	// VSUBfd
    0U,	// VSUBfq
    0U,	// VSUBhd
    0U,	// VSUBhq
    0U,	// VSUBv16i8
    17792U,	// VSUBv1i64
    0U,	// VSUBv2i32
    17792U,	// VSUBv2i64
    0U,	// VSUBv4i16
    0U,	// VSUBv4i32
    0U,	// VSUBv8i16
    0U,	// VSUBv8i8
    16384U,	// VSWPd
    16384U,	// VSWPq
    6784U,	// VTBL1
    6912U,	// VTBL2
    7040U,	// VTBL3
    0U,	// VTBL3Pseudo
    7168U,	// VTBL4
    0U,	// VTBL4Pseudo
    7296U,	// VTBX1
    7424U,	// VTBX2
    7552U,	// VTBX3
    0U,	// VTBX3Pseudo
    7680U,	// VTBX4
    0U,	// VTBX4Pseudo
    0U,	// VTOSHD
    64U,	// VTOSHH
    0U,	// VTOSHS
    0U,	// VTOSIRD
    0U,	// VTOSIRH
    0U,	// VTOSIRS
    0U,	// VTOSIZD
    0U,	// VTOSIZH
    0U,	// VTOSIZS
    66U,	// VTOSLD
    66U,	// VTOSLH
    66U,	// VTOSLS
    0U,	// VTOUHD
    64U,	// VTOUHH
    0U,	// VTOUHS
    0U,	// VTOUIRD
    0U,	// VTOUIRH
    0U,	// VTOUIRS
    0U,	// VTOUIZD
    0U,	// VTOUIZH
    0U,	// VTOUIZS
    66U,	// VTOULD
    66U,	// VTOULH
    66U,	// VTOULS
    16384U,	// VTRNd16
    16384U,	// VTRNd32
    16384U,	// VTRNd8
    16384U,	// VTRNq16
    16384U,	// VTRNq32
    16384U,	// VTRNq8
    0U,	// VTSTv16i8
    0U,	// VTSTv2i32
    0U,	// VTSTv4i16
    0U,	// VTSTv4i32
    0U,	// VTSTv8i16
    0U,	// VTSTv8i8
    2U,	// VUDOTD
    536U,	// VUDOTDI
    2U,	// VUDOTQ
    536U,	// VUDOTQI
    0U,	// VUHTOD
    64U,	// VUHTOH
    0U,	// VUHTOS
    0U,	// VUITOD
    0U,	// VUITOH
    0U,	// VUITOS
    66U,	// VULTOD
    66U,	// VULTOH
    66U,	// VULTOS
    16384U,	// VUZPd16
    16384U,	// VUZPd8
    16384U,	// VUZPq16
    16384U,	// VUZPq32
    16384U,	// VUZPq8
    16384U,	// VZIPd16
    16384U,	// VZIPd8
    16384U,	// VZIPq16
    16384U,	// VZIPq32
    16384U,	// VZIPq8
    395136U,	// sysLDMDA
    7820U,	// sysLDMDA_UPD
    395136U,	// sysLDMDB
    7820U,	// sysLDMDB_UPD
    395136U,	// sysLDMIA
    7820U,	// sysLDMIA_UPD
    395136U,	// sysLDMIB
    7820U,	// sysLDMIB_UPD
    395136U,	// sysSTMDA
    7820U,	// sysSTMDA_UPD
    395136U,	// sysSTMDB
    7820U,	// sysSTMDB_UPD
    395136U,	// sysSTMIA
    7820U,	// sysSTMIA_UPD
    395136U,	// sysSTMIB
    7820U,	// sysSTMIB_UPD
    0U,	// t2ADCri
    0U,	// t2ADCrr
    16252928U,	// t2ADCrs
    0U,	// t2ADDri
    0U,	// t2ADDri12
    0U,	// t2ADDrr
    16252928U,	// t2ADDrs
    0U,	// t2ADDspImm
    0U,	// t2ADDspImm12
    1152U,	// t2ADR
    0U,	// t2ANDri
    0U,	// t2ANDrr
    16252928U,	// t2ANDrs
    16777216U,	// t2ASRri
    0U,	// t2ASRrr
    2U,	// t2B
    1280U,	// t2BFC
    2098560U,	// t2BFI
    16384U,	// t2BFLi
    16384U,	// t2BFLr
    16384U,	// t2BFi
    17302912U,	// t2BFic
    16384U,	// t2BFr
    0U,	// t2BICri
    0U,	// t2BICrr
    16252928U,	// t2BICrs
    2U,	// t2BXJ
    2U,	// t2Bcc
    66312U,	// t2CDP
    66312U,	// t2CDP2
    0U,	// t2CLREX
    0U,	// t2CLRM
    16384U,	// t2CLZ
    16384U,	// t2CMNri
    16384U,	// t2CMNzrr
    896U,	// t2CMNzrs
    16384U,	// t2CMPri
    16384U,	// t2CMPrr
    896U,	// t2CMPrs
    0U,	// t2CPS1p
    2U,	// t2CPS2p
    17792U,	// t2CPS3p
    17792U,	// t2CRC32B
    17792U,	// t2CRC32CB
    17792U,	// t2CRC32CH
    17792U,	// t2CRC32CW
    17792U,	// t2CRC32H
    17792U,	// t2CRC32W
    17302912U,	// t2CSEL
    17302912U,	// t2CSINC
    17302912U,	// t2CSINV
    17302912U,	// t2CSNEG
    2U,	// t2DBG
    0U,	// t2DCPS1
    0U,	// t2DCPS2
    0U,	// t2DCPS3
    2U,	// t2DLS
    0U,	// t2DMB
    0U,	// t2DSB
    0U,	// t2EORri
    0U,	// t2EORrr
    16252928U,	// t2EORrs
    2U,	// t2HINT
    0U,	// t2HVC
    0U,	// t2ISB
    0U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    128U,	// t2LDA
    128U,	// t2LDAB
    128U,	// t2LDAEX
    128U,	// t2LDAEXB
    9961472U,	// t2LDAEXD
    128U,	// t2LDAEXH
    128U,	// t2LDAH
    2318U,	// t2LDC2L_OFFSET
    2623886U,	// t2LDC2L_OPTION
    3148174U,	// t2LDC2L_POST
    2574U,	// t2LDC2L_PRE
    2318U,	// t2LDC2_OFFSET
    2623886U,	// t2LDC2_OPTION
    3148174U,	// t2LDC2_POST
    2574U,	// t2LDC2_PRE
    2318U,	// t2LDCL_OFFSET
    2623886U,	// t2LDCL_OPTION
    3148174U,	// t2LDCL_POST
    2574U,	// t2LDCL_PRE
    2318U,	// t2LDC_OFFSET
    2623886U,	// t2LDC_OPTION
    3148174U,	// t2LDC_POST
    2574U,	// t2LDC_PRE
    18304U,	// t2LDMDB
    524U,	// t2LDMDB_UPD
    18304U,	// t2LDMIA
    524U,	// t2LDMIA_UPD
    3840U,	// t2LDRBT
    100736U,	// t2LDRB_POST
    4224U,	// t2LDRB_PRE
    2944U,	// t2LDRBi12
    3840U,	// t2LDRBi8
    7936U,	// t2LDRBpci
    8064U,	// t2LDRBs
    508035072U,	// t2LDRD_POST
    17825792U,	// t2LDRD_PRE
    18350080U,	// t2LDRDi8
    8192U,	// t2LDREX
    128U,	// t2LDREXB
    9961472U,	// t2LDREXD
    128U,	// t2LDREXH
    3840U,	// t2LDRHT
    100736U,	// t2LDRH_POST
    4224U,	// t2LDRH_PRE
    2944U,	// t2LDRHi12
    3840U,	// t2LDRHi8
    7936U,	// t2LDRHpci
    8064U,	// t2LDRHs
    3840U,	// t2LDRSBT
    100736U,	// t2LDRSB_POST
    4224U,	// t2LDRSB_PRE
    2944U,	// t2LDRSBi12
    3840U,	// t2LDRSBi8
    7936U,	// t2LDRSBpci
    8064U,	// t2LDRSBs
    3840U,	// t2LDRSHT
    100736U,	// t2LDRSH_POST
    4224U,	// t2LDRSH_PRE
    2944U,	// t2LDRSHi12
    3840U,	// t2LDRSHi8
    7936U,	// t2LDRSHpci
    8064U,	// t2LDRSHs
    3840U,	// t2LDRT
    100736U,	// t2LDR_POST
    4224U,	// t2LDR_PRE
    2944U,	// t2LDRi12
    3840U,	// t2LDRi8
    7936U,	// t2LDRpci
    8064U,	// t2LDRs
    0U,	// t2LE
    0U,	// t2LEUpdate
    0U,	// t2LSLri
    0U,	// t2LSLrr
    16777216U,	// t2LSRri
    0U,	// t2LSRrr
    74531592U,	// t2MCR
    74531592U,	// t2MCR2
    108086024U,	// t2MCRR
    108086024U,	// t2MCRR2
    33554432U,	// t2MLA
    33554432U,	// t2MLS
    17792U,	// t2MOVTi16
    16384U,	// t2MOVi
    16384U,	// t2MOVi16
    16384U,	// t2MOVr
    409600U,	// t2MOVsra_flag
    409600U,	// t2MOVsrl_flag
    0U,	// t2MRC
    0U,	// t2MRC2
    0U,	// t2MRRC
    0U,	// t2MRRC2
    16U,	// t2MRS_AR
    8320U,	// t2MRS_M
    3584U,	// t2MRSbanked
    18U,	// t2MRSsys_AR
    520U,	// t2MSR_AR
    520U,	// t2MSR_M
    0U,	// t2MSRbanked
    0U,	// t2MUL
    16384U,	// t2MVNi
    16384U,	// t2MVNr
    896U,	// t2MVNs
    0U,	// t2ORNri
    0U,	// t2ORNrr
    16252928U,	// t2ORNrs
    0U,	// t2ORRri
    0U,	// t2ORRrr
    16252928U,	// t2ORRrs
    167772160U,	// t2PKHBT
    201326592U,	// t2PKHTB
    0U,	// t2PLDWi12
    0U,	// t2PLDWi8
    0U,	// t2PLDWs
    0U,	// t2PLDi12
    0U,	// t2PLDi8
    0U,	// t2PLDpci
    0U,	// t2PLDs
    0U,	// t2PLIi12
    0U,	// t2PLIi8
    0U,	// t2PLIpci
    0U,	// t2PLIs
    0U,	// t2QADD
    0U,	// t2QADD16
    0U,	// t2QADD8
    0U,	// t2QASX
    0U,	// t2QDADD
    0U,	// t2QDSUB
    0U,	// t2QSAX
    0U,	// t2QSUB
    0U,	// t2QSUB16
    0U,	// t2QSUB8
    16384U,	// t2RBIT
    16384U,	// t2REV
    16384U,	// t2REV16
    16384U,	// t2REVSH
    2U,	// t2RFEDB
    4U,	// t2RFEDBW
    2U,	// t2RFEIA
    4U,	// t2RFEIAW
    0U,	// t2RORri
    0U,	// t2RORrr
    16384U,	// t2RRX
    0U,	// t2RSBri
    0U,	// t2RSBrr
    16252928U,	// t2RSBrs
    0U,	// t2SADD16
    0U,	// t2SADD8
    0U,	// t2SASX
    0U,	// t2SB
    0U,	// t2SBCri
    0U,	// t2SBCrr
    16252928U,	// t2SBCrs
    33554432U,	// t2SBFX
    0U,	// t2SDIV
    0U,	// t2SEL
    0U,	// t2SETPAN
    0U,	// t2SG
    0U,	// t2SHADD16
    0U,	// t2SHADD8
    0U,	// t2SHASX
    0U,	// t2SHSAX
    0U,	// t2SHSUB16
    0U,	// t2SHSUB8
    2U,	// t2SMC
    33554432U,	// t2SMLABB
    33554432U,	// t2SMLABT
    33554432U,	// t2SMLAD
    33554432U,	// t2SMLADX
    33554432U,	// t2SMLAL
    33554432U,	// t2SMLALBB
    33554432U,	// t2SMLALBT
    33554432U,	// t2SMLALD
    33554432U,	// t2SMLALDX
    33554432U,	// t2SMLALTB
    33554432U,	// t2SMLALTT
    33554432U,	// t2SMLATB
    33554432U,	// t2SMLATT
    33554432U,	// t2SMLAWB
    33554432U,	// t2SMLAWT
    33554432U,	// t2SMLSD
    33554432U,	// t2SMLSDX
    33554432U,	// t2SMLSLD
    33554432U,	// t2SMLSLDX
    33554432U,	// t2SMMLA
    33554432U,	// t2SMMLAR
    33554432U,	// t2SMMLS
    33554432U,	// t2SMMLSR
    0U,	// t2SMMUL
    0U,	// t2SMMULR
    0U,	// t2SMUAD
    0U,	// t2SMUADX
    0U,	// t2SMULBB
    0U,	// t2SMULBT
    33554432U,	// t2SMULL
    0U,	// t2SMULTB
    0U,	// t2SMULTT
    0U,	// t2SMULWB
    0U,	// t2SMULWT
    0U,	// t2SMUSD
    0U,	// t2SMUSDX
    0U,	// t2SRSDB
    0U,	// t2SRSDB_UPD
    0U,	// t2SRSIA
    0U,	// t2SRSIA_UPD
    185088U,	// t2SSAT
    21248U,	// t2SSAT16
    0U,	// t2SSAX
    0U,	// t2SSUB16
    0U,	// t2SSUB8
    2318U,	// t2STC2L_OFFSET
    2623886U,	// t2STC2L_OPTION
    3148174U,	// t2STC2L_POST
    2574U,	// t2STC2L_PRE
    2318U,	// t2STC2_OFFSET
    2623886U,	// t2STC2_OPTION
    3148174U,	// t2STC2_POST
    2574U,	// t2STC2_PRE
    2318U,	// t2STCL_OFFSET
    2623886U,	// t2STCL_OPTION
    3148174U,	// t2STCL_POST
    2574U,	// t2STCL_PRE
    2318U,	// t2STC_OFFSET
    2623886U,	// t2STC_OPTION
    3148174U,	// t2STC_POST
    2574U,	// t2STC_PRE
    128U,	// t2STL
    128U,	// t2STLB
    9961472U,	// t2STLEX
    9961472U,	// t2STLEXB
    33554432U,	// t2STLEXD
    9961472U,	// t2STLEXH
    128U,	// t2STLH
    18304U,	// t2STMDB
    524U,	// t2STMDB_UPD
    18304U,	// t2STMIA
    524U,	// t2STMIA_UPD
    3840U,	// t2STRBT
    100736U,	// t2STRB_POST
    4224U,	// t2STRB_PRE
    2944U,	// t2STRBi12
    3840U,	// t2STRBi8
    8064U,	// t2STRBs
    508036480U,	// t2STRD_POST
    17827200U,	// t2STRD_PRE
    18350080U,	// t2STRDi8
    18874368U,	// t2STREX
    9961472U,	// t2STREXB
    33554432U,	// t2STREXD
    9961472U,	// t2STREXH
    3840U,	// t2STRHT
    100736U,	// t2STRH_POST
    4224U,	// t2STRH_PRE
    2944U,	// t2STRHi12
    3840U,	// t2STRHi8
    8064U,	// t2STRHs
    3840U,	// t2STRT
    100736U,	// t2STR_POST
    4224U,	// t2STR_PRE
    2944U,	// t2STRi12
    3840U,	// t2STRi8
    8064U,	// t2STRs
    0U,	// t2SUBS_PC_LR
    0U,	// t2SUBri
    0U,	// t2SUBri12
    0U,	// t2SUBrr
    16252928U,	// t2SUBrs
    0U,	// t2SUBspImm
    0U,	// t2SUBspImm12
    234881024U,	// t2SXTAB
    234881024U,	// t2SXTAB16
    234881024U,	// t2SXTAH
    196608U,	// t2SXTB
    196608U,	// t2SXTB16
    196608U,	// t2SXTH
    0U,	// t2TBB
    1U,	// t2TBH
    16384U,	// t2TEQri
    16384U,	// t2TEQrr
    896U,	// t2TEQrs
    1U,	// t2TSB
    16384U,	// t2TSTri
    16384U,	// t2TSTrr
    896U,	// t2TSTrs
    16384U,	// t2TT
    16384U,	// t2TTA
    16384U,	// t2TTAT
    16384U,	// t2TTT
    0U,	// t2UADD16
    0U,	// t2UADD8
    0U,	// t2UASX
    33554432U,	// t2UBFX
    0U,	// t2UDF
    0U,	// t2UDIV
    0U,	// t2UHADD16
    0U,	// t2UHADD8
    0U,	// t2UHASX
    0U,	// t2UHSAX
    0U,	// t2UHSUB16
    0U,	// t2UHSUB8
    33554432U,	// t2UMAAL
    33554432U,	// t2UMLAL
    33554432U,	// t2UMULL
    0U,	// t2UQADD16
    0U,	// t2UQADD8
    0U,	// t2UQASX
    0U,	// t2UQSAX
    0U,	// t2UQSUB16
    0U,	// t2UQSUB8
    0U,	// t2USAD8
    33554432U,	// t2USADA8
    268435456U,	// t2USAT
    0U,	// t2USAT16
    0U,	// t2USAX
    0U,	// t2USUB16
    0U,	// t2USUB8
    234881024U,	// t2UXTAB
    234881024U,	// t2UXTAB16
    234881024U,	// t2UXTAH
    196608U,	// t2UXTB
    196608U,	// t2UXTB16
    196608U,	// t2UXTH
    17792U,	// t2WLS
    2U,	// tADC
    17792U,	// tADDhirr
    16768U,	// tADDi3
    2U,	// tADDi8
    0U,	// tADDrSP
    19398656U,	// tADDrSPi
    16768U,	// tADDrr
    8448U,	// tADDspi
    17792U,	// tADDspr
    8576U,	// tADR
    2U,	// tAND
    8704U,	// tASRri
    2U,	// tASRrr
    2U,	// tB
    2U,	// tBIC
    0U,	// tBKPT
    2U,	// tBL
    2U,	// tBLXNSr
    2U,	// tBLXi
    2U,	// tBLXr
    2U,	// tBX
    2U,	// tBXNS
    2U,	// tBcc
    2U,	// tCBNZ
    2U,	// tCBZ
    16384U,	// tCMNz
    16384U,	// tCMPhir
    16384U,	// tCMPi8
    16384U,	// tCMPr
    2U,	// tCPS
    2U,	// tEOR
    2U,	// tHINT
    0U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    18304U,	// tLDMIA
    8832U,	// tLDRBi
    8960U,	// tLDRBr
    9088U,	// tLDRHi
    8960U,	// tLDRHr
    8960U,	// tLDRSB
    8960U,	// tLDRSH
    9216U,	// tLDRi
    7936U,	// tLDRpci
    8960U,	// tLDRr
    9344U,	// tLDRspi
    16768U,	// tLSLri
    2U,	// tLSLrr
    8704U,	// tLSRri
    2U,	// tLSRrr
    2U,	// tMOVSr
    0U,	// tMOVi8
    16384U,	// tMOVr
    16768U,	// tMUL
    0U,	// tMVN
    2U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPUSH
    16384U,	// tREV
    16384U,	// tREV16
    16384U,	// tREVSH
    2U,	// tROR
    0U,	// tRSB
    2U,	// tSBC
    0U,	// tSETEND
    524U,	// tSTMIA_UPD
    8832U,	// tSTRBi
    8960U,	// tSTRBr
    9088U,	// tSTRHi
    8960U,	// tSTRHr
    9216U,	// tSTRi
    8960U,	// tSTRr
    9344U,	// tSTRspi
    16768U,	// tSUBi3
    2U,	// tSUBi8
    16768U,	// tSUBrr
    8448U,	// tSUBspi
    2U,	// tSVC
    16384U,	// tSXTB
    16384U,	// tSXTH
    0U,	// tTRAP
    16384U,	// tTST
    0U,	// tUDF
    16384U,	// tUXTB
    16384U,	// tUXTH
    0U,	// t__brkdiv0
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 6 bits for 42 unique commands.
  switch ((Bits >> 13) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCri, ADCrr, ADDri, A...
    printSBitModifierOperand(MI, 5, STI, O);
    printPredicateOperand(MI, 3, STI, O);
    break;
  case 2:
    // ITasm, t2IT
    printThumbITMask(MI, 1, STI, O);
    break;
  case 3:
    // LDRBT_POST, LDRConstPool, LDRT_POST, STRBT_POST, STRT_POST, t2LDRBpcre...
    printPredicateOperand(MI, 2, STI, O);
    break;
  case 4:
    // RRXi, MOVi, MOVr, MOVr_TC, MVNi, MVNr, t2MOVi, t2MOVr, t2MVNi, t2MVNr,...
    printSBitModifierOperand(MI, 4, STI, O);
    printPredicateOperand(MI, 2, STI, O);
    break;
  case 5:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printPredicateOperand(MI, 4, STI, O);
    break;
  case 6:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printPredicateOperand(MI, 5, STI, O);
    break;
  case 7:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printPredicateOperand(MI, 3, STI, O);
    break;
  case 8:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, MLA, MOVsr, MVNsr, ORRrsi, RSB...
    printSBitModifierOperand(MI, 6, STI, O);
    printPredicateOperand(MI, 4, STI, O);
    break;
  case 9:
    // ADCrsr, ADDrsr, ANDrsr, BICrsr, EORrsr, ORRrsr, RSBrsr, RSCrsr, SBCrsr...
    printSBitModifierOperand(MI, 7, STI, O);
    printPredicateOperand(MI, 5, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printSORegRegOperand(MI, 2, STI, O);
    return;
    break;
  case 10:
    // AESD, AESE, AESIMC, AESMC, BKPT, BL, BLX, BLXi, BX, CPS1p, CRC32B, CRC...
    printOperand(MI, 0, STI, O);
    break;
  case 11:
    // BLX_pred, BL_pred, BXJ, BX_pred, Bcc, DBG, FLDMXIA, FSTMXIA, HINT, LDM...
    printPredicateOperand(MI, 1, STI, O);
    break;
  case 12:
    // BX_RET, ERET, FMSTAT, MOVPCLR, MVE_LCTP, VSCCLRMD, VSCCLRMS, t2CLREX, ...
    printPredicateOperand(MI, 0, STI, O);
    break;
  case 13:
    // CDP, LDRD_POST, LDRD_PRE, MCR, MRC, MVE_SQRSHRL, MVE_UQRSHLL, MVE_VMOV...
    printPredicateOperand(MI, 6, STI, O);
    break;
  case 14:
    // CDP2, LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, ...
    printPImmediate(MI, 0, STI, O);
    O << ", ";
    break;
  case 15:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIMod(MI, 0, STI, O);
    break;
  case 16:
    // DMB, DSB
    printMemBOption(MI, 0, STI, O);
    return;
    break;
  case 17:
    // ISB
    printInstSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 18:
    // MRC2
    printPImmediate(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 19:
    // MRRC2
    printPImmediate(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 20:
    // MVE_LETP, VSDOTD, VSDOTDI, VSDOTQ, VSDOTQI, VUDOTD, VUDOTDI, VUDOTQ, V...
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  case 21:
    // MVE_VABAVs16, MVE_VABAVs32, MVE_VABAVs8, MVE_VABAVu16, MVE_VABAVu32, M...
    printVPTPredicateOperand(MI, 4, STI, O);
    break;
  case 22:
    // MVE_VABDf16, MVE_VABDf32, MVE_VABDs16, MVE_VABDs32, MVE_VABDs8, MVE_VA...
    printVPTPredicateOperand(MI, 3, STI, O);
    break;
  case 23:
    // MVE_VABSf16, MVE_VABSf32, MVE_VABSs16, MVE_VABSs32, MVE_VABSs8, MVE_VA...
    printVPTPredicateOperand(MI, 2, STI, O);
    break;
  case 24:
    // MVE_VADC, MVE_VADDLVs32acc, MVE_VADDLVu32acc, MVE_VCMLAf16, MVE_VCMLAf...
    printVPTPredicateOperand(MI, 5, STI, O);
    break;
  case 25:
    // MVE_VLD20_16, MVE_VLD20_16_wb, MVE_VLD20_32, MVE_VLD20_32_wb, MVE_VLD2...
    printMVEVectorList<2>(MI, 0, STI, O);
    O << ", ";
    break;
  case 26:
    // MVE_VLD40_16, MVE_VLD40_16_wb, MVE_VLD40_32, MVE_VLD40_32_wb, MVE_VLD4...
    printMVEVectorList<4>(MI, 0, STI, O);
    O << ", ";
    break;
  case 27:
    // MVE_VMLALDAVas16, MVE_VMLALDAVas32, MVE_VMLALDAVau16, MVE_VMLALDAVau32...
    printVPTPredicateOperand(MI, 6, STI, O);
    break;
  case 28:
    // MVE_VPST, MVE_VPTv16i8, MVE_VPTv16i8r, MVE_VPTv16s8, MVE_VPTv16s8r, MV...
    printVPTMask(MI, 0, STI, O);
    break;
  case 29:
    // MVE_VST20_16_wb, MVE_VST20_32_wb, MVE_VST20_8_wb, MVE_VST21_16_wb, MVE...
    printMVEVectorList<2>(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 30:
    // MVE_VST40_16_wb, MVE_VST40_32_wb, MVE_VST40_8_wb, MVE_VST41_16_wb, MVE...
    printMVEVectorList<4>(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 31:
    // PLDWi12, PLDi12, PLIi12
    printAddrModeImm12Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 32:
    // PLDWrs, PLDrs, PLIrs
    printAddrMode2Operand(MI, 0, STI, O);
    return;
    break;
  case 33:
    // SETEND, tSETEND
    printSetendOperand(MI, 0, STI, O);
    return;
    break;
  case 34:
    // SMLAL, UMLAL
    printSBitModifierOperand(MI, 8, STI, O);
    printPredicateOperand(MI, 6, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 35:
    // TSB
    printTraceSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 36:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printPredicateOperand(MI, 7, STI, O);
    break;
  case 37:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printPredicateOperand(MI, 9, STI, O);
    break;
  case 38:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printPredicateOperand(MI, 11, STI, O);
    break;
  case 39:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printPredicateOperand(MI, 8, STI, O);
    break;
  case 40:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printPredicateOperand(MI, 13, STI, O);
    break;
  case 41:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printSBitModifierOperand(MI, 1, STI, O);
    break;
  }


  // Fragment 1 encoded into 7 bits for 83 unique commands.
  switch ((Bits >> 19) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, ITasm, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LS...
    O << ' ';
    break;
  case 1:
    // VLD1LNdAsm_16, VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_register_Asm_16, VLD2...
    O << ".16\t";
    break;
  case 2:
    // VLD1LNdAsm_32, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_register_Asm_32, VLD2...
    O << ".32\t";
    break;
  case 3:
    // VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_8, VLD1LNdWB_register_Asm_8, VLD2LNd...
    O << ".8\t";
    break;
  case 4:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    O << "\t";
    break;
  case 5:
    // AESD, AESE, AESIMC, AESMC, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, ...
    O << ", ";
    break;
  case 6:
    // BKPT, BL, BLX, BLXi, BX, CPS1p, ERET, HLT, HVC, MVE_LETP, RFEDA, RFEDB...
    return;
    break;
  case 7:
    // BX_RET
    O << "\tlr";
    return;
    break;
  case 8:
    // CDP2, MCR2, MCRR2
    printOperand(MI, 1, STI, O);
    O << ", ";
    break;
  case 9:
    // FCONSTD, VABSD, VADDD, VCMPD, VCMPED, VCMPEZD, VCMPZD, VDIVD, VFMAD, V...
    O << ".f64\t";
    printOperand(MI, 0, STI, O);
    break;
  case 10:
    // FCONSTH, MVE_VABDf16, MVE_VABSf16, MVE_VADD_qr_f16, MVE_VADDf16, MVE_V...
    O << ".f16\t";
    break;
  case 11:
    // FCONSTS, MVE_VABDf32, MVE_VABSf32, MVE_VADD_qr_f32, MVE_VADDf32, MVE_V...
    O << ".f32\t";
    break;
  case 12:
    // FMSTAT
    O << "\tAPSR_nzcv, fpscr";
    return;
    break;
  case 13:
    // LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, LDC2_O...
    printCImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 14:
    // MOVPCLR
    O << "\tpc, lr";
    return;
    break;
  case 15:
    // MVE_VABAVs16, MVE_VABDs16, MVE_VABSs16, MVE_VADDVs16acc, MVE_VADDVs16n...
    O << ".s16\t";
    break;
  case 16:
    // MVE_VABAVs32, MVE_VABDs32, MVE_VABSs32, MVE_VADDLVs32acc, MVE_VADDLVs3...
    O << ".s32\t";
    break;
  case 17:
    // MVE_VABAVs8, MVE_VABDs8, MVE_VABSs8, MVE_VADDVs8acc, MVE_VADDVs8no_acc...
    O << ".s8\t";
    break;
  case 18:
    // MVE_VABAVu16, MVE_VABDu16, MVE_VADDVu16acc, MVE_VADDVu16no_acc, MVE_VC...
    O << ".u16\t";
    break;
  case 19:
    // MVE_VABAVu32, MVE_VABDu32, MVE_VADDLVu32acc, MVE_VADDLVu32no_acc, MVE_...
    O << ".u32\t";
    break;
  case 20:
    // MVE_VABAVu8, MVE_VABDu8, MVE_VADDVu8acc, MVE_VADDVu8no_acc, MVE_VCMPu8...
    O << ".u8\t";
    break;
  case 21:
    // MVE_VADC, MVE_VADCI, MVE_VADD_qr_i32, MVE_VADDi32, MVE_VBICimmi32, MVE...
    O << ".i32\t";
    break;
  case 22:
    // MVE_VADD_qr_i16, MVE_VADDi16, MVE_VBICimmi16, MVE_VCADDi16, MVE_VCLZs1...
    O << ".i16\t";
    break;
  case 23:
    // MVE_VADD_qr_i8, MVE_VADDi8, MVE_VCADDi8, MVE_VCLZs8, MVE_VCMPi8, MVE_V...
    O << ".i8\t";
    break;
  case 24:
    // MVE_VCTP64, MVE_VSTRD64_qi, MVE_VSTRD64_qi_pre, MVE_VSTRD64_rq, MVE_VS...
    O << ".64\t";
    break;
  case 25:
    // MVE_VCVTf16f32bh, MVE_VCVTf16f32th, VCVTBSH, VCVTTSH, VCVTf2h
    O << ".f16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 26:
    // MVE_VCVTf16s16_fix, MVE_VCVTf16s16n, VCVTs2hd, VCVTs2hq, VCVTxs2hd, VC...
    O << ".f16.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 27:
    // MVE_VCVTf16u16_fix, MVE_VCVTf16u16n, VCVTu2hd, VCVTu2hq, VCVTxu2hd, VC...
    O << ".f16.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 28:
    // MVE_VCVTf32f16bh, MVE_VCVTf32f16th, VCVTBHS, VCVTTHS, VCVTh2f
    O << ".f32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 29:
    // MVE_VCVTf32s32_fix, MVE_VCVTf32s32n, VCVTs2fd, VCVTs2fq, VCVTxs2fd, VC...
    O << ".f32.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 30:
    // MVE_VCVTf32u32_fix, MVE_VCVTf32u32n, VCVTu2fd, VCVTu2fq, VCVTxu2fd, VC...
    O << ".f32.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 31:
    // MVE_VCVTs16f16_fix, MVE_VCVTs16f16a, MVE_VCVTs16f16m, MVE_VCVTs16f16n,...
    O << ".s16.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 32:
    // MVE_VCVTs32f32_fix, MVE_VCVTs32f32a, MVE_VCVTs32f32m, MVE_VCVTs32f32n,...
    O << ".s32.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 33:
    // MVE_VCVTu16f16_fix, MVE_VCVTu16f16a, MVE_VCVTu16f16m, MVE_VCVTu16f16n,...
    O << ".u16.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 34:
    // MVE_VCVTu32f32_fix, MVE_VCVTu32f32a, MVE_VCVTu32f32m, MVE_VCVTu32f32n,...
    O << ".u32.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 35:
    // MVE_VLD20_16, MVE_VLD20_32, MVE_VLD20_8, MVE_VLD21_16, MVE_VLD21_32, M...
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 36:
    // MVE_VLD20_16_wb, MVE_VLD20_32_wb, MVE_VLD20_8_wb, MVE_VLD21_16_wb, MVE...
    printAddrMode7Operand(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 37:
    // MVE_VLDRDU64_qi, MVE_VLDRDU64_qi_pre, MVE_VLDRDU64_rq, MVE_VLDRDU64_rq...
    O << ".u64\t";
    break;
  case 38:
    // MVE_VMOVimmi64, VADDHNv2i32, VADDv1i64, VADDv2i64, VMOVNv2i32, VMOVv1i...
    O << ".i64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 39:
    // MVE_VMULLBp16, MVE_VMULLTp16
    O << ".p16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 40:
    // MVE_VMULLBp8, MVE_VMULLTp8, VMULLp8, VMULpd, VMULpq
    O << ".p8\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 41:
    // MVE_VST20_16, MVE_VST20_32, MVE_VST20_8, MVE_VST21_16, MVE_VST21_32, M...
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 42:
    // RFEDA_UPD, RFEDB_UPD, RFEIA_UPD, RFEIB_UPD
    O << '!';
    return;
    break;
  case 43:
    // VCVTBDH, VCVTTDH
    O << ".f16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 44:
    // VCVTBHD, VCVTTHD
    O << ".f64.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 45:
    // VCVTDS
    O << ".f64.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 46:
    // VCVTSD
    O << ".f32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 47:
    // VJCVT, VTOSIRD, VTOSIZD, VTOSLD
    O << ".s32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 48:
    // VLD1LNd16, VLD1LNd16_UPD, VLD2LNd16, VLD2LNd16_UPD, VLD2LNq16, VLD2LNq...
    O << ".16\t{";
    break;
  case 49:
    // VLD1LNd32, VLD1LNd32_UPD, VLD2LNd32, VLD2LNd32_UPD, VLD2LNq32, VLD2LNq...
    O << ".32\t{";
    break;
  case 50:
    // VLD1LNd8, VLD1LNd8_UPD, VLD2LNd8, VLD2LNd8_UPD, VLD3DUPd8, VLD3DUPd8_U...
    O << ".8\t{";
    break;
  case 51:
    // VLDR_FPCXTNS_off, VLDR_FPCXTNS_post, VLDR_FPCXTNS_pre, VMSR_FPCXTNS, V...
    O << "\tfpcxtns, ";
    break;
  case 52:
    // VLDR_FPCXTS_off, VLDR_FPCXTS_post, VLDR_FPCXTS_pre, VMSR_FPCXTS, VSTR_...
    O << "\tfpcxts, ";
    break;
  case 53:
    // VLDR_FPSCR_NZCVQC_off, VLDR_FPSCR_NZCVQC_post, VLDR_FPSCR_NZCVQC_pre, ...
    O << "\tfpscr_nzcvqc, ";
    break;
  case 54:
    // VLDR_FPSCR_off, VLDR_FPSCR_post, VLDR_FPSCR_pre, VMSR, VSTR_FPSCR_off,...
    O << "\tfpscr, ";
    break;
  case 55:
    // VLDR_P0_off, VLDR_P0_post, VLDR_P0_pre, VMSR_P0, VSTR_P0_off, VSTR_P0_...
    O << "\tp0, ";
    break;
  case 56:
    // VLDR_VPR_off, VLDR_VPR_post, VLDR_VPR_pre, VMSR_VPR, VSTR_VPR_off, VST...
    O << "\tvpr, ";
    break;
  case 57:
    // VMSR_FPEXC
    O << "\tfpexc, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 58:
    // VMSR_FPINST
    O << "\tfpinst, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 59:
    // VMSR_FPINST2
    O << "\tfpinst2, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 60:
    // VMSR_FPSID
    O << "\tfpsid, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 61:
    // VQADDsv1i64, VQADDsv2i64, VQMOVNsuv2i32, VQMOVNsv2i32, VQRSHLsv1i64, V...
    O << ".s64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 62:
    // VSHTOD
    O << ".f64.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 63:
    // VSHTOS
    O << ".f32.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 64:
    // VSITOD, VSLTOD
    O << ".f64.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 65:
    // VSITOH, VSLTOH
    O << ".f16.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 66:
    // VTOSHD
    O << ".s16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 67:
    // VTOSHS
    O << ".s16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 68:
    // VTOSIRH, VTOSIZH, VTOSLH
    O << ".s32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 69:
    // VTOUHD
    O << ".u16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 70:
    // VTOUHS
    O << ".u16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 71:
    // VTOUIRD, VTOUIZD, VTOULD
    O << ".u32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 72:
    // VTOUIRH, VTOUIZH, VTOULH
    O << ".u32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 73:
    // VUHTOD
    O << ".f64.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 74:
    // VUHTOS
    O << ".f32.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 75:
    // VUITOD, VULTOD
    O << ".f64.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 76:
    // VUITOH, VULTOH
    O << ".f16.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 77:
    // t2ADCrr, t2ADCrs, t2ADDri, t2ADDrr, t2ADDrs, t2ADDspImm, t2ADR, t2ANDr...
    O << ".w\t";
    break;
  case 78:
    // t2SRSDB, t2SRSIA
    O << "\tsp, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 79:
    // t2SRSDB_UPD, t2SRSIA_UPD
    O << "\tsp!, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 80:
    // t2SUBS_PC_LR
    O << "\tpc, lr, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 81:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printPredicateOperand(MI, 4, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 82:
    // tMOVi8, tMVN, tRSB
    printPredicateOperand(MI, 3, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  }


  // Fragment 2 encoded into 7 bits for 66 unique commands.
  switch ((Bits >> 26) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LSRi, LSR...
    printOperand(MI, 0, STI, O);
    break;
  case 1:
    // ITasm, t2IT
    printMandatoryPredicateOperand(MI, 0, STI, O);
    return;
    break;
  case 2:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printVectorListThreeAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 3:
    // VLD3DUPqAsm_16, VLD3DUPqAsm_32, VLD3DUPqAsm_8, VLD3DUPqWB_fixed_Asm_16...
    printVectorListThreeSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printVectorListThree(MI, 0, STI, O);
    O << ", ";
    break;
  case 5:
    // VLD3qAsm_16, VLD3qAsm_32, VLD3qAsm_8, VLD3qWB_fixed_Asm_16, VLD3qWB_fi...
    printVectorListThreeSpaced(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 6:
    // VLD4DUPdAsm_16, VLD4DUPdAsm_32, VLD4DUPdAsm_8, VLD4DUPdWB_fixed_Asm_16...
    printVectorListFourAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 7:
    // VLD4DUPqAsm_16, VLD4DUPqAsm_32, VLD4DUPqAsm_8, VLD4DUPqWB_fixed_Asm_16...
    printVectorListFourSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 8:
    // VLD4dAsm_16, VLD4dAsm_32, VLD4dAsm_8, VLD4dWB_fixed_Asm_16, VLD4dWB_fi...
    printVectorListFour(MI, 0, STI, O);
    O << ", ";
    break;
  case 9:
    // VLD4qAsm_16, VLD4qAsm_32, VLD4qAsm_8, VLD4qWB_fixed_Asm_16, VLD4qWB_fi...
    printVectorListFourSpaced(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 10:
    // AESD, AESE, MCR2, MCRR2, MVE_VCVTf16f32bh, MVE_VCVTf16f32th, MVE_VCVTf...
    printOperand(MI, 2, STI, O);
    break;
  case 11:
    // AESIMC, AESMC, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, CRC32W, FLDM...
    printOperand(MI, 1, STI, O);
    break;
  case 12:
    // CDP, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OP...
    printPImmediate(MI, 0, STI, O);
    O << ", ";
    break;
  case 13:
    // CDP2
    printCImmediate(MI, 2, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 14:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIFlag(MI, 1, STI, O);
    break;
  case 15:
    // FCONSTD, MVE_VCVTf16s16_fix, MVE_VCVTf16u16_fix, MVE_VCVTf32s32_fix, M...
    O << ", ";
    break;
  case 16:
    // LDAEXD, LDREXD
    printGPRPairOperand(MI, 0, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 17:
    // LDC2L_OFFSET, LDC2_OFFSET, STC2L_OFFSET, STC2_OFFSET
    printAddrMode5Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 18:
    // LDC2L_OPTION, LDC2L_POST, LDC2_OPTION, LDC2_POST, STC2L_OPTION, STC2L_...
    printAddrMode7Operand(MI, 2, STI, O);
    break;
  case 19:
    // LDC2L_PRE, LDC2_PRE, STC2L_PRE, STC2_PRE
    printAddrMode5Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 20:
    // MRC, t2MRC, t2MRC2
    printPImmediate(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 21:
    // MRRC, t2MRRC, t2MRRC2
    printPImmediate(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 22:
    // MSR, MSRi, t2MSR_AR, t2MSR_M
    printMSRMaskOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 23:
    // MSRbanked, t2MSRbanked
    printBankedRegOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 24:
    // MVE_LCTP, MVE_VCVTf16s16n, MVE_VCVTf16u16n, MVE_VCVTf32s32n, MVE_VCVTf...
    return;
    break;
  case 25:
    // MVE_VCMPf16, MVE_VCMPf16r, MVE_VCMPf32, MVE_VCMPf32r, MVE_VCMPi16, MVE...
    printMandatoryRestrictedPredicateOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 26:
    // MVE_VMOVimmi64, VMOVv1i64, VMOVv2i64
    printVMOVModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 27:
    // VCMPEZD, VCMPZD, tRSB
    O << ", #0";
    return;
    break;
  case 28:
    // VLD1DUPd16, VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32, VLD...
    printVectorListOneAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 29:
    // VLD1DUPq16, VLD1DUPq16wb_fixed, VLD1DUPq16wb_register, VLD1DUPq32, VLD...
    printVectorListTwoAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 30:
    // VLD1d16, VLD1d16wb_fixed, VLD1d16wb_register, VLD1d32, VLD1d32wb_fixed...
    printVectorListOne(MI, 0, STI, O);
    O << ", ";
    break;
  case 31:
    // VLD1q16, VLD1q16wb_fixed, VLD1q16wb_register, VLD1q32, VLD1q32wb_fixed...
    printVectorListTwo(MI, 0, STI, O);
    O << ", ";
    break;
  case 32:
    // VLD2DUPd16x2, VLD2DUPd16x2wb_fixed, VLD2DUPd16x2wb_register, VLD2DUPd3...
    printVectorListTwoSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 33:
    // VLD2b16, VLD2b16wb_fixed, VLD2b16wb_register, VLD2b32, VLD2b32wb_fixed...
    printVectorListTwoSpaced(MI, 0, STI, O);
    O << ", ";
    break;
  case 34:
    // VLDR_FPCXTNS_off, VLDR_FPCXTS_off, VLDR_FPSCR_NZCVQC_off, VLDR_FPSCR_o...
    printT2AddrModeImm8s4Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 35:
    // VLDR_FPCXTNS_post, VLDR_FPCXTS_post, VLDR_FPSCR_NZCVQC_post, VLDR_FPSC...
    printAddrMode7Operand(MI, 1, STI, O);
    printT2AddrModeImm8s4OffsetOperand(MI, 2, STI, O);
    return;
    break;
  case 36:
    // VLDR_FPCXTNS_pre, VLDR_FPCXTS_pre, VLDR_FPSCR_NZCVQC_pre, VLDR_FPSCR_p...
    printT2AddrModeImm8s4Operand<true>(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 37:
    // VLDR_P0_off, VSTR_P0_off
    printT2AddrModeImm8s4Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 38:
    // VLDR_P0_pre, VSTR_P0_pre
    printT2AddrModeImm8s4Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 39:
    // VSCCLRMD, VSCCLRMS, t2CLRM, tPOP, tPUSH
    printRegisterList(MI, 2, STI, O);
    return;
    break;
  case 40:
    // VSDOTD, VSDOTDI, VSDOTQ, VSDOTQI, VUDOTD, VUDOTDI, VUDOTQ, VUDOTQI, tA...
    printOperand(MI, 3, STI, O);
    break;
  case 41:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST2LNd16_UPD, VST2LNd32_U...
    printOperand(MI, 4, STI, O);
    break;
  case 42:
    // VST1d16, VST1d32, VST1d64, VST1d8
    printVectorListOne(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 43:
    // VST1d16Q, VST1d32Q, VST1d64Q, VST1d8Q, VST2q16, VST2q32, VST2q8
    printVectorListFour(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 44:
    // VST1d16Qwb_fixed, VST1d32Qwb_fixed, VST1d64Qwb_fixed, VST1d8Qwb_fixed,...
    printVectorListFour(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 45:
    // VST1d16Qwb_register, VST1d32Qwb_register, VST1d64Qwb_register, VST1d8Q...
    printVectorListFour(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 46:
    // VST1d16T, VST1d32T, VST1d64T, VST1d8T
    printVectorListThree(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 47:
    // VST1d16Twb_fixed, VST1d32Twb_fixed, VST1d64Twb_fixed, VST1d8Twb_fixed
    printVectorListThree(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 48:
    // VST1d16Twb_register, VST1d32Twb_register, VST1d64Twb_register, VST1d8T...
    printVectorListThree(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 49:
    // VST1d16wb_fixed, VST1d32wb_fixed, VST1d64wb_fixed, VST1d8wb_fixed
    printVectorListOne(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 50:
    // VST1d16wb_register, VST1d32wb_register, VST1d64wb_register, VST1d8wb_r...
    printVectorListOne(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 51:
    // VST1q16, VST1q32, VST1q64, VST1q8, VST2d16, VST2d32, VST2d8
    printVectorListTwo(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 52:
    // VST1q16wb_fixed, VST1q32wb_fixed, VST1q64wb_fixed, VST1q8wb_fixed, VST...
    printVectorListTwo(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 53:
    // VST1q16wb_register, VST1q32wb_register, VST1q64wb_register, VST1q8wb_r...
    printVectorListTwo(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 54:
    // VST2b16, VST2b32, VST2b8
    printVectorListTwoSpaced(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 55:
    // VST2b16wb_fixed, VST2b32wb_fixed, VST2b8wb_fixed
    printVectorListTwoSpaced(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 56:
    // VST2b16wb_register, VST2b32wb_register, VST2b8wb_register
    printVectorListTwoSpaced(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 57:
    // t2DMB, t2DSB
    printMemBOption(MI, 0, STI, O);
    return;
    break;
  case 58:
    // t2ISB
    printInstSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 59:
    // t2PLDWi12, t2PLDi12, t2PLIi12
    printAddrModeImm12Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 60:
    // t2PLDWi8, t2PLDi8, t2PLIi8
    printT2AddrModeImm8Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 61:
    // t2PLDWs, t2PLDs, t2PLIs
    printT2AddrModeSoRegOperand(MI, 0, STI, O);
    return;
    break;
  case 62:
    // t2PLDpci, t2PLIpci
    printThumbLdrLabelOperand(MI, 0, STI, O);
    return;
    break;
  case 63:
    // t2TBB
    printAddrModeTBB(MI, 0, STI, O);
    return;
    break;
  case 64:
    // t2TBH
    printAddrModeTBH(MI, 0, STI, O);
    return;
    break;
  case 65:
    // t2TSB
    printTraceSyncBOption(MI, 0, STI, O);
    return;
    break;
  }


  // Fragment 3 encoded into 6 bits for 34 unique commands.
  switch ((Bits >> 33) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LSRi, LSR...
    O << ", ";
    break;
  case 1:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPqAsm_16, VLD3DUP...
    return;
    break;
  case 2:
    // VLD3DUPdWB_fixed_Asm_16, VLD3DUPdWB_fixed_Asm_32, VLD3DUPdWB_fixed_Asm...
    O << '!';
    return;
    break;
  case 3:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD3dWB_fixed_Asm_16, VLD3dWB_fi...
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 4:
    // CDP, MCR, MCRR, MSR, VABSD, VADDD, VCMPD, VCMPED, VDIVD, VMOVD, VMULD,...
    printOperand(MI, 1, STI, O);
    break;
  case 5:
    // FCONSTD
    printFPImmOperand(MI, 1, STI, O);
    return;
    break;
  case 6:
    // FLDMXDB_UPD, FLDMXIA_UPD, FSTMXDB_UPD, FSTMXIA_UPD, LDMDA_UPD, LDMDB_U...
    O << "!, ";
    printRegisterList(MI, 4, STI, O);
    break;
  case 7:
    // LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OPTION,...
    printCImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 8:
    // MRS, t2MRS_AR
    O << ", apsr";
    return;
    break;
  case 9:
    // MRSsys, t2MRSsys_AR
    O << ", spsr";
    return;
    break;
  case 10:
    // MSRi
    printModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 11:
    // MVE_VCVTf16s16_fix, MVE_VCVTf16u16_fix, MVE_VCVTf32s32_fix, MVE_VCVTf3...
    printOperand(MI, 2, STI, O);
    break;
  case 12:
    // MVE_VMOV_q_rr, VSDOTDI, VSDOTQI, VUDOTDI, VUDOTQI
    printVectorIndex(MI, 4, STI, O);
    break;
  case 13:
    // MVE_VMOV_to_lane_16, MVE_VMOV_to_lane_32, MVE_VMOV_to_lane_8, VSETLNi1...
    printVectorIndex(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 14:
    // VCMPEZH, VCMPEZS, VCMPZH, VCMPZS
    O << ", #0";
    return;
    break;
  case 15:
    // VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32wb_fixed, VLD1DUP...
    printAddrMode6Operand(MI, 2, STI, O);
    break;
  case 16:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << '[';
    break;
  case 17:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[], ";
    printOperand(MI, 1, STI, O);
    O << "[], ";
    printOperand(MI, 2, STI, O);
    break;
  case 18:
    // VLDR_P0_post, VSTR_P0_post
    printT2AddrModeImm8s4OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 19:
    // VMRS
    O << ", fpscr";
    return;
    break;
  case 20:
    // VMRS_FPCXTNS
    O << ", fpcxtns";
    return;
    break;
  case 21:
    // VMRS_FPCXTS
    O << ", fpcxts";
    return;
    break;
  case 22:
    // VMRS_FPEXC
    O << ", fpexc";
    return;
    break;
  case 23:
    // VMRS_FPINST
    O << ", fpinst";
    return;
    break;
  case 24:
    // VMRS_FPINST2
    O << ", fpinst2";
    return;
    break;
  case 25:
    // VMRS_FPSCR_NZCVQC
    O << ", fpscr_nzcvqc";
    return;
    break;
  case 26:
    // VMRS_FPSID
    O << ", fpsid";
    return;
    break;
  case 27:
    // VMRS_MVFR0
    O << ", mvfr0";
    return;
    break;
  case 28:
    // VMRS_MVFR1
    O << ", mvfr1";
    return;
    break;
  case 29:
    // VMRS_MVFR2
    O << ", mvfr2";
    return;
    break;
  case 30:
    // VMRS_P0
    O << ", p0";
    return;
    break;
  case 31:
    // VMRS_VPR
    O << ", vpr";
    return;
    break;
  case 32:
    // VSHTOH, VTOSHH, VTOUHH, VUHTOH
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 33:
    // VSLTOD, VSLTOH, VSLTOS, VTOSLD, VTOSLH, VTOSLS, VTOULD, VTOULH, VTOULS...
    printFBits32(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 4 encoded into 7 bits for 74 unique commands.
  switch ((Bits >> 39) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LDRConstPool, LSLi, LSLr, LSRi, LSRr, RORi, RORr, RRXi, t2...
    printOperand(MI, 1, STI, O);
    break;
  case 1:
    // LDRBT_POST, LDRT_POST, STRBT_POST, STRT_POST, LDA, LDAB, LDAEX, LDAEXB...
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 2:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printAddrMode6Operand(MI, 2, STI, O);
    break;
  case 3:
    // VLD3DUPdWB_register_Asm_16, VLD3DUPdWB_register_Asm_32, VLD3DUPdWB_reg...
    printOperand(MI, 3, STI, O);
    break;
  case 4:
    // VLD3dAsm_16, VLD3dAsm_32, VLD3dAsm_8, VLD4dAsm_16, VLD4dAsm_32, VLD4dA...
    return;
    break;
  case 5:
    // VLD3dWB_fixed_Asm_16, VLD3dWB_fixed_Asm_32, VLD3dWB_fixed_Asm_8, VLD4d...
    O << '!';
    return;
    break;
  case 6:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    O << ", ";
    break;
  case 7:
    // t2MOVSsi, t2MOVsi, t2CMNzrs, t2CMPrs, t2MVNs, t2TEQrs, t2TSTrs
    printT2SOOperand(MI, 1, STI, O);
    return;
    break;
  case 8:
    // t2MOVSsr, t2MOVsr, CMNzrsr, CMPrsr, MOVsr, MVNsr, TEQrsr, TSTrsr
    printSORegRegOperand(MI, 1, STI, O);
    return;
    break;
  case 9:
    // ADR, t2ADR
    printAdrLabelOperand<0>(MI, 1, STI, O);
    return;
    break;
  case 10:
    // BFC, t2BFC
    printBitfieldInvMaskImmOperand(MI, 2, STI, O);
    return;
    break;
  case 11:
    // BFI, CPS3p, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, CRC32W, MOVTi16...
    printOperand(MI, 2, STI, O);
    break;
  case 12:
    // CMNri, CMPri, MOVi, MVNi, TEQri, TSTri
    printModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 13:
    // CMNzrsi, CMPrsi, MOVsi, MVNsi, TEQrsi, TSTrsi
    printSORegImmOperand(MI, 1, STI, O);
    return;
    break;
  case 14:
    // FCONSTH, FCONSTS, MVE_VMOVimmf32, VMOVv2f32, VMOVv4f32
    printFPImmOperand(MI, 1, STI, O);
    return;
    break;
  case 15:
    // FLDMXIA, FSTMXIA, LDMDA, LDMDB, LDMIA, LDMIB, STMDA, STMDB, STMIA, STM...
    printRegisterList(MI, 3, STI, O);
    break;
  case 16:
    // LDC2L_OPTION, LDC2_OPTION, STC2L_OPTION, STC2_OPTION
    printCoprocOptionImm(MI, 3, STI, O);
    return;
    break;
  case 17:
    // LDC2L_POST, LDC2_POST, STC2L_POST, STC2_POST
    printPostIdxImm8s4Operand(MI, 3, STI, O);
    return;
    break;
  case 18:
    // LDCL_OFFSET, LDC_OFFSET, STCL_OFFSET, STC_OFFSET, t2LDC2L_OFFSET, t2LD...
    printAddrMode5Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 19:
    // LDCL_OPTION, LDCL_POST, LDC_OPTION, LDC_POST, LDRBT_POST_IMM, LDRBT_PO...
    printAddrMode7Operand(MI, 2, STI, O);
    break;
  case 20:
    // LDCL_PRE, LDC_PRE, STCL_PRE, STC_PRE, t2LDC2L_PRE, t2LDC2_PRE, t2LDCL_...
    printAddrMode5Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 21:
    // LDRB_PRE_IMM, LDR_PRE_IMM, STRB_PRE_IMM, STR_PRE_IMM
    printAddrModeImm12Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 22:
    // LDRB_PRE_REG, LDR_PRE_REG, STRB_PRE_REG, STR_PRE_REG
    printAddrMode2Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 23:
    // LDRBi12, LDRcp, LDRi12, STRBi12, STRi12, t2LDRBi12, t2LDRHi12, t2LDRSB...
    printAddrModeImm12Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 24:
    // LDRBrs, LDRrs, STRBrs, STRrs
    printAddrMode2Operand(MI, 1, STI, O);
    return;
    break;
  case 25:
    // LDRH, LDRSB, LDRSH, STRH
    printAddrMode3Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 26:
    // LDRH_PRE, LDRSB_PRE, LDRSH_PRE, STRH_PRE
    printAddrMode3Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 27:
    // MCR2
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 28:
    // MRSbanked, t2MRSbanked
    printBankedRegOperand(MI, 1, STI, O);
    return;
    break;
  case 29:
    // MVE_VBICimmi16, MVE_VBICimmi32, MVE_VORRimmi16, MVE_VORRimmi32
    printVMOVModImmOperand(MI, 2, STI, O);
    return;
    break;
  case 30:
    // MVE_VLDRBS16, MVE_VLDRBS32, MVE_VLDRBU16, MVE_VLDRBU32, MVE_VLDRBU8, M...
    printT2AddrModeImm8Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 31:
    // MVE_VLDRBS16_pre, MVE_VLDRBS32_pre, MVE_VLDRBU16_pre, MVE_VLDRBU32_pre...
    printT2AddrModeImm8Operand<false>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 32:
    // MVE_VLDRBS16_rq, MVE_VLDRBS32_rq, MVE_VLDRBU16_rq, MVE_VLDRBU32_rq, MV...
    printMveAddrModeRQOperand<0>(MI, 1, STI, O);
    return;
    break;
  case 33:
    // MVE_VLDRBU8_pre, MVE_VLDRHU16_pre, MVE_VLDRWU32_pre, MVE_VSTRBU8_pre, ...
    printT2AddrModeImm8Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 34:
    // MVE_VLDRDU64_rq, MVE_VSTRD64_rq
    printMveAddrModeRQOperand<3>(MI, 1, STI, O);
    return;
    break;
  case 35:
    // MVE_VLDRHS32_rq, MVE_VLDRHU16_rq, MVE_VLDRHU32_rq, MVE_VSTRH16_rq, MVE...
    printMveAddrModeRQOperand<1>(MI, 1, STI, O);
    return;
    break;
  case 36:
    // MVE_VLDRWU32_rq, MVE_VSTRW32_rq
    printMveAddrModeRQOperand<2>(MI, 1, STI, O);
    return;
    break;
  case 37:
    // MVE_VMOVimmi16, MVE_VMOVimmi32, MVE_VMOVimmi8, MVE_VMVNimmi16, MVE_VMV...
    printVMOVModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 38:
    // SSAT, SSAT16, t2SSAT, t2SSAT16
    printImmPlusOneOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  case 39:
    // STLEXD, STREXD
    printGPRPairOperand(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 40:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST2LNd16, VST2LNd32, VST2LNd8, VST2LN...
    printNoHashImmediate(MI, 4, STI, O);
    break;
  case 41:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printNoHashImmediate(MI, 6, STI, O);
    break;
  case 42:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    break;
  case 43:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[]}, ";
    break;
  case 44:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printNoHashImmediate(MI, 10, STI, O);
    O << "], ";
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 10, STI, O);
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 10, STI, O);
    break;
  case 45:
    // VLD4DUPd16, VLD4DUPd16_UPD, VLD4DUPd32, VLD4DUPd32_UPD, VLD4DUPd8, VLD...
    O << "[], ";
    printOperand(MI, 3, STI, O);
    O << "[]}, ";
    break;
  case 46:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 3, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case 47:
    // VLDRD, VLDRS, VSTRD, VSTRS
    printAddrMode5Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 48:
    // VLDRH, VSTRH
    printAddrMode5FP16Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 49:
    // VST1LNd16, VST1LNd32, VST1LNd8
    printNoHashImmediate(MI, 3, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 50:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST3LNd16, VST3LNd32, VST3...
    printNoHashImmediate(MI, 5, STI, O);
    break;
  case 51:
    // VST3LNd16_UPD, VST3LNd32_UPD, VST3LNd8_UPD, VST3LNq16_UPD, VST3LNq32_U...
    printNoHashImmediate(MI, 7, STI, O);
    O << "], ";
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 7, STI, O);
    O << "], ";
    printOperand(MI, 6, STI, O);
    O << '[';
    printNoHashImmediate(MI, 7, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 52:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    printOperand(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 6, STI, O);
    break;
  case 53:
    // VTBL1
    printVectorListOne(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 54:
    // VTBL2
    printVectorListTwo(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 55:
    // VTBL3
    printVectorListThree(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 56:
    // VTBL4
    printVectorListFour(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 57:
    // VTBX1
    printVectorListOne(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 58:
    // VTBX2
    printVectorListTwo(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 59:
    // VTBX3
    printVectorListThree(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 60:
    // VTBX4
    printVectorListFour(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 61:
    // sysLDMDA_UPD, sysLDMDB_UPD, sysLDMIA_UPD, sysLDMIB_UPD, sysSTMDA_UPD, ...
    O << " ^";
    return;
    break;
  case 62:
    // t2LDRBpci, t2LDRHpci, t2LDRSBpci, t2LDRSHpci, t2LDRpci, tLDRpci
    printThumbLdrLabelOperand(MI, 1, STI, O);
    return;
    break;
  case 63:
    // t2LDRBs, t2LDRHs, t2LDRSBs, t2LDRSHs, t2LDRs, t2STRBs, t2STRHs, t2STRs
    printT2AddrModeSoRegOperand(MI, 1, STI, O);
    return;
    break;
  case 64:
    // t2LDREX
    printT2AddrModeImm0_1020s4Operand(MI, 1, STI, O);
    return;
    break;
  case 65:
    // t2MRS_M
    printMSRMaskOperand(MI, 1, STI, O);
    return;
    break;
  case 66:
    // tADDspi, tSUBspi
    printThumbS4ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 67:
    // tADR
    printAdrLabelOperand<2>(MI, 1, STI, O);
    return;
    break;
  case 68:
    // tASRri, tLSRri
    printThumbSRImm(MI, 3, STI, O);
    return;
    break;
  case 69:
    // tLDRBi, tSTRBi
    printThumbAddrModeImm5S1Operand(MI, 1, STI, O);
    return;
    break;
  case 70:
    // tLDRBr, tLDRHr, tLDRSB, tLDRSH, tLDRr, tSTRBr, tSTRHr, tSTRr
    printThumbAddrModeRROperand(MI, 1, STI, O);
    return;
    break;
  case 71:
    // tLDRHi, tSTRHi
    printThumbAddrModeImm5S2Operand(MI, 1, STI, O);
    return;
    break;
  case 72:
    // tLDRi, tSTRi
    printThumbAddrModeImm5S4Operand(MI, 1, STI, O);
    return;
    break;
  case 73:
    // tLDRspi, tSTRspi
    printThumbAddrModeSPOperand(MI, 1, STI, O);
    return;
    break;
  }


  // Fragment 5 encoded into 5 bits for 26 unique commands.
  switch ((Bits >> 46) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    O << ", ";
    break;
  case 1:
    // LDRConstPool, RRXi, VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD2LN...
    return;
    break;
  case 2:
    // VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_fixed_Asm_8,...
    O << '!';
    return;
    break;
  case 3:
    // VLD3dWB_register_Asm_16, VLD3dWB_register_Asm_32, VLD3dWB_register_Asm...
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 4:
    // CDP, t2CDP, t2CDP2
    printCImmediate(MI, 2, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 5:
    // MCR, MCRR, VADDD, VDIVD, VMULD, VNMULD, VSUBD, t2MCR, t2MCR2, t2MCRR, ...
    printOperand(MI, 2, STI, O);
    break;
  case 6:
    // MVE_VLDRBS16_post, MVE_VLDRBS32_post, MVE_VLDRBU16_post, MVE_VLDRBU32_...
    printT2AddrModeImm8OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 7:
    // MVE_VMOV_from_lane_32, MVE_VMOV_from_lane_s16, MVE_VMOV_from_lane_s8, ...
    printVectorIndex(MI, 2, STI, O);
    return;
    break;
  case 8:
    // MVE_VMOV_q_rr, VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_U...
    printOperand(MI, 1, STI, O);
    break;
  case 9:
    // MVE_VSHLL_lws16bh, MVE_VSHLL_lws16th, MVE_VSHLL_lwu16bh, MVE_VSHLL_lwu...
    O << ", #16";
    return;
    break;
  case 10:
    // MVE_VSHLL_lws8bh, MVE_VSHLL_lws8th, MVE_VSHLL_lwu8bh, MVE_VSHLL_lwu8th
    O << ", #8";
    return;
    break;
  case 11:
    // SSAT, t2SSAT
    printShiftImmOperand(MI, 3, STI, O);
    return;
    break;
  case 12:
    // SXTB, SXTB16, SXTH, UXTB, UXTB16, UXTH, t2SXTB, t2SXTB16, t2SXTH, t2UX...
    printRotImmOperand(MI, 2, STI, O);
    return;
    break;
  case 13:
    // VCEQzv16i8, VCEQzv2f32, VCEQzv2i32, VCEQzv4f16, VCEQzv4f32, VCEQzv4i16...
    O << ", #0";
    return;
    break;
  case 14:
    // VCMLAv2f32_indexed, VCMLAv4f16_indexed, VCMLAv4f32_indexed, VCMLAv8f16...
    printVectorIndex(MI, 4, STI, O);
    O << ", ";
    printComplexRotationOp<90, 0>(MI, 5, STI, O);
    return;
    break;
  case 15:
    // VFMALDI, VFMALQI, VFMSLDI, VFMSLQI
    printVectorIndex(MI, 3, STI, O);
    return;
    break;
  case 16:
    // VLD1DUPd16wb_register, VLD1DUPd32wb_register, VLD1DUPd8wb_register, VL...
    printOperand(MI, 4, STI, O);
    return;
    break;
  case 17:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << "]}, ";
    break;
  case 18:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32, VLD4LNd16, VLD4L...
    O << "], ";
    break;
  case 19:
    // VLD3DUPd16, VLD3DUPd32, VLD3DUPd8, VLD3DUPq16, VLD3DUPq32, VLD3DUPq8
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 20:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6Operand(MI, 4, STI, O);
    break;
  case 21:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case 22:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    O << "}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 23:
    // VST4LNd16_UPD, VST4LNd32_UPD, VST4LNd8_UPD, VST4LNq16_UPD, VST4LNq32_U...
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    printOperand(MI, 6, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    printOperand(MI, 7, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 24:
    // sysLDMDA, sysLDMDB, sysLDMIA, sysLDMIB, sysSTMDA, sysSTMDB, sysSTMIA, ...
    O << " ^";
    return;
    break;
  case 25:
    // t2MOVsra_flag, t2MOVsrl_flag
    O << ", #1";
    return;
    break;
  }


  // Fragment 6 encoded into 6 bits for 38 unique commands.
  switch ((Bits >> 51) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, ADCrr, ADDrr, ANDrr, B...
    printOperand(MI, 2, STI, O);
    break;
  case 1:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printOperand(MI, 4, STI, O);
    break;
  case 2:
    // ADCri, ADDri, ANDri, BICri, EORri, ORRri, RSBri, RSCri, SBCri, SUBri
    printModImmOperand(MI, 2, STI, O);
    return;
    break;
  case 3:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, ORRrsi, RSBrsi, RSCrsi, SBCrsi...
    printSORegImmOperand(MI, 2, STI, O);
    return;
    break;
  case 4:
    // BFI, t2BFI
    printBitfieldInvMaskImmOperand(MI, 3, STI, O);
    return;
    break;
  case 5:
    // LDCL_OPTION, LDC_OPTION, STCL_OPTION, STC_OPTION, t2LDC2L_OPTION, t2LD...
    printCoprocOptionImm(MI, 3, STI, O);
    return;
    break;
  case 6:
    // LDCL_POST, LDC_POST, STCL_POST, STC_POST, t2LDC2L_POST, t2LDC2_POST, t...
    printPostIdxImm8s4Operand(MI, 3, STI, O);
    return;
    break;
  case 7:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRT_POS...
    printAddrMode2OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 8:
    // LDRD, STRD
    printAddrMode3Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 9:
    // LDRD_POST, STRD_POST, t2LDRD_POST, t2STRD_POST
    printAddrMode7Operand(MI, 3, STI, O);
    break;
  case 10:
    // LDRD_PRE, STRD_PRE
    printAddrMode3Operand<true>(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 11:
    // LDRHTi, LDRSBTi, LDRSHTi, STRHTi
    printPostIdxImm8Operand(MI, 3, STI, O);
    return;
    break;
  case 12:
    // LDRHTr, LDRSBTr, LDRSHTr, STRHTr
    printPostIdxRegOperand(MI, 3, STI, O);
    return;
    break;
  case 13:
    // LDRH_POST, LDRSB_POST, LDRSH_POST, STRH_POST
    printAddrMode3OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 14:
    // MCR, MCRR, t2MCR, t2MCR2, t2MCRR, t2MCRR2
    O << ", ";
    break;
  case 15:
    // MCRR2
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 16:
    // MVE_SQRSHRL, MVE_UQRSHLL
    printMveSaturateOp(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 4, STI, O);
    return;
    break;
  case 17:
    // MVE_VABAVs16, MVE_VABAVs32, MVE_VABAVs8, MVE_VABAVu16, MVE_VABAVu32, M...
    printOperand(MI, 3, STI, O);
    break;
  case 18:
    // MVE_VMOV_q_rr
    printVectorIndex(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 19:
    // STLEX, STLEXB, STLEXH, STREX, STREXB, STREXH, SWP, SWPB, t2LDAEXD, t2L...
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 20:
    // VADDD, VDIVD, VLD4DUPd16, VLD4DUPd32, VLD4DUPd8, VLD4DUPq16, VLD4DUPq3...
    return;
    break;
  case 21:
    // VCADDv2f32, VCADDv4f16, VCADDv4f32, VCADDv8f16
    printComplexRotationOp<180, 90>(MI, 3, STI, O);
    return;
    break;
  case 22:
    // VCMLAv2f32, VCMLAv4f16, VCMLAv4f32, VCMLAv8f16
    printComplexRotationOp<90, 0>(MI, 4, STI, O);
    return;
    break;
  case 23:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8...
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 24:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD
    printAddrMode6Operand(MI, 2, STI, O);
    printAddrMode6OffsetOperand(MI, 4, STI, O);
    return;
    break;
  case 25:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 2, STI, O);
    return;
    break;
  case 26:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    break;
  case 27:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 28:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printAddrMode6Operand(MI, 4, STI, O);
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 29:
    // VST2LNd16_UPD, VST2LNd32_UPD, VST2LNd8_UPD, VST2LNq16_UPD, VST2LNq32_U...
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 30:
    // VST4d16_UPD, VST4d32_UPD, VST4d8_UPD, VST4q16_UPD, VST4q32_UPD, VST4q8...
    printOperand(MI, 7, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 31:
    // t2ADCrs, t2ADDrs, t2ANDrs, t2BICrs, t2EORrs, t2ORNrs, t2ORRrs, t2RSBrs...
    printT2SOOperand(MI, 2, STI, O);
    return;
    break;
  case 32:
    // t2ASRri, t2LSRri
    printThumbSRImm(MI, 2, STI, O);
    return;
    break;
  case 33:
    // t2BFic, t2CSEL, t2CSINC, t2CSINV, t2CSNEG
    printMandatoryPredicateOperand(MI, 3, STI, O);
    return;
    break;
  case 34:
    // t2LDRD_PRE, t2STRD_PRE
    printT2AddrModeImm8s4Operand<true>(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 35:
    // t2LDRDi8, t2STRDi8
    printT2AddrModeImm8s4Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 36:
    // t2STREX
    printT2AddrModeImm0_1020s4Operand(MI, 2, STI, O);
    return;
    break;
  case 37:
    // tADDrSPi
    printThumbS4ImmOperand(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 7 encoded into 4 bits for 16 unique commands.
  switch ((Bits >> 57) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ASRi, ASRr, LSLi, LSLr, LSRi, LSRr, RORi, RORr, VLD1LNdWB_register_Asm...
    return;
    break;
  case 1:
    // LDRD_POST, MLA, MLS, MVE_VCADDf16, MVE_VCADDf32, MVE_VCADDi16, MVE_VCA...
    O << ", ";
    break;
  case 2:
    // MCR, t2MCR, t2MCR2
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 3:
    // MCRR, t2MCRR, t2MCRR2
    printOperand(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 4:
    // MVE_VMOV_rr_q, VMULLslsv2i32, VMULLslsv4i16, VMULLsluv2i32, VMULLsluv4...
    printVectorIndex(MI, 3, STI, O);
    break;
  case 5:
    // PKHBT, t2PKHBT
    printPKHLSLShiftImm(MI, 3, STI, O);
    return;
    break;
  case 6:
    // PKHTB, t2PKHTB
    printPKHASRShiftImm(MI, 3, STI, O);
    return;
    break;
  case 7:
    // SXTAB, SXTAB16, SXTAH, UXTAB, UXTAB16, UXTAH, t2SXTAB, t2SXTAB16, t2SX...
    printRotImmOperand(MI, 3, STI, O);
    return;
    break;
  case 8:
    // USAT, t2USAT
    printShiftImmOperand(MI, 3, STI, O);
    return;
    break;
  case 9:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    O << "]}, ";
    printAddrMode6Operand(MI, 3, STI, O);
    printAddrMode6OffsetOperand(MI, 5, STI, O);
    return;
    break;
  case 10:
    // VLD3LNd16, VLD3LNd32, VLD3LNd8, VLD3LNq16, VLD3LNq32
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 11:
    // VLD3d16, VLD3d16_UPD, VLD3d32, VLD3d32_UPD, VLD3d8, VLD3d8_UPD, VLD3q1...
    O << "}, ";
    break;
  case 12:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32, VST2LNd16, VST2L...
    O << '[';
    break;
  case 13:
    // VMLALslsv2i32, VMLALslsv4i16, VMLALsluv2i32, VMLALsluv4i16, VMLAslfd, ...
    printVectorIndex(MI, 4, STI, O);
    return;
    break;
  case 14:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 15:
    // t2LDRD_POST, t2STRD_POST
    printT2AddrModeImm8s4OffsetOperand(MI, 4, STI, O);
    return;
    break;
  }

  switch (MI->getOpcode()) {
  default: llvm_unreachable("Unexpected opcode.");
  case ARM::LDRD_POST:
  case ARM::MLA:
  case ARM::MLS:
  case ARM::MVE_VCADDf16:
  case ARM::MVE_VCADDf32:
  case ARM::MVE_VCADDi16:
  case ARM::MVE_VCADDi32:
  case ARM::MVE_VCADDi8:
  case ARM::MVE_VCMLAf16:
  case ARM::MVE_VCMLAf32:
  case ARM::MVE_VCMULf16:
  case ARM::MVE_VCMULf32:
  case ARM::MVE_VDWDUPu16:
  case ARM::MVE_VDWDUPu32:
  case ARM::MVE_VDWDUPu8:
  case ARM::MVE_VHCADDs16:
  case ARM::MVE_VHCADDs32:
  case ARM::MVE_VHCADDs8:
  case ARM::MVE_VIWDUPu16:
  case ARM::MVE_VIWDUPu32:
  case ARM::MVE_VIWDUPu8:
  case ARM::MVE_VMLALDAVas16:
  case ARM::MVE_VMLALDAVas32:
  case ARM::MVE_VMLALDAVau16:
  case ARM::MVE_VMLALDAVau32:
  case ARM::MVE_VMLALDAVaxs16:
  case ARM::MVE_VMLALDAVaxs32:
  case ARM::MVE_VMLALDAVs16:
  case ARM::MVE_VMLALDAVs32:
  case ARM::MVE_VMLALDAVu16:
  case ARM::MVE_VMLALDAVu32:
  case ARM::MVE_VMLALDAVxs16:
  case ARM::MVE_VMLALDAVxs32:
  case ARM::MVE_VMLSLDAVas16:
  case ARM::MVE_VMLSLDAVas32:
  case ARM::MVE_VMLSLDAVaxs16:
  case ARM::MVE_VMLSLDAVaxs32:
  case ARM::MVE_VMLSLDAVs16:
  case ARM::MVE_VMLSLDAVs32:
  case ARM::MVE_VMLSLDAVxs16:
  case ARM::MVE_VMLSLDAVxs32:
  case ARM::MVE_VRMLALDAVHas32:
  case ARM::MVE_VRMLALDAVHau32:
  case ARM::MVE_VRMLALDAVHaxs32:
  case ARM::MVE_VRMLALDAVHs32:
  case ARM::MVE_VRMLALDAVHu32:
  case ARM::MVE_VRMLALDAVHxs32:
  case ARM::MVE_VRMLSLDAVHas32:
  case ARM::MVE_VRMLSLDAVHaxs32:
  case ARM::MVE_VRMLSLDAVHs32:
  case ARM::MVE_VRMLSLDAVHxs32:
  case ARM::SBFX:
  case ARM::SMLABB:
  case ARM::SMLABT:
  case ARM::SMLAD:
  case ARM::SMLADX:
  case ARM::SMLALBB:
  case ARM::SMLALBT:
  case ARM::SMLALD:
  case ARM::SMLALDX:
  case ARM::SMLALTB:
  case ARM::SMLALTT:
  case ARM::SMLATB:
  case ARM::SMLATT:
  case ARM::SMLAWB:
  case ARM::SMLAWT:
  case ARM::SMLSD:
  case ARM::SMLSDX:
  case ARM::SMLSLD:
  case ARM::SMLSLDX:
  case ARM::SMMLA:
  case ARM::SMMLAR:
  case ARM::SMMLS:
  case ARM::SMMLSR:
  case ARM::SMULL:
  case ARM::STRD_POST:
  case ARM::UBFX:
  case ARM::UMAAL:
  case ARM::UMULL:
  case ARM::USADA8:
  case ARM::VEXTd16:
  case ARM::VEXTd32:
  case ARM::VEXTd8:
  case ARM::VEXTq16:
  case ARM::VEXTq32:
  case ARM::VEXTq64:
  case ARM::VEXTq8:
  case ARM::VLD3d16:
  case ARM::VLD3d32:
  case ARM::VLD3d8:
  case ARM::VLD3q16:
  case ARM::VLD3q32:
  case ARM::VLD3q8:
  case ARM::VMOVRRS:
  case ARM::VMOVSRR:
  case ARM::VST3d16:
  case ARM::VST3d32:
  case ARM::VST3d8:
  case ARM::VST3q16:
  case ARM::VST3q32:
  case ARM::VST3q8:
  case ARM::t2MLA:
  case ARM::t2MLS:
  case ARM::t2SBFX:
  case ARM::t2SMLABB:
  case ARM::t2SMLABT:
  case ARM::t2SMLAD:
  case ARM::t2SMLADX:
  case ARM::t2SMLAL:
  case ARM::t2SMLALBB:
  case ARM::t2SMLALBT:
  case ARM::t2SMLALD:
  case ARM::t2SMLALDX:
  case ARM::t2SMLALTB:
  case ARM::t2SMLALTT:
  case ARM::t2SMLATB:
  case ARM::t2SMLATT:
  case ARM::t2SMLAWB:
  case ARM::t2SMLAWT:
  case ARM::t2SMLSD:
  case ARM::t2SMLSDX:
  case ARM::t2SMLSLD:
  case ARM::t2SMLSLDX:
  case ARM::t2SMMLA:
  case ARM::t2SMMLAR:
  case ARM::t2SMMLS:
  case ARM::t2SMMLSR:
  case ARM::t2SMULL:
  case ARM::t2STLEXD:
  case ARM::t2STREXD:
  case ARM::t2UBFX:
  case ARM::t2UMAAL:
  case ARM::t2UMLAL:
  case ARM::t2UMULL:
  case ARM::t2USADA8:
    switch (MI->getOpcode()) {
    default: llvm_unreachable("Unexpected opcode.");
    case ARM::LDRD_POST:
    case ARM::STRD_POST:
      printAddrMode3OffsetOperand(MI, 4, STI, O);
      break;
    case ARM::MLA:
    case ARM::MLS:
    case ARM::MVE_VMLALDAVs16:
    case ARM::MVE_VMLALDAVs32:
    case ARM::MVE_VMLALDAVu16:
    case ARM::MVE_VMLALDAVu32:
    case ARM::MVE_VMLALDAVxs16:
    case ARM::MVE_VMLALDAVxs32:
    case ARM::MVE_VMLSLDAVs16:
    case ARM::MVE_VMLSLDAVs32:
    case ARM::MVE_VMLSLDAVxs16:
    case ARM::MVE_VMLSLDAVxs32:
    case ARM::MVE_VRMLALDAVHs32:
    case ARM::MVE_VRMLALDAVHu32:
    case ARM::MVE_VRMLALDAVHxs32:
    case ARM::MVE_VRMLSLDAVHs32:
    case ARM::MVE_VRMLSLDAVHxs32:
    case ARM::SMLABB:
    case ARM::SMLABT:
    case ARM::SMLAD:
    case ARM::SMLADX:
    case ARM::SMLALBB:
    case ARM::SMLALBT:
    case ARM::SMLALD:
    case ARM::SMLALDX:
    case ARM::SMLALTB:
    case ARM::SMLALTT:
    case ARM::SMLATB:
    case ARM::SMLATT:
    case ARM::SMLAWB:
    case ARM::SMLAWT:
    case ARM::SMLSD:
    case ARM::SMLSDX:
    case ARM::SMLSLD:
    case ARM::SMLSLDX:
    case ARM::SMMLA:
    case ARM::SMMLAR:
    case ARM::SMMLS:
    case ARM::SMMLSR:
    case ARM::SMULL:
    case ARM::UMAAL:
    case ARM::UMULL:
    case ARM::USADA8:
    case ARM::VEXTd16:
    case ARM::VEXTd32:
    case ARM::VEXTd8:
    case ARM::VEXTq16:
    case ARM::VEXTq32:
    case ARM::VEXTq64:
    case ARM::VEXTq8:
    case ARM::VMOVRRS:
    case ARM::VMOVSRR:
    case ARM::t2MLA:
    case ARM::t2MLS:
    case ARM::t2SMLABB:
    case ARM::t2SMLABT:
    case ARM::t2SMLAD:
    case ARM::t2SMLADX:
    case ARM::t2SMLAL:
    case ARM::t2SMLALBB:
    case ARM::t2SMLALBT:
    case ARM::t2SMLALD:
    case ARM::t2SMLALDX:
    case ARM::t2SMLALTB:
    case ARM::t2SMLALTT:
    case ARM::t2SMLATB:
    case ARM::t2SMLATT:
    case ARM::t2SMLAWB:
    case ARM::t2SMLAWT:
    case ARM::t2SMLSD:
    case ARM::t2SMLSDX:
    case ARM::t2SMLSLD:
    case ARM::t2SMLSLDX:
    case ARM::t2SMMLA:
    case ARM::t2SMMLAR:
    case ARM::t2SMMLS:
    case ARM::t2SMMLSR:
    case ARM::t2SMULL:
    case ARM::t2UMAAL:
    case ARM::t2UMLAL:
    case ARM::t2UMULL:
    case ARM::t2USADA8:
      printOperand(MI, 3, STI, O);
      break;
    case ARM::MVE_VCADDf16:
    case ARM::MVE_VCADDf32:
    case ARM::MVE_VCADDi16:
    case ARM::MVE_VCADDi32:
    case ARM::MVE_VCADDi8:
    case ARM::MVE_VHCADDs16:
    case ARM::MVE_VHCADDs32:
    case ARM::MVE_VHCADDs8:
      printComplexRotationOp<180, 90>(MI, 3, STI, O);
      break;
    case ARM::MVE_VCMLAf16:
    case ARM::MVE_VCMLAf32:
      printComplexRotationOp<90, 0>(MI, 4, STI, O);
      break;
    case ARM::MVE_VCMULf16:
    case ARM::MVE_VCMULf32:
      printComplexRotationOp<90, 0>(MI, 3, STI, O);
      break;
    case ARM::MVE_VDWDUPu16:
    case ARM::MVE_VDWDUPu32:
    case ARM::MVE_VDWDUPu8:
    case ARM::MVE_VIWDUPu16:
    case ARM::MVE_VIWDUPu32:
    case ARM::MVE_VIWDUPu8:
      printOperand(MI, 4, STI, O);
      break;
    case ARM::MVE_VMLALDAVas16:
    case ARM::MVE_VMLALDAVas32:
    case ARM::MVE_VMLALDAVau16:
    case ARM::MVE_VMLALDAVau32:
    case ARM::MVE_VMLALDAVaxs16:
    case ARM::MVE_VMLALDAVaxs32:
    case ARM::MVE_VMLSLDAVas16:
    case ARM::MVE_VMLSLDAVas32:
    case ARM::MVE_VMLSLDAVaxs16:
    case ARM::MVE_VMLSLDAVaxs32:
    case ARM::MVE_VRMLALDAVHas32:
    case ARM::MVE_VRMLALDAVHau32:
    case ARM::MVE_VRMLALDAVHaxs32:
    case ARM::MVE_VRMLSLDAVHas32:
    case ARM::MVE_VRMLSLDAVHaxs32:
      printOperand(MI, 5, STI, O);
      break;
    case ARM::SBFX:
    case ARM::UBFX:
    case ARM::t2SBFX:
    case ARM::t2UBFX:
      printImmPlusOneOperand(MI, 3, STI, O);
      break;
    case ARM::VLD3d16:
    case ARM::VLD3d32:
    case ARM::VLD3d8:
    case ARM::VLD3q16:
    case ARM::VLD3q32:
    case ARM::VLD3q8:
      printAddrMode6Operand(MI, 3, STI, O);
      break;
    case ARM::VST3d16:
    case ARM::VST3d32:
    case ARM::VST3d8:
    case ARM::VST3q16:
    case ARM::VST3q32:
    case ARM::VST3q8:
      printAddrMode6Operand(MI, 0, STI, O);
      break;
    case ARM::t2STLEXD:
    case ARM::t2STREXD:
      printAddrMode7Operand(MI, 3, STI, O);
      break;
    }
    return;
    break;
  case ARM::MVE_VMOV_rr_q:
    O << ", ";
    printOperand(MI, 2, STI, O);
    printVectorIndex(MI, 4, STI, O);
    return;
    break;
  case ARM::VLD3d16_UPD:
  case ARM::VLD3d32_UPD:
  case ARM::VLD3d8_UPD:
  case ARM::VLD3q16_UPD:
  case ARM::VLD3q32_UPD:
  case ARM::VLD3q8_UPD:
    printAddrMode6Operand(MI, 4, STI, O);
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case ARM::VLD4LNd16:
  case ARM::VLD4LNd32:
  case ARM::VLD4LNd8:
  case ARM::VLD4LNq16:
  case ARM::VLD4LNq32:
    printNoHashImmediate(MI, 10, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 4, STI, O);
    return;
    break;
  case ARM::VLD4d16:
  case ARM::VLD4d32:
  case ARM::VLD4d8:
  case ARM::VLD4q16:
  case ARM::VLD4q32:
  case ARM::VLD4q8:
    printOperand(MI, 3, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 4, STI, O);
    return;
    break;
  case ARM::VLD4d16_UPD:
  case ARM::VLD4d32_UPD:
  case ARM::VLD4d8_UPD:
  case ARM::VLD4q16_UPD:
  case ARM::VLD4q32_UPD:
  case ARM::VLD4q8_UPD:
    printOperand(MI, 3, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case ARM::VMULLslsv2i32:
  case ARM::VMULLslsv4i16:
  case ARM::VMULLsluv2i32:
  case ARM::VMULLsluv4i16:
  case ARM::VMULslfd:
  case ARM::VMULslfq:
  case ARM::VMULslhd:
  case ARM::VMULslhq:
  case ARM::VMULslv2i32:
  case ARM::VMULslv4i16:
  case ARM::VMULslv4i32:
  case ARM::VMULslv8i16:
  case ARM::VQDMULHslv2i32:
  case ARM::VQDMULHslv4i16:
  case ARM::VQDMULHslv4i32:
  case ARM::VQDMULHslv8i16:
  case ARM::VQDMULLslv2i32:
  case ARM::VQDMULLslv4i16:
  case ARM::VQRDMULHslv2i32:
  case ARM::VQRDMULHslv4i16:
  case ARM::VQRDMULHslv4i32:
  case ARM::VQRDMULHslv8i16:
    return;
    break;
  case ARM::VST2LNd16:
  case ARM::VST2LNd32:
  case ARM::VST2LNd8:
  case ARM::VST2LNq16:
  case ARM::VST2LNq32:
    printNoHashImmediate(MI, 4, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case ARM::VST3LNd16:
  case ARM::VST3LNd32:
  case ARM::VST3LNd8:
  case ARM::VST3LNq16:
  case ARM::VST3LNq32:
    printNoHashImmediate(MI, 5, STI, O);
    O << "], ";
    printOperand(MI, 4, STI, O);
    O << '[';
    printNoHashImmediate(MI, 5, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case ARM::VST4LNd16:
  case ARM::VST4LNd32:
  case ARM::VST4LNd8:
  case ARM::VST4LNq16:
  case ARM::VST4LNq32:
    printNoHashImmediate(MI, 6, STI, O);
    O << "], ";
    printOperand(MI, 4, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "], ";
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case ARM::VST4d16:
  case ARM::VST4d32:
  case ARM::VST4d8:
  case ARM::VST4q16:
  case ARM::VST4q32:
  case ARM::VST4q8:
    printOperand(MI, 5, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  }
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *ARMInstPrinter::
getRegisterName(unsigned RegNo, unsigned AltIdx) {
  assert(RegNo && RegNo < 295 && "Invalid register number!");


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrsNoRegAltName[] = {
  /* 0 */ "D4_D6_D8_D10\0"
  /* 13 */ "D7_D8_D9_D10\0"
  /* 26 */ "Q7_Q8_Q9_Q10\0"
  /* 39 */ "d10\0"
  /* 43 */ "q10\0"
  /* 47 */ "r10\0"
  /* 51 */ "s10\0"
  /* 55 */ "D14_D16_D18_D20\0"
  /* 71 */ "D17_D18_D19_D20\0"
  /* 87 */ "d20\0"
  /* 91 */ "s20\0"
  /* 95 */ "D24_D26_D28_D30\0"
  /* 111 */ "D27_D28_D29_D30\0"
  /* 127 */ "d30\0"
  /* 131 */ "s30\0"
  /* 135 */ "d0\0"
  /* 138 */ "p0\0"
  /* 141 */ "q0\0"
  /* 144 */ "mvfr0\0"
  /* 150 */ "s0\0"
  /* 153 */ "D9_D10_D11\0"
  /* 164 */ "D5_D7_D9_D11\0"
  /* 177 */ "Q8_Q9_Q10_Q11\0"
  /* 191 */ "R10_R11\0"
  /* 199 */ "d11\0"
  /* 203 */ "q11\0"
  /* 207 */ "r11\0"
  /* 211 */ "s11\0"
  /* 215 */ "D19_D20_D21\0"
  /* 227 */ "D15_D17_D19_D21\0"
  /* 243 */ "d21\0"
  /* 247 */ "s21\0"
  /* 251 */ "D29_D30_D31\0"
  /* 263 */ "D25_D27_D29_D31\0"
  /* 279 */ "d31\0"
  /* 283 */ "s31\0"
  /* 287 */ "Q0_Q1\0"
  /* 293 */ "R0_R1\0"
  /* 299 */ "d1\0"
  /* 302 */ "q1\0"
  /* 305 */ "mvfr1\0"
  /* 311 */ "s1\0"
  /* 314 */ "D6_D8_D10_D12\0"
  /* 328 */ "D9_D10_D11_D12\0"
  /* 343 */ "Q9_Q10_Q11_Q12\0"
  /* 358 */ "d12\0"
  /* 362 */ "q12\0"
  /* 366 */ "r12\0"
  /* 370 */ "s12\0"
  /* 374 */ "D16_D18_D20_D22\0"
  /* 390 */ "D19_D20_D21_D22\0"
  /* 406 */ "d22\0"
  /* 410 */ "s22\0"
  /* 414 */ "D0_D2\0"
  /* 420 */ "D0_D1_D2\0"
  /* 429 */ "Q1_Q2\0"
  /* 435 */ "d2\0"
  /* 438 */ "q2\0"
  /* 441 */ "mvfr2\0"
  /* 447 */ "s2\0"
  /* 450 */ "fpinst2\0"
  /* 458 */ "D7_D9_D11_D13\0"
  /* 472 */ "D11_D12_D13\0"
  /* 484 */ "Q10_Q11_Q12_Q13\0"
  /* 500 */ "d13\0"
  /* 504 */ "q13\0"
  /* 508 */ "s13\0"
  /* 512 */ "D17_D19_D21_D23\0"
  /* 528 */ "D21_D22_D23\0"
  /* 540 */ "d23\0"
  /* 544 */ "s23\0"
  /* 548 */ "D1_D3\0"
  /* 554 */ "D1_D2_D3\0"
  /* 563 */ "Q0_Q1_Q2_Q3\0"
  /* 575 */ "R2_R3\0"
  /* 581 */ "d3\0"
  /* 584 */ "q3\0"
  /* 587 */ "r3\0"
  /* 590 */ "s3\0"
  /* 593 */ "D8_D10_D12_D14\0"
  /* 608 */ "D11_D12_D13_D14\0"
  /* 624 */ "Q11_Q12_Q13_Q14\0"
  /* 640 */ "d14\0"
  /* 644 */ "q14\0"
  /* 648 */ "s14\0"
  /* 652 */ "D18_D20_D22_D24\0"
  /* 668 */ "D21_D22_D23_D24\0"
  /* 684 */ "d24\0"
  /* 688 */ "s24\0"
  /* 692 */ "D0_D2_D4\0"
  /* 701 */ "D1_D2_D3_D4\0"
  /* 713 */ "Q1_Q2_Q3_Q4\0"
  /* 725 */ "d4\0"
  /* 728 */ "q4\0"
  /* 731 */ "r4\0"
  /* 734 */ "s4\0"
  /* 737 */ "D9_D11_D13_D15\0"
  /* 752 */ "D13_D14_D15\0"
  /* 764 */ "Q12_Q13_Q14_Q15\0"
  /* 780 */ "d15\0"
  /* 784 */ "q15\0"
  /* 788 */ "s15\0"
  /* 792 */ "D19_D21_D23_D25\0"
  /* 808 */ "D23_D24_D25\0"
  /* 820 */ "d25\0"
  /* 824 */ "s25\0"
  /* 828 */ "D1_D3_D5\0"
  /* 837 */ "D3_D4_D5\0"
  /* 846 */ "Q2_Q3_Q4_Q5\0"
  /* 858 */ "R4_R5\0"
  /* 864 */ "d5\0"
  /* 867 */ "q5\0"
  /* 870 */ "r5\0"
  /* 873 */ "s5\0"
  /* 876 */ "D10_D12_D14_D16\0"
  /* 892 */ "D13_D14_D15_D16\0"
  /* 908 */ "d16\0"
  /* 912 */ "s16\0"
  /* 916 */ "D20_D22_D24_D26\0"
  /* 932 */ "D23_D24_D25_D26\0"
  /* 948 */ "d26\0"
  /* 952 */ "s26\0"
  /* 956 */ "D0_D2_D4_D6\0"
  /* 968 */ "D3_D4_D5_D6\0"
  /* 980 */ "Q3_Q4_Q5_Q6\0"
  /* 992 */ "d6\0"
  /* 995 */ "q6\0"
  /* 998 */ "r6\0"
  /* 1001 */ "s6\0"
  /* 1004 */ "D11_D13_D15_D17\0"
  /* 1020 */ "D15_D16_D17\0"
  /* 1032 */ "d17\0"
  /* 1036 */ "s17\0"
  /* 1040 */ "D21_D23_D25_D27\0"
  /* 1056 */ "D25_D26_D27\0"
  /* 1068 */ "d27\0"
  /* 1072 */ "s27\0"
  /* 1076 */ "D1_D3_D5_D7\0"
  /* 1088 */ "D5_D6_D7\0"
  /* 1097 */ "Q4_Q5_Q6_Q7\0"
  /* 1109 */ "R6_R7\0"
  /* 1115 */ "d7\0"
  /* 1118 */ "q7\0"
  /* 1121 */ "r7\0"
  /* 1124 */ "s7\0"
  /* 1127 */ "D12_D14_D16_D18\0"
  /* 1143 */ "D15_D16_D17_D18\0"
  /* 1159 */ "d18\0"
  /* 1163 */ "s18\0"
  /* 1167 */ "D22_D24_D26_D28\0"
  /* 1183 */ "D25_D26_D27_D28\0"
  /* 1199 */ "d28\0"
  /* 1203 */ "s28\0"
  /* 1207 */ "D2_D4_D6_D8\0"
  /* 1219 */ "D5_D6_D7_D8\0"
  /* 1231 */ "Q5_Q6_Q7_Q8\0"
  /* 1243 */ "d8\0"
  /* 1246 */ "q8\0"
  /* 1249 */ "r8\0"
  /* 1252 */ "s8\0"
  /* 1255 */ "D13_D15_D17_D19\0"
  /* 1271 */ "D17_D18_D19\0"
  /* 1283 */ "d19\0"
  /* 1287 */ "s19\0"
  /* 1291 */ "D23_D25_D27_D29\0"
  /* 1307 */ "D27_D28_D29\0"
  /* 1319 */ "d29\0"
  /* 1323 */ "s29\0"
  /* 1327 */ "D3_D5_D7_D9\0"
  /* 1339 */ "D7_D8_D9\0"
  /* 1348 */ "Q6_Q7_Q8_Q9\0"
  /* 1360 */ "R8_R9\0"
  /* 1366 */ "d9\0"
  /* 1369 */ "q9\0"
  /* 1372 */ "r9\0"
  /* 1375 */ "s9\0"
  /* 1378 */ "R12_SP\0"
  /* 1385 */ "pc\0"
  /* 1388 */ "fpscr_nzcvqc\0"
  /* 1401 */ "fpexc\0"
  /* 1407 */ "fpsid\0"
  /* 1413 */ "itstate\0"
  /* 1421 */ "sp\0"
  /* 1424 */ "fpscr\0"
  /* 1430 */ "lr\0"
  /* 1433 */ "vpr\0"
  /* 1437 */ "apsr\0"
  /* 1442 */ "cpsr\0"
  /* 1447 */ "spsr\0"
  /* 1452 */ "zr\0"
  /* 1455 */ "fpcxtns\0"
  /* 1463 */ "fpcxts\0"
  /* 1470 */ "fpinst\0"
  /* 1477 */ "fpscr_nzcv\0"
  /* 1488 */ "apsr_nzcv\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint16_t RegAsmOffsetNoRegAltName[] = {
    1437, 1488, 1442, 1455, 1463, 1401, 1470, 1424, 1477, 1388, 1407, 1413, 1430, 1385, 
    1421, 1447, 1433, 1452, 135, 299, 435, 581, 725, 864, 992, 1115, 1243, 1366, 
    39, 199, 358, 500, 640, 780, 908, 1032, 1159, 1283, 87, 243, 406, 540, 
    684, 820, 948, 1068, 1199, 1319, 127, 279, 450, 144, 305, 441, 138, 141, 
    302, 438, 584, 728, 867, 995, 1118, 1246, 1369, 43, 203, 362, 504, 644, 
    784, 147, 308, 444, 587, 731, 870, 998, 1121, 1249, 1372, 47, 207, 366, 
    150, 311, 447, 590, 734, 873, 1001, 1124, 1252, 1375, 51, 211, 370, 508, 
    648, 788, 912, 1036, 1163, 1287, 91, 247, 410, 544, 688, 824, 952, 1072, 
    1203, 1323, 131, 283, 414, 548, 695, 831, 962, 1082, 1213, 1333, 6, 170, 
    320, 464, 600, 744, 884, 1012, 1135, 1263, 63, 235, 382, 520, 660, 800, 
    924, 1048, 1175, 1299, 103, 271, 287, 429, 569, 719, 852, 986, 1103, 1237, 
    1354, 32, 183, 350, 492, 632, 772, 563, 713, 846, 980, 1097, 1231, 1348, 
    26, 177, 343, 484, 624, 764, 293, 575, 858, 1109, 1360, 191, 1378, 420, 
    554, 704, 837, 971, 1088, 1222, 1339, 16, 153, 331, 472, 612, 752, 896, 
    1020, 1147, 1271, 75, 215, 394, 528, 672, 808, 936, 1056, 1187, 1307, 115, 
    251, 692, 828, 959, 1079, 1210, 1330, 3, 167, 317, 461, 596, 740, 880, 
    1008, 1131, 1259, 59, 231, 378, 516, 656, 796, 920, 1044, 1171, 1295, 99, 
    267, 956, 1076, 1207, 1327, 0, 164, 314, 458, 593, 737, 876, 1004, 1127, 
    1255, 55, 227, 374, 512, 652, 792, 916, 1040, 1167, 1291, 95, 263, 423, 
    707, 974, 1225, 19, 335, 616, 900, 1151, 79, 398, 676, 940, 1191, 119, 
    701, 968, 1219, 13, 328, 608, 892, 1143, 71, 390, 668, 932, 1183, 111, 
  };


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
  static const char AsmStrsRegNamesRaw[] = {
  /* 0 */ "r13\0"
  /* 4 */ "r14\0"
  /* 8 */ "r15\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint8_t RegAsmOffsetRegNamesRaw[] = {
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 8, 
    0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
  };

  switch(AltIdx) {
  default: llvm_unreachable("Invalid register alt name index!");
  case ARM::NoRegAltName:
    assert(*(AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1]) &&
           "Invalid alt name index for register!");
    return AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1];
  case ARM::RegNamesRaw:
    if (!*(AsmStrsRegNamesRaw+RegAsmOffsetRegNamesRaw[RegNo-1]))
      return getRegisterName(RegNo, ARM::NoRegAltName);
    return AsmStrsRegNamesRaw+RegAsmOffsetRegNamesRaw[RegNo-1];
  }
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool ARMInstPrinter::printAliasInstr(const MCInst *MI, const MCSubtargetInfo &STI, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {ARM::DSB, 0, 3 },
    {ARM::HINT, 3, 8 },
    {ARM::MVE_VMLADAVas16, 11, 1 },
    {ARM::MVE_VMLADAVas32, 12, 1 },
    {ARM::MVE_VMLADAVas8, 13, 1 },
    {ARM::MVE_VMLADAVau16, 14, 1 },
    {ARM::MVE_VMLADAVau32, 15, 1 },
    {ARM::MVE_VMLADAVau8, 16, 1 },
    {ARM::MVE_VMLADAVs16, 17, 1 },
    {ARM::MVE_VMLADAVs32, 18, 1 },
    {ARM::MVE_VMLADAVs8, 19, 1 },
    {ARM::MVE_VMLADAVu16, 20, 1 },
    {ARM::MVE_VMLADAVu32, 21, 1 },
    {ARM::MVE_VMLADAVu8, 22, 1 },
    {ARM::MVE_VMLALDAVas16, 23, 1 },
    {ARM::MVE_VMLALDAVas32, 24, 1 },
    {ARM::MVE_VMLALDAVau16, 25, 1 },
    {ARM::MVE_VMLALDAVau32, 26, 1 },
    {ARM::MVE_VMLALDAVs16, 27, 1 },
    {ARM::MVE_VMLALDAVs32, 28, 1 },
    {ARM::MVE_VMLALDAVu16, 29, 1 },
    {ARM::MVE_VMLALDAVu32, 30, 1 },
    {ARM::MVE_VORR, 31, 1 },
    {ARM::MVE_VRMLALDAVHas32, 32, 1 },
    {ARM::MVE_VRMLALDAVHau32, 33, 1 },
    {ARM::MVE_VRMLALDAVHs32, 34, 1 },
    {ARM::MVE_VRMLALDAVHu32, 35, 1 },
    {ARM::t2CSINC, 36, 2 },
    {ARM::t2CSINV, 38, 2 },
    {ARM::t2CSNEG, 40, 1 },
    {ARM::t2DSB, 41, 3 },
    {ARM::t2HINT, 44, 8 },
    {ARM::t2SUBS_PC_LR, 52, 1 },
    {ARM::tHINT, 53, 6 },
  };

  static const AliasPattern Patterns[] = {
    // ARM::DSB - 0
    {0, 0, 1, 3 },
    {5, 3, 1, 3 },
    {11, 6, 1, 3 },
    // ARM::HINT - 3
    {15, 9, 3, 3 },
    {23, 12, 3, 3 },
    {33, 15, 3, 3 },
    {41, 18, 3, 3 },
    {49, 21, 3, 3 },
    {57, 24, 3, 3 },
    {66, 27, 3, 3 },
    {74, 30, 3, 3 },
    // ARM::MVE_VMLADAVas16 - 11
    {83, 33, 6, 6 },
    // ARM::MVE_VMLADAVas32 - 12
    {109, 39, 6, 6 },
    // ARM::MVE_VMLADAVas8 - 13
    {135, 45, 6, 6 },
    // ARM::MVE_VMLADAVau16 - 14
    {160, 51, 6, 6 },
    // ARM::MVE_VMLADAVau32 - 15
    {186, 57, 6, 6 },
    // ARM::MVE_VMLADAVau8 - 16
    {212, 63, 6, 6 },
    // ARM::MVE_VMLADAVs16 - 17
    {237, 69, 5, 5 },
    // ARM::MVE_VMLADAVs32 - 18
    {262, 74, 5, 5 },
    // ARM::MVE_VMLADAVs8 - 19
    {287, 79, 5, 5 },
    // ARM::MVE_VMLADAVu16 - 20
    {311, 84, 5, 5 },
    // ARM::MVE_VMLADAVu32 - 21
    {336, 89, 5, 5 },
    // ARM::MVE_VMLADAVu8 - 22
    {361, 94, 5, 5 },
    // ARM::MVE_VMLALDAVas16 - 23
    {385, 99, 8, 8 },
    // ARM::MVE_VMLALDAVas32 - 24
    {416, 107, 8, 8 },
    // ARM::MVE_VMLALDAVau16 - 25
    {447, 115, 8, 8 },
    // ARM::MVE_VMLALDAVau32 - 26
    {478, 123, 8, 8 },
    // ARM::MVE_VMLALDAVs16 - 27
    {509, 131, 6, 6 },
    // ARM::MVE_VMLALDAVs32 - 28
    {539, 137, 6, 6 },
    // ARM::MVE_VMLALDAVu16 - 29
    {569, 143, 6, 6 },
    // ARM::MVE_VMLALDAVu32 - 30
    {599, 149, 6, 6 },
    // ARM::MVE_VORR - 31
    {629, 155, 6, 5 },
    // ARM::MVE_VRMLALDAVHas32 - 32
    {645, 160, 8, 8 },
    // ARM::MVE_VRMLALDAVHau32 - 33
    {678, 168, 8, 8 },
    // ARM::MVE_VRMLALDAVHs32 - 34
    {711, 176, 6, 6 },
    // ARM::MVE_VRMLALDAVHu32 - 35
    {743, 182, 6, 6 },
    // ARM::t2CSINC - 36
    {775, 188, 4, 4 },
    {789, 192, 4, 4 },
    // ARM::t2CSINV - 38
    {807, 196, 4, 4 },
    {822, 200, 4, 4 },
    // ARM::t2CSNEG - 40
    {840, 204, 4, 4 },
    // ARM::t2DSB - 41
    {0, 208, 3, 6 },
    {5, 214, 3, 6 },
    {858, 220, 3, 2 },
    // ARM::t2HINT - 44
    {866, 222, 3, 3 },
    {876, 225, 3, 3 },
    {888, 228, 3, 3 },
    {898, 231, 3, 3 },
    {908, 234, 3, 3 },
    {918, 237, 3, 4 },
    {929, 241, 3, 4 },
    {74, 245, 3, 3 },
    // ARM::t2SUBS_PC_LR - 52
    {939, 248, 3, 4 },
    // ARM::tHINT - 53
    {15, 252, 3, 3 },
    {23, 255, 3, 3 },
    {33, 258, 3, 3 },
    {41, 261, 3, 3 },
    {49, 264, 3, 3 },
    {57, 267, 3, 4 },
  };

  static const AliasPatternCond Conds[] = {
    // (DSB 0) - 0
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    // (DSB 4) - 3
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    // (DSB 12) - 6
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureDFB},
    // (HINT 0, pred:$p) - 9
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 1, pred:$p) - 12
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 2, pred:$p) - 15
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 3, pred:$p) - 18
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 4, pred:$p) - 21
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (HINT 5, pred:$p) - 24
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV8Ops},
    // (HINT 16, pred:$p) - 27
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureRAS},
    // (HINT 20, pred:$p) - 30
    {AliasPatternCond::K_Imm, uint32_t(20)},
    {AliasPatternCond::K_NegFeature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6KOps},
    // (MVE_VMLADAVas16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 33
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVas32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 39
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVas8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 45
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVau16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 51
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVau32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 57
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVau8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 63
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVs16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 69
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVs32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 74
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVs8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 79
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVu16 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 84
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVu32 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 89
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLADAVu8 tGPREven:$RdaDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 94
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVas16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 99
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVas32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 107
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVau16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 115
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVau32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 123
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVs16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 131
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVs32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 137
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVu16 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 143
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VMLALDAVu32 tGPREven:$RdaLoDest, tGPROdd:$RdaHiDest, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 149
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VORR MQPR:$Qd, MQPR:$Qm, MQPR:$Qm, vpred_r:$vp) - 155
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHas32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 160
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHau32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 168
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHs32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 176
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (MVE_VRMLALDAVHu32 tGPREven:$RdaLo, tGPROdd:$RdaHi, MQPR:$Qn, MQPR:$Qm, vpred_n:$vp) - 182
    {AliasPatternCond::K_RegClass, ARM::tGPREvenRegClassID},
    {AliasPatternCond::K_RegClass, ARM::tGPROddRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::MQPRRegClassID},
    {AliasPatternCond::K_Feature, ARM::HasMVEIntegerOps},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    // (t2CSINC rGPR:$Rd, ZR, ZR, pred_noal_inv:$fcond) - 188
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSINC rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 192
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::GPRwithZRnospRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSINV rGPR:$Rd, ZR, ZR, pred_noal_inv:$fcond) - 196
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Reg, ARM::ZR},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSINV rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 200
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::GPRwithZRnospRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2CSNEG rGPR:$Rd, GPRwithZRnosp:$Rn, GPRwithZRnosp:$Rn, pred_noal_inv:$fcond) - 204
    {AliasPatternCond::K_RegClass, ARM::rGPRRegClassID},
    {AliasPatternCond::K_RegClass, ARM::GPRwithZRnospRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Feature, ARM::HasV8_1MMainlineOps},
    // (t2DSB 0, 14, 0) - 208
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2DSB 4, 14, 0) - 214
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::FeatureDB},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2DSB 12, pred:$p) - 220
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Feature, ARM::FeatureDFB},
    // (t2HINT 0, pred:$p) - 222
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 1, pred:$p) - 225
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 2, pred:$p) - 228
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 3, pred:$p) - 231
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 4, pred:$p) - 234
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2HINT 5, pred:$p) - 237
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::HasV8Ops},
    // (t2HINT 16, pred:$p) - 241
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::FeatureRAS},
    // (t2HINT 20, pred:$p) - 245
    {AliasPatternCond::K_Imm, uint32_t(20)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    // (t2SUBS_PC_LR 0, pred:$p) - 248
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::FeatureVirtualization},
    // (tHINT 0, pred:$p) - 252
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 1, pred:$p) - 255
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 2, pred:$p) - 258
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 3, pred:$p) - 261
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 4, pred:$p) - 264
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::HasV6MOps},
    // (tHINT 5, pred:$p) - 267
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_Feature, ARM::ModeThumb},
    {AliasPatternCond::K_Feature, ARM::FeatureThumb2},
    {AliasPatternCond::K_Feature, ARM::HasV8Ops},
  };

  static const char AsmStrings[] =
    /* 0 */ "ssbb\0"
    /* 5 */ "pssbb\0"
    /* 11 */ "dfb\0"
    /* 15 */ "nop$\xFF\x02\x01\0"
    /* 23 */ "yield$\xFF\x02\x01\0"
    /* 33 */ "wfe$\xFF\x02\x01\0"
    /* 41 */ "wfi$\xFF\x02\x01\0"
    /* 49 */ "sev$\xFF\x02\x01\0"
    /* 57 */ "sevl$\xFF\x02\x01\0"
    /* 66 */ "esb$\xFF\x02\x01\0"
    /* 74 */ "csdb$\xFF\x02\x01\0"
    /* 83 */ "vmlava$\xFF\x05\x02.s16	$\x01, $\x03, $\x04\0"
    /* 109 */ "vmlava$\xFF\x05\x02.s32	$\x01, $\x03, $\x04\0"
    /* 135 */ "vmlava$\xFF\x05\x02.s8	$\x01, $\x03, $\x04\0"
    /* 160 */ "vmlava$\xFF\x05\x02.u16	$\x01, $\x03, $\x04\0"
    /* 186 */ "vmlava$\xFF\x05\x02.u32	$\x01, $\x03, $\x04\0"
    /* 212 */ "vmlava$\xFF\x05\x02.u8	$\x01, $\x03, $\x04\0"
    /* 237 */ "vmlav$\xFF\x04\x02.s16	$\x01, $\x02, $\x03\0"
    /* 262 */ "vmlav$\xFF\x04\x02.s32	$\x01, $\x02, $\x03\0"
    /* 287 */ "vmlav$\xFF\x04\x02.s8	$\x01, $\x02, $\x03\0"
    /* 311 */ "vmlav$\xFF\x04\x02.u16	$\x01, $\x02, $\x03\0"
    /* 336 */ "vmlav$\xFF\x04\x02.u32	$\x01, $\x02, $\x03\0"
    /* 361 */ "vmlav$\xFF\x04\x02.u8	$\x01, $\x02, $\x03\0"
    /* 385 */ "vmlalva$\xFF\x07\x02.s16	$\x01, $\x02, $\x05, $\x06\0"
    /* 416 */ "vmlalva$\xFF\x07\x02.s32	$\x01, $\x02, $\x05, $\x06\0"
    /* 447 */ "vmlalva$\xFF\x07\x02.u16	$\x01, $\x02, $\x05, $\x06\0"
    /* 478 */ "vmlalva$\xFF\x07\x02.u32	$\x01, $\x02, $\x05, $\x06\0"
    /* 509 */ "vmlalv$\xFF\x05\x02.s16	$\x01, $\x02, $\x03, $\x04\0"
    /* 539 */ "vmlalv$\xFF\x05\x02.s32	$\x01, $\x02, $\x03, $\x04\0"
    /* 569 */ "vmlalv$\xFF\x05\x02.u16	$\x01, $\x02, $\x03, $\x04\0"
    /* 599 */ "vmlalv$\xFF\x05\x02.u32	$\x01, $\x02, $\x03, $\x04\0"
    /* 629 */ "vmov$\xFF\x04\x02	$\x01, $\x02\0"
    /* 645 */ "vrmlalvha$\xFF\x07\x02.s32	$\x01, $\x02, $\x05, $\x06\0"
    /* 678 */ "vrmlalvha$\xFF\x07\x02.u32	$\x01, $\x02, $\x05, $\x06\0"
    /* 711 */ "vrmlalvh$\xFF\x05\x02.s32	$\x01, $\x02, $\x03, $\x04\0"
    /* 743 */ "vrmlalvh$\xFF\x05\x02.u32	$\x01, $\x02, $\x03, $\x04\0"
    /* 775 */ "cset	$\x01, $\xFF\x04\x03\0"
    /* 789 */ "cinc	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 807 */ "csetm	$\x01, $\xFF\x04\x03\0"
    /* 822 */ "cinv	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 840 */ "cneg	$\x01, $\x02, $\xFF\x04\x03\0"
    /* 858 */ "dfb$\xFF\x02\x01\0"
    /* 866 */ "nop$\xFF\x02\x01.w\0"
    /* 876 */ "yield$\xFF\x02\x01.w\0"
    /* 888 */ "wfe$\xFF\x02\x01.w\0"
    /* 898 */ "wfi$\xFF\x02\x01.w\0"
    /* 908 */ "sev$\xFF\x02\x01.w\0"
    /* 918 */ "sevl$\xFF\x02\x01.w\0"
    /* 929 */ "esb$\xFF\x02\x01.w\0"
    /* 939 */ "eret$\xFF\x02\x01\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, &STI, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, STI, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, STI, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void ARMInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         const MCSubtargetInfo &STI,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printPredicateOperand(MI, OpIdx, STI, OS);
    break;
  case 1:
    printVPTPredicateOperand(MI, OpIdx, STI, OS);
    break;
  case 2:
    printMandatoryInvertedPredicateOperand(MI, OpIdx, STI, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
